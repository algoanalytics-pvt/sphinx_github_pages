Search.setIndex({"docnames": ["candlestick_patterns", "candlestick_patterns.candlestick", "docker_chatbot", "docker_correlation", "docker_debrief", "docker_enrichment", "docker_microservices", "docker_news_aggregator", "docker_search", "docker_search.tests", "docker_search_ec2", "docker_search_ec2.tests", "docker_stock_ingestion", "docker_stock_prediction", "docker_stock_prediction.docker_stock_prediction", "docker_todays_sentiment", "docker_topics", "docker_topics_earning_call_transcripts", "docker_trend_prediction", "docker_tweets", "docker_tweets.Bloomberg_Scraping_Bot_Test", "docker_tweets.News & Tweets Migration", "index", "modules", "news_aggregator_API"], "filenames": ["candlestick_patterns.rst", "candlestick_patterns.candlestick.rst", "docker_chatbot.rst", "docker_correlation.rst", "docker_debrief.rst", "docker_enrichment.rst", "docker_microservices.rst", "docker_news_aggregator.rst", "docker_search.rst", "docker_search.tests.rst", "docker_search_ec2.rst", "docker_search_ec2.tests.rst", "docker_stock_ingestion.rst", "docker_stock_prediction.rst", "docker_stock_prediction.docker_stock_prediction.rst", "docker_todays_sentiment.rst", "docker_topics.rst", "docker_topics_earning_call_transcripts.rst", "docker_trend_prediction.rst", "docker_tweets.rst", "docker_tweets.Bloomberg_Scraping_Bot_Test.rst", "docker_tweets.News & Tweets Migration.rst", "index.rst", "modules.rst", "news_aggregator_API.rst"], "titles": ["candlestick_patterns package", "candlestick_patterns.candlestick package", "docker_chatbot package", "docker_correlation package", "docker_debrief package", "docker_enrichment package", "docker_microservices package", "docker_news_aggregator package", "docker_search package", "docker_search.tests package", "docker_search_ec2 package", "docker_search_ec2.tests package", "docker_stock_ingestion package", "docker_stock_prediction package", "docker_stock_prediction.docker_stock_prediction package", "docker_todays_sentiment package", "docker_topics package", "docker_topics_earning_call_transcripts package", "docker_trend_prediction package", "docker_tweets package", "docker_tweets.Bloomberg_Scraping_Bot_Test package", "docker_tweets.News &amp; Tweets Migration package", "Welcome to AlgoFabric-Backend\u2019s documentation!", "fabric_backend_AWS", "news_aggregator_API package"], "terms": {"candlestick": [0, 23], "get_jsonparsed_data": [0, 23], "url": [0, 19], "sourc": [0, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 14, 15, 17, 18, 19, 20, 24], "get_ohlc_data": [0, 23], "symbol": [0, 3, 4, 7, 14, 15], "target_d": 0, "handle_indecisive_pattern": [0, 23], "row": [0, 8, 10, 14], "identify_single_candlestick_pattern": [0, 23], "map_pattern": [0, 23], "download_data_from_s3_fil": [0, 23], "bucket_nam": 0, "str": [0, 3, 4, 5, 8, 10, 14, 19], "file_path": 0, "dict": [0, 3, 4, 5, 7, 8, 10, 15], "download": [0, 12], "data": [0, 3, 4, 5, 7, 8, 10, 12, 14, 15, 18, 19], "present": [0, 8, 10, 12, 14, 19], "given": [0, 4, 5, 8, 10, 19], "file": [0, 3, 4, 7, 8, 10, 14, 15, 19], "locat": [0, 12], "s3": [0, 4, 14], "bucket": [0, 4, 7, 14], "arg": [0, 3, 4, 5, 7, 8, 10, 15, 19], "name": [0, 4, 5, 7, 8, 10, 12, 14, 19], "path": [0, 14], "return": [0, 3, 4, 8, 10, 12, 15, 19], "contain": [0, 3, 4, 5, 7, 8, 10, 12, 17, 19], "from": [0, 3, 4, 5, 8, 10, 12, 14, 18, 19], "download_files_from_s3": [0, 23], "ticker_id": [0, 4, 5, 12, 14, 18], "json_folder_path": 0, "upload_data_to_s3": [0, 23], "data_dict": 0, "file_nam": [0, 3, 4, 7, 8, 10, 15], "thi": [0, 4, 5, 8, 10, 12, 19], "function": [0, 4, 5, 8, 10, 12, 14, 19], "directli": [0, 8, 10], "respect": [0, 8, 10, 14], "dictionari": [0, 3, 4, 5, 8, 10], "compani": [0, 4, 5, 7, 12, 14, 17, 19], "destin": 0, "upload_json_file_to_s3": [0, 23], "json": [0, 3, 4, 7, 15], "aw": [0, 4, 12, 19], "sting": [0, 4, 7], "filenam": [0, 3, 4, 7, 8, 10, 15, 17], "currenti": [0, 4, 7, 15], "ticker": [0, 3, 4, 5, 7, 14, 15, 19], "object": [0, 3, 4, 5, 7, 8, 10, 14, 15, 18, 19], "write": [0, 3, 4, 7, 8, 10, 12, 15], "get_result": [2, 17, 23], "msg": 2, "handler": [2, 23], "event": [2, 4, 5], "context": 2, "new_result": [3, 23], "config_t": [3, 5, 15, 23], "extract_new_data": [3, 15, 23], "initialize_t": [3, 15, 23], "write_json_fil": [3, 4, 7, 15, 23], "string": [3, 4, 5, 8, 10, 12, 15, 19], "current": [3, 4, 8, 10, 12, 19], "read_news_data1": [3, 23], "dai": [3, 4, 8, 10, 14, 15, 18], "int": [3, 4, 5, 8, 10, 12, 14, 19], "retriev": [3, 4, 8, 10], "new": [3, 4, 5, 7, 8, 10, 14, 19, 23], "dynamodb": [3, 4, 5, 8, 10, 14, 19], "tabl": [3, 4, 5, 8, 10, 12, 14, 17, 19], "specifi": [3, 4, 5, 8, 10, 18], "number": [3, 4, 5, 8, 10, 14, 17, 18, 19], "news_for": [3, 4], "categori": [3, 5], "A": [3, 4, 5, 8, 10, 17], "list": [3, 4, 5, 8, 10, 12, 14, 15, 19], "articl": [3, 5, 7, 19, 24], "each": [3, 5, 14], "repres": [3, 5], "nlp": [3, 5], "analysi": [3, 4, 5], "a_intro": [4, 5, 8, 10, 12, 19, 23], "secret": [4, 12], "manag": [4, 12], "get_secret": [4, 12, 13, 14, 23], "valu": [4, 8, 10, 12, 14, 18, 19], "create_company_doc": [4, 23], "ticker_data": 4, "creat": [4, 5, 8, 10, 12, 14, 18, 19], "doc": [4, 5], "earn": 4, "quarterli": 4, "report": 4, "earnings_result": 4, "quarterlyreport": 4, "quaterly_annual_report": 4, "create_head": [4, 23], "list_month": [4, 17], "today_d": 4, "index": [4, 8, 10, 22], "header": 4, "base": [4, 5, 8, 10, 14, 19], "provid": [4, 5, 19], "inform": [4, 8, 10], "month": [4, 5, 8, 10], "todai": [4, 8, 10], "": [4, 5, 8, 10], "date": [4, 7, 8, 10, 19], "stock": [4, 12, 14, 18], "id": [4, 5, 8, 10, 17, 19], "create_new": [4, 23], "all_new": [4, 7, 14], "sentiment": [4, 5, 8, 10, 14, 17, 23], "word": [4, 17, 19], "cloud": 4, "frequenc": [4, 5, 12, 19], "create_overview": [4, 23], "summary_data_dai": 4, "all_tweet": 4, "an": [4, 5, 8, 10], "overview": 4, "volum": [4, 14], "tweet": [4, 8, 10, 19, 23], "summari": 4, "includ": [4, 5, 14], "graph": 4, "create_technical_analysi": [4, 23], "sect_dict": 4, "sector": [4, 5, 14, 17], "technic": 4, "about": [4, 5, 12, 14, 18, 19], "all": [4, 5, 8, 10, 12, 14, 18, 19], "map": [4, 8, 10, 14], "stock_candle_stick_data": 4, "candle_stick_data": 4, "stock_candle_stick_data_y_format": 4, "open": 4, "high": 4, "low": 4, "close": [4, 14, 18], "close_vs_volum": 4, "news_count_vs_total_new": 4, "res_total_vs_ticker_new": 4, "news_sentiment_vs_volum": 4, "res_sentiment_vs_volum": 4, "tweet_count_vs_total_tweet": 4, "res_total_vs_ticker_tweet": 4, "tweet_sentiment_vs_volum": 4, "res_tweet_sentiment_vs_volum": 4, "create_tweet": [4, 23], "dict_none_output": [4, 23], "none": [4, 14, 19], "dict_output": [4, 23], "defaultdict": 4, "default": [4, 8, 10], "fetch_data_summari": [4, 23], "ticker_nam": [4, 5, 7, 14, 19, 24], "summary_json": 4, "sinc": [4, 5], "until": 4, "datetim": [4, 8, 10], "ist": 4, "which": [4, 5, 8, 10, 12, 14, 19], "have": [4, 19], "gener": [4, 5, 8, 10], "updat": [4, 5, 8, 10, 19], "groupbi": 4, "color": 4, "per": 4, "percentil": [4, 18], "fetch_debrief_data": [4, 23], "predition_number_of_dai": 4, "fetch": [4, 5, 8, 10, 12, 14], "debrief": 4, "predict": [4, 5, 8, 10, 14, 18], "compon": 4, "header_inform": 4, "overview_tab": 4, "technical_analysi": 4, "read_data_from_s3": [4, 23], "read": 4, "updated_dict": [4, 23], "float": [4, 5, 14], "working_check": [4, 15, 23], "check": [4, 8, 10, 15, 19], "work": [4, 15], "bse": [4, 15], "calendar": [4, 15], "format": [4, 7, 8, 10, 15], "yyyi": [4, 15], "mm": [4, 15], "dd": [4, 15], "create_default": [4, 23], "initi": [4, 5], "score": [4, 5, 8, 10, 14], "total": [4, 14], "sentiment_scor": [4, 14], "set": [4, 8, 10], "0": [4, 14, 19], "read_data_dynamodb": [4, 23], "dynamodb_cli": [4, 17], "table_nam": 4, "whole": [4, 5], "boto3": [4, 5, 14], "client": [4, 12], "kei": [4, 5], "pair": 4, "read_news_data": [4, 17, 23], "paramet": 4, "start": [4, 7, 8, 10, 19], "group": [4, 14, 18], "field": 4, "read_tweets_data": [4, 17, 23], "tweet_for": 4, "sum_get_total_new": [4, 23], "get": [4, 5, 7, 8, 10, 14, 19], "end": [4, 7, 8, 10], "variou": [4, 12], "tupl": 4, "follow": [4, 5, 8, 10, 19], "element": [4, 8, 10, 19], "news_count": 4, "count": [4, 5, 14, 19], "news_sent": 4, "today_news_count": 4, "today_news_s": 4, "sum_get_total_tweet": [4, 23], "time": [4, 8, 10, 12, 19], "rang": 4, "tweet_count": 4, "tweets_sent": 4, "today_tweet": 4, "today_tweet_s": 4, "create_invalid": [4, 23], "invalid": 4, "cloudfront": 4, "myconvert": [4, 23], "o": 4, "custom": 4, "encod": [4, 8, 10], "convert": [4, 8, 10, 14, 18], "represent": 4, "script": 4, "process": [4, 5, 8, 10, 14, 18], "depend": [4, 8, 10], "like": [4, 19], "credenti": 4, "createdbi": [4, 5, 8, 10, 19], "shreya": [4, 5], "r": [4, 5], "chim": [4, 5], "schim": [4, 5], "alagoanalyt": [4, 5], "com": [4, 5, 8, 10, 19], "kalash": [4, 5], "gandhi": [4, 5], "kgandhi": [4, 5], "algoanalyt": [4, 5, 8, 10, 19], "anoushka": [4, 5], "rao": [4, 5], "arao": [4, 5], "mansi": [4, 19], "maurya": [4, 19], "mmaurya": [4, 19], "last": [4, 12, 14], "05th": [4, 8, 10, 19], "juli": [4, 5, 8, 10, 12, 19], "2023": [4, 5, 8, 10, 12, 19], "chang": 4, "made": 4, "In": [4, 19], "code": [4, 5, 12, 19], "ad": [4, 5, 12, 19], "docstr": [4, 5, 8, 10, 12, 19], "get_company_about": [4, 23], "get_company_inform": [4, 23], "ticker_symbol": [4, 19], "us": [4, 5, 8, 10, 12, 14, 18, 19], "yahoo": 4, "financ": 4, "lambd_func": [4, 23], "x": [4, 14, 17], "lambda": 4, "input": [4, 5, 7, 18], "ani": [4, 19], "rds_con": [4, 23], "establish": [4, 12], "connect": [4, 5, 8, 10, 12], "rd": [4, 12], "databas": [4, 5, 8, 10, 12, 14], "cursor": 4, "mysql": [4, 12], "connector": 4, "mysqlcursor": 4, "execut": [4, 8, 10, 19], "sql": 4, "queri": [4, 8, 10, 12, 19], "async": [5, 19], "fetch_config_data": [5, 23], "resourc": [5, 8, 10, 14, 19], "The": [5, 8, 10, 12, 19], "item": [5, 7, 8, 10, 19], "fetch_data_from_t": [5, 23], "filter_attr": 5, "get_ticker_names_and_id": [5, 13, 14, 17, 23], "IT": [5, 14], "bank": [5, 14, 19], "config": [5, 14, 19], "algoddb": [5, 14], "configt": [5, 14], "update_t": [5, 23], "record_id": 5, "record_month": 5, "ner_org_freq": 5, "news_senti": 5, "news_class": 5, "top_ev": 5, "all_ev": 5, "upload_data": [5, 23], "enriched_data": 5, "news_tabl": [5, 8, 10, 19], "tokenizer_ev": 5, "model_test": 5, "devic": 5, "token": [5, 14, 19], "sentenc": [5, 19], "pre": [5, 8, 10], "train": [5, 14, 18], "model": [5, 14, 17, 18, 23], "top_2_ev": 5, "top": 5, "2": [5, 14, 18], "find_ev": [5, 23], "text": [5, 8, 10, 17, 19], "event_model": 5, "finbert": 5, "event_token": 5, "find": [5, 19], "we": 5, "need": [5, 19], "desir": [5, 14], "output": [5, 8, 10, 12, 14, 18], "find_mult_class": [5, 23], "model_ev": 5, "take": 5, "classifii": 5, "differ": [5, 14, 18], "defin": [5, 19], "consid": 5, "ar": [5, 8, 10, 12, 19], "debt": 5, "dividend": 5, "employ": 5, "financi": 5, "result": [5, 8, 10, 14, 18, 19], "invest": 5, "fund": 5, "litig": 5, "macroeconom": 5, "merger": 5, "acquisit": 5, "partnership": 5, "jointventur": 5, "product": 5, "servic": 5, "rate": 5, "recommend": 5, "secur": 5, "turnov": 5, "share": 5, "repurchas": 5, "its": 5, "most": 5, "relat": 5, "abov": 5, "It": [5, 8, 10, 19], "other": 5, "found": [5, 7], "eg": 5, "paragraph": 5, "relev": [5, 19], "correspond": [5, 8, 10], "label": 5, "probabl": 5, "time_func": [5, 23], "func": 5, "get_connect": [5, 12, 13, 14, 23], "perform_enrich": [5, 23], "tsa_keyword": 5, "perform": [5, 12], "task": [5, 19], "extract": [5, 8, 10, 19], "target": 5, "onli": [5, 8, 10, 19], "line": [5, 8, 10], "where": [5, 8, 10, 14], "i": [5, 8, 10, 12, 14, 18, 19], "mention": 5, "along": [5, 8, 10, 19], "corefer": 5, "entiti": 5, "org": 5, "detect": 5, "classifi": [5, 8, 10, 14, 18], "them": [5, 19], "nishant": 5, "tiwari": 5, "ntiwari": 5, "shubham": 5, "jagtap": 5, "sjagtap": 5, "lastupdatedd": [5, 8, 10, 12, 19], "01": [5, 8, 10], "aug": 5, "changesmadeincod": [5, 8, 10, 12, 19], "handl": 5, "long": 5, "avoid": [5, 18], "crash": 5, "analyze_senti": [5, 23], "prosusai": 5, "pretrain": 5, "first": [5, 8, 10, 18, 19], "appli": 5, "calcul": [5, 14, 18], "softmax": 5, "numpi": 5, "arrai": [5, 14, 18], "pt_predict": 5, "document": [5, 8, 10], "analyz": 5, "ndarrai": 5, "clean_text_new": [5, 23], "modifi": 5, "compute_summari": [5, 23], "comput": [5, 14], "compute_summary_upd": [5, 23], "t5": 5, "extract_org_frequ": [5, 23], "organ": 5, "exampl": [5, 8, 10, 12], "technologi": 5, "googl": [5, 19], "appl": 5, "microsoft": 5, "print": 5, "1": [5, 12, 14, 18], "extract_s": [5, 23], "company_nam": 5, "address": 5, "coreferenc": 5, "lowercas": [5, 17], "import": 5, "configur": 5, "filter": [5, 19], "attribut": [5, 19], "find_sent_with_compani": [5, 23], "keyword": [5, 14, 19], "get_news_label": [5, 23], "class": [5, 14], "get_sentiment_class": [5, 23], "neg": [5, 14], "po": [5, 14], "neut": 5, "determin": 5, "posit": [5, 14], "neutral": [5, 14], "get_sentiment_modifi": [5, 23], "doe": [5, 8, 10, 19], "ner": 5, "focus": 5, "same": 5, "belong": 5, "ha": [5, 12, 19], "been": 5, "pass": [5, 12, 19], "If": [5, 8, 10], "scan": 5, "load_pickle_fil": [5, 23], "filepath": 5, "enrich": 5, "sentiment_analysi": [5, 17, 23], "stem": [5, 23], "record": 5, "upload": [5, 23], "specif": [5, 12, 19], "type": [5, 8, 10, 14], "e": [5, 8, 10, 18], "g": 5, "associ": 5, "loading_distilbert_bas": [5, 23], "loading_news_multiclass_model": [5, 23], "loading_sent_model": [5, 23], "loading_summ_model": [5, 23], "original_label": 5, "vector": [5, 14], "feat": 5, "7th": 5, "clean_result": [5, 23], "spaci": [5, 8, 10], "clean": [5, 17, 19], "repetit": 5, "extract_org_frequency_spaci": 5, "without": [5, 14], "repeat": 5, "success": [5, 7], "summarization_token": 5, "summarization_model": 5, "summarization_tokenizer_t5": 5, "summarization_model_t5": 5, "aggregate_sentiment_news_level": [5, 23], "sentiment_analysis_list": 5, "level": 5, "model_senti": 5, "get_news_data_json": [7, 23], "particular": 7, "newsinput": 7, "respons": [7, 19], "200": 7, "descript": [7, 19], "400": 7, "bad": 7, "request": [7, 19], "404": 7, "500": 7, "intern": 7, "server": 7, "error": [7, 8, 10], "json_data": [7, 24], "get_avg_sent_score_across_dai": [7, 23, 24], "output_dict": [7, 24], "get_entity_tree_diagram": [7, 23, 24], "get_event_label_heatmap": [7, 23, 24], "get_ner_org_freq": [7, 23, 24], "news_output": [7, 24], "get_news_articl": [7, 23, 24], "get_news_cum_plot": [7, 23, 24], "get_news_distrib_across_dai": [7, 23, 24], "get_news_source_distrib": [7, 23, 24], "limit": [7, 19, 24], "10": [7, 18, 24], "get_normalized_sentiment_scor": [7, 23, 24], "get_price_line_chart": [7, 23, 24], "yfin_json_data": [7, 24], "get_sentiment_l": [7, 23, 24], "get_sentiment_scor": [7, 23, 24], "get_sentiment_stacked_barchart": [7, 23, 24], "make_cumulative_vol_chart": [7, 23, 24], "combine_data": [7, 23], "one_year_data": 7, "today_data": 7, "get_all_new": [7, 23], "get_ticker_news_data": [7, 23], "read_json_fil": [7, 23], "test": [8, 10, 18, 23], "test_api": [8, 10, 23], "test_health_check": [8, 9, 10, 11], "test_question_answer_pipelin": [8, 9, 10, 11], "test_semantic_search_news_respons": [8, 9, 10, 11], "test_semantic_search_pipelin": [8, 9, 10, 11], "test_semantic_search_tweets_respons": [8, 9, 10, 11], "test_model": [8, 10, 23], "test_load_read": [8, 9, 10, 11], "test_retriev": [8, 9, 10, 11], "test_util": [8, 10, 23], "test_convert_datetime_to_d": [8, 9, 10, 11], "test_outside_threshold_with_invalid_d": [8, 9, 10, 11], "test_outside_threshold_with_valid_d": [8, 9, 10, 11], "test_wrong_typ": [8, 9, 10, 11], "requir": [8, 10, 12, 19], "run": [8, 10, 19], "semant": [8, 10], "search": [8, 10, 19, 22], "meant": [8, 10], "one": [8, 10, 12, 19], "around": [8, 10], "when": [8, 10, 19], "fresh": [8, 10], "case": [8, 10], "some": [8, 10], "mistak": [8, 10], "previou": [8, 10], "lost": [8, 10], "so": [8, 10], "program": [8, 10], "must": [8, 10], "independ": [8, 10], "assum": [8, 10], "environ": [8, 10], "variabl": [8, 10, 14, 18], "alreadi": [8, 10], "up": [8, 10], "document_store_dir": [8, 10], "directori": [8, 10], "store": [8, 10, 12, 19], "retriever_dir": [8, 10], "mapping_dir": [8, 10], "option": [8, 10], "model_dir": [8, 10], "transform": [8, 10], "farhan": [8, 10], "pparmar": [8, 10], "add": [8, 10, 19], "create_resourc": [8, 10, 23], "onc": [8, 10], "python": [8, 10], "py": [8, 10], "from_dat": [8, 10], "2021": [8, 10], "to_dat": [8, 10], "31": [8, 10], "assign_unique_id": [8, 10, 23], "item_list": [8, 10], "assign": [8, 10, 14, 19], "uuid": [8, 10], "after": [8, 10], "remov": [8, 10, 17], "duplic": [8, 10], "either": [8, 10], "fetch_data": [8, 10, 23], "between": [8, 10], "sent": [8, 10], "command": [8, 10], "argument": [8, 10], "tweets_tabl": [8, 10, 19], "entri": [8, 10, 19], "remove_dupl": [8, 10, 23], "compar": [8, 10], "exist": [8, 10], "left": [8, 10], "save_items_to_text_fil": [8, 10, 23], "save": [8, 10, 14], "news_dir": [8, 10], "tweets_dir": [8, 10], "load": [8, 10], "passag": [8, 10], "query_encoder_dir": [8, 10], "passage_encoder_dir": [8, 10], "faiss": [8, 10], "pipelin": [8, 10], "document_search": [8, 10], "densepassageretriev": [8, 10], "farmread": [8, 10], "processor": [8, 10], "pre_processor": [8, 10], "fahmad": [8, 10], "load_document_search_pipelin": [8, 10, 23], "documentsearchpipelin": [8, 10], "documentstor": [8, 10], "construct": [8, 10], "haystack": [8, 10], "can": [8, 10], "load_document_stor": [8, 10, 23], "convent": [8, 10], "f": [8, 10], "_faiss_index": [8, 10], "faissdocumentstor": [8, 10], "load_preprocessor": [8, 10, 23], "preprocessor": [8, 10], "load_query_classifi": [8, 10, 23], "question": [8, 10, 17], "v": [8, 10], "statement": [8, 10, 19], "transformersqueryclassifi": [8, 10], "classif": [8, 10], "load_read": [8, 10, 23], "answer": [8, 10, 17], "load_retriev": [8, 10, 23], "document_stor": [8, 10], "dpr": [8, 10], "query_embedding_model": [8, 10], "soheeyang": [8, 10], "rdr": [8, 10], "question_encod": [8, 10], "singl": [8, 10], "nq": [8, 10], "passage_embedding_model": [8, 10], "ctx_encod": [8, 10], "older": [8, 10], "than": [8, 10, 19], "threshold": [8, 10], "usag": [8, 10], "07": [8, 10], "05": [8, 10], "note": [8, 10], "embed": [8, 10], "project": [8, 10], "check_typ": [8, 10, 23], "rais": [8, 10], "valueerror": [8, 10], "convert_datetime_to_d": [8, 10, 23], "datetime_str": [8, 10], "iso": [8, 10], "get_documentids_from_uuid": [8, 10, 23], "uuid_list": [8, 10], "get_documents_from_document_id": [8, 10, 23], "document_ids_list": [8, 10], "news_id": [8, 10, 19], "tweets_id": [8, 10], "form": [8, 10, 14], "document_entri": [8, 10], "get_documents_from_filenam": [8, 10, 23], "front": [8, 10], "helper": [8, 10, 23], "containerproxi": [8, 10], "cosmo": [8, 10], "get_dynamodb_connect": [8, 10, 23], "serviceresourc": [8, 10], "get_dynamodb_t": [8, 10, 23], "ddb_connect": [8, 10], "get_todai": [8, 10, 23], "months_between": [8, 10, 23], "start_dat": [8, 10], "end_dat": [8, 10], "two": [8, 10], "instanc": [8, 10], "1st": [8, 10], "everi": [8, 10, 19], "inclus": [8, 10], "befor": [8, 10, 19], "yield": [8, 10], "outside_threshold": [8, 10, 23], "item_d": [8, 10], "threshold_d": [8, 10], "whether": [8, 10], "bool": [8, 10, 19], "true": [8, 10, 12, 19], "process_predict": [8, 10, 23], "pred": [8, 10], "documentsearch": [8, 10], "3": [8, 10, 18], "thing": [8, 10], "search_result": [8, 10], "just": [8, 10], "entir": [8, 10], "metadata": [8, 10], "info": [8, 10], "process_qna_predict": [8, 10, 23], "news_pr": [8, 10], "news_search_result": [8, 10], "reader": [8, 10], "simpl": [8, 10], "detail": [8, 10], "raw": [8, 10], "qna": [8, 10], "transform_to_ui_format": [8, 10, 23], "ui": [8, 10], "replac": [8, 10], "html": [8, 10], "show": [8, 10], "consist": [8, 10, 14, 18], "execute_fetch_from_db": [10, 23], "from_datetim": 10, "to_datetim": 10, "yfinanc": 12, "OR": 12, "rapidapi": 12, "06th": 12, "crawl_stock": [12, 23], "list_ticker_id": 12, "main": [12, 23], "crawl": [12, 19], "librari": [12, 19], "column": [12, 14], "interv": 12, "hour": 12, "insid": 12, "method": [12, 14, 18], "No": 12, "host": [12, 14], "user": [12, 14, 19], "password": 12, "buffer": 12, "enabl": 12, "oper": 12, "api": [12, 19], "call": 12, "get_secret_value_respons": 12, "submodul": [13, 23], "stock_prediction_1": [13, 23], "binary_classifi": [13, 14], "build_featur": [13, 14], "build_function_sector": [13, 14], "build_model": [13, 14, 18, 23], "build_returns_and_output": [13, 14], "build_sentiment_mapping_csv": [13, 14], "calculate_senti": [13, 14, 15, 23], "calculate_total_new": [13, 14], "compute_accuracy_scor": [13, 14], "compute_auc": [13, 14], "compute_f1": [13, 14], "generate_x": [13, 14], "generate_x_w": [13, 14], "get_classifi": [13, 14], "get_cross_valid": [13, 14], "get_new": [13, 14], "map_senti": [13, 14], "process_output": [13, 14], "save_model_to_db": [13, 14], "write_data_to_rd": [13, 14], "stock_prediction_2": [13, 23], "compute_ind": [13, 14], "compute_output": [13, 14, 18, 23], "display_training_result": [13, 14], "generate_featur": [13, 14], "main_funct": [13, 14], "train_model": [13, 14, 18, 23], "binari": 14, "size_of_x": 14, "featur": [14, 18], "t": 14, "datafram": [14, 18], "numer": [14, 18], "size": 14, "6": [14, 18], "4": [14, 18], "stock_pric": 14, "stock_live_pric": 14, "stock_map": 14, "stock_new": 14, "models_col": 14, "number_of_days_for_model_train": 14, "s3_bucket_object_nam": 14, "live": 14, "input_sentiment_csv": 14, "csv": 14, "stock_news_col": 14, "past_prediction_df": 14, "fold": 14, "5": [14, 18], "build": [14, 18], "valid": 14, "kfold": 14, "clf": [14, 18], "randomforestclassifi": 14, "db_resourc": 14, "formula": 14, "news_typ": 14, "ticker_map": 14, "y": 14, "accuraci": 14, "actual": [14, 18], "accuracy_scor": 14, "auc": 14, "auc_scor": 14, "f1": 14, "f1_score": 14, "agg_index": 14, "stock_senti": 14, "agg_senti": 14, "sector_return": 14, "sector_sentiment_scor": 14, "sector_volum": 14, "randomforest": [14, 18], "port": 14, "ticker_list": 14, "rise": 14, "drop": 14, "object_nam": 14, "y_pred": 14, "auc_score_neg": 14, "auc_score_neutr": 14, "auc_score_po": 14, "indic": 14, "df": [14, 17, 18], "displai": 14, "window_s": [14, 18], "20": 14, "window": [14, 18], "integ": [14, 18], "length": [14, 18], "read_result_data": [15, 23], "optimal_model": [17, 23], "num_keyword": 17, "ideal_topic_num": 17, "tokenized_review": 17, "topic_modeling_neg": [17, 23], "topic_modeling_posit": [17, 23], "word_cloud_freq": [17, 23], "build_datafram": [17, 23], "clean_text": [17, 23], "format_topics_sent": [17, 23], "corpu": 17, "compound_scor": 17, "input_csv_qa": 17, "lemmat": [17, 23], "allowed_postag": 17, "noun": 17, "adj": 17, "remove_stopword": [17, 23], "topic_modeling_new": [17, 23], "topic_modeling_tweet": [17, 23], "clean_text_modifi": [17, 23], "make": [17, 18], "squar": 17, "bracket": 17, "link": [17, 19], "punctuat": 17, "date_tim": 17, "text_preprocessing_fn": [17, 23], "pars": 17, "randomforestregressor": 18, "no_of_dai": 18, "append": 18, "compute_trend_vari": [18, 23], "trend": 18, "price": 18, "iter": 18, "over": 18, "k": 18, "nan": 18, "temporari": 18, "td": 18, "10th": 18, "undefin": 18, "t10": 18, "sum": 18, "absolut": 18, "consecut": 18, "past": 18, "divid": 18, "ith": 18, "th": 18, "final": 18, "araai": 18, "get_regressor": [18, 23], "regressor": 18, "60": 18, "bloomberg_scraping_bot_test": [19, 23], "rotating_proxi": [19, 23], "test_proxi": [19, 20], "migrat": [19, 23], "s3_to_dynamo": [19, 23], "point": 19, "applic": 19, "ingest": 19, "07th": 19, "find_url": [19, 23], "busi": 19, "standard": 19, "unnecessari": 19, "while": 19, "scrape": 19, "pygooglenew": 19, "basic": 19, "preprocess": 19, "also": 19, "done": 19, "languag": 19, "condit": 19, "add_news_articl": [19, 23], "long_descript": 19, "certain": 19, "basi": 19, "those": 19, "uniqu": 19, "presenc": 19, "insert": 19, "lastupd": 19, "04th": 19, "keyword_pass": 19, "elif": 19, "block": 19, "itc": 19, "ltd": 19, "state": 19, "india": 19, "mahindra": 19, "crawl_news_by_keyword": [19, 23], "ticker_news_keyword": 19, "longdesc_keyword": 19, "text_search": 19, "durat": 19, "want": 19, "decid": 19, "titl": 19, "article_text": 19, "equal": 19, "beautifulsoup": 19, "get_cont": [19, 23], "newspaper3k": 19, "news_lang_check": [19, 23], "english": 19, "els": 19, "fals": 19, "june": 19, "news_longdesc_check": [19, 23], "key_word": 19, "snscrape": 19, "minimum": 19, "do": 19, "irrelav": 19, "contains_irrelavant_word": [19, 23], "tweet_text": 19, "blacklist": 19, "exclusion_tweet_str": 19, "otherwis": 19, "contains_minimum_token": [19, 23], "tweet_full_text": 19, "min_num_token": 19, "min_num_char": 19, "should": 19, "charact": 19, "crawl_tweets_by_keyword": [19, 23], "temp_tweets_t": 19, "ticker_tweet_keyword": 19, "ticker_tweet_exclus": 19, "tweet_followerscount": 19, "tweet_minimum_token": 19, "tweet_minimum_char": 19, "sncscrape": 19, "exclus": 19, "editor": 19, "greater": 19, "filter_tweet": [19, 23], "least": 19, "bigram": 19, "phrase": 19, "relevant_word": 19, "filter_out_word": 19, "update_tweet_t": [19, 23], "datetime_now": 19, "upsert": 19, "sntwitter": 19, "twittersearchscrap": 19, "proxi": 20, "fabric_backend_aw": 22, "candlestick_pattern": [22, 23], "packag": [22, 23], "docker_chatbot": [22, 23], "docker_correl": [22, 23], "docker_debrief": [22, 23], "docker_enrich": [22, 23], "docker_microservic": [22, 23], "docker_news_aggreg": [22, 23], "docker_search": [22, 23], "docker_search_ec2": [22, 23], "docker_stock_ingest": [22, 23], "docker_stock_predict": [22, 23], "docker_todays_senti": [22, 23], "docker_top": [22, 23], "docker_topics_earning_call_transcript": [22, 23], "docker_trend_predict": [22, 23], "docker_tweet": [22, 23], "news_aggregator_api": [22, 23], "modul": [22, 23], "page": 22, "subpackag": 23, "content": 23, "data_process": 23, "indecisive_detect": 23, "patterns_map": 23, "app": 23, "chatbot_v2": 23, "final_chatbot": 23, "generate_result": 23, "news_extraction_dynamodb": 23, "access_fil": 23, "create_json": 23, "get_dynamodb_data": 23, "rds_db": 23, "db_oper": 23, "event_classif": 23, "event_detect": 23, "helper_func": 23, "main_v5": 23, "model_load": 23, "multiclass_classif": 23, "new_main_v4": 23, "org_frequ": 23, "summar": 23, "tsa": 23, "create_visu": 23, "fetch_data_for_todai": 23, "create_model": 23, "fetch_from_db": 23, "remove_older_doc": 23, "update_embed": 23, "util": 23, "stock_ingest": 23, "todays_senti": 23, "main_top": 23, "earning_call_main": 23, "trend_predict": 23, "news_ingestion_aw": 23, "tweets_ingestion_aw": 23}, "objects": {"": [[0, 0, 0, "-", "candlestick_patterns"], [2, 0, 0, "-", "docker_chatbot"], [3, 0, 0, "-", "docker_correlation"], [4, 0, 0, "-", "docker_debrief"], [5, 0, 0, "-", "docker_enrichment"], [6, 0, 0, "-", "docker_microservices"], [7, 0, 0, "-", "docker_news_aggregator"], [8, 0, 0, "-", "docker_search"], [10, 0, 0, "-", "docker_search_ec2"], [12, 0, 0, "-", "docker_stock_ingestion"], [13, 0, 0, "-", "docker_stock_prediction"], [15, 0, 0, "-", "docker_todays_sentiment"], [16, 0, 0, "-", "docker_topics"], [17, 0, 0, "-", "docker_topics_earning_call_transcripts"], [18, 0, 0, "-", "docker_trend_prediction"], [19, 0, 0, "-", "docker_tweets"], [24, 0, 0, "-", "news_aggregator_API"]], "candlestick_patterns": [[0, 0, 0, "-", "Data_Process"], [0, 0, 0, "-", "Indecisive_Detection"], [0, 0, 0, "-", "Patterns_Map"], [1, 0, 0, "-", "candlestick"], [0, 0, 0, "-", "upload"]], "candlestick_patterns.Data_Process": [[0, 1, 1, "", "get_jsonparsed_data"], [0, 1, 1, "", "get_ohlc_data"]], "candlestick_patterns.Indecisive_Detection": [[0, 1, 1, "", "handle_indecisive_patterns"], [0, 1, 1, "", "identify_single_candlestick_patterns"]], "candlestick_patterns.Patterns_Map": [[0, 1, 1, "", "map_patterns"]], "candlestick_patterns.upload": [[0, 1, 1, "", "download_data_from_s3_file"], [0, 1, 1, "", "download_files_from_s3"], [0, 1, 1, "", "upload_data_to_s3"], [0, 1, 1, "", "upload_json_file_to_s3"]], "docker_chatbot": [[2, 0, 0, "-", "chatbot_v2"], [2, 0, 0, "-", "final_chatbot"]], "docker_chatbot.chatbot_v2": [[2, 1, 1, "", "get_result"]], "docker_chatbot.final_chatbot": [[2, 1, 1, "", "get_result"], [2, 1, 1, "", "handler"]], "docker_correlation": [[3, 0, 0, "-", "generate_results"], [3, 0, 0, "-", "main"], [3, 0, 0, "-", "news_extraction_dynamodb"]], "docker_correlation.generate_results": [[3, 1, 1, "", "new_results"]], "docker_correlation.main": [[3, 1, 1, "", "config_table"], [3, 1, 1, "", "extract_new_data"], [3, 1, 1, "", "initialize_table"], [3, 1, 1, "", "write_json_file"]], "docker_correlation.news_extraction_dynamodb": [[3, 1, 1, "", "read_news_data1"]], "docker_debrief": [[4, 0, 0, "-", "access_file"], [4, 0, 0, "-", "create_json"], [4, 0, 0, "-", "get_dynamodb_data"], [4, 0, 0, "-", "helper"], [4, 0, 0, "-", "main"], [4, 0, 0, "-", "rds_db"]], "docker_debrief.access_file": [[4, 1, 1, "", "a_intro"], [4, 1, 1, "", "get_secret"]], "docker_debrief.create_json": [[4, 1, 1, "", "create_company_docs"], [4, 1, 1, "", "create_header"], [4, 1, 1, "", "create_news"], [4, 1, 1, "", "create_overview"], [4, 1, 1, "", "create_technical_analysis"], [4, 1, 1, "", "create_tweets"], [4, 1, 1, "", "dict_None_output"], [4, 1, 1, "", "dict_output"], [4, 1, 1, "", "fetch_data_summary"], [4, 1, 1, "", "fetch_debrief_data"], [4, 1, 1, "", "read_data_from_s3"], [4, 1, 1, "", "updated_dict"], [4, 1, 1, "", "working_check"]], "docker_debrief.get_dynamodb_data": [[4, 1, 1, "", "create_default"], [4, 1, 1, "", "read_data_dynamodb"], [4, 1, 1, "", "read_news_data"], [4, 1, 1, "", "read_tweets_data"], [4, 1, 1, "", "sum_get_total_news"], [4, 1, 1, "", "sum_get_total_tweets"]], "docker_debrief.helper": [[4, 1, 1, "", "create_invalidation"], [4, 1, 1, "", "myconverter"], [4, 1, 1, "", "write_json_file"]], "docker_debrief.main": [[4, 1, 1, "", "a_intro"], [4, 1, 1, "", "get_company_about"], [4, 1, 1, "", "get_company_information"], [4, 1, 1, "", "lambd_func"]], "docker_debrief.rds_db": [[4, 1, 1, "", "rds_con"]], "docker_enrichment": [[5, 0, 0, "-", "db_operations"], [5, 0, 0, "-", "event_classification"], [5, 0, 0, "-", "event_detection"], [5, 0, 0, "-", "helper_func"], [5, 0, 0, "-", "main"], [5, 0, 0, "-", "main_v5"], [5, 0, 0, "-", "model_loading"], [5, 0, 0, "-", "multiclass_Classification"], [5, 0, 0, "-", "new_main_v4"], [5, 0, 0, "-", "org_frequency"], [5, 0, 0, "-", "summarization"], [5, 0, 0, "-", "tsa"]], "docker_enrichment.db_operations": [[5, 1, 1, "", "fetch_config_data"], [5, 1, 1, "", "fetch_data_from_table"], [5, 1, 1, "", "get_ticker_names_and_id"], [5, 1, 1, "", "update_table"], [5, 1, 1, "", "upload_data"]], "docker_enrichment.event_classification": [[5, 1, 1, "", "event_classification"]], "docker_enrichment.event_detection": [[5, 1, 1, "", "find_events"], [5, 1, 1, "", "find_mult_class"]], "docker_enrichment.helper_func": [[5, 1, 1, "", "time_func"]], "docker_enrichment.main": [[5, 1, 1, "", "get_connection"], [5, 1, 1, "", "perform_enrichment"]], "docker_enrichment.main_v5": [[5, 1, 1, "", "a_intro"], [5, 1, 1, "", "analyze_sentiment"], [5, 1, 1, "", "clean_text_new"], [5, 1, 1, "", "compute_summary"], [5, 1, 1, "", "compute_summary_updated"], [5, 1, 1, "", "event_classification"], [5, 1, 1, "", "extract_org_frequency"], [5, 1, 1, "", "extract_sents"], [5, 1, 1, "", "fetch_config_data"], [5, 1, 1, "", "fetch_data_from_table"], [5, 1, 1, "", "find_sent_with_company"], [5, 1, 1, "", "get_connection"], [5, 1, 1, "", "get_news_labels"], [5, 1, 1, "", "get_sentiment_class"], [5, 1, 1, "", "get_sentiment_modified"], [5, 1, 1, "", "get_ticker_names_and_id"], [5, 1, 1, "", "load_pickle_file"], [5, 1, 1, "", "perform_enrichment"], [5, 1, 1, "", "stemming"], [5, 1, 1, "", "update_table"], [5, 1, 1, "", "upload_data"]], "docker_enrichment.model_loading": [[5, 1, 1, "", "load_pickle_file"], [5, 1, 1, "", "loading_DistilBert_base"], [5, 1, 1, "", "loading_news_multiclass_models"], [5, 1, 1, "", "loading_sent_model"], [5, 1, 1, "", "loading_summ_model"]], "docker_enrichment.multiclass_Classification": [[5, 1, 1, "", "clean_text_new"], [5, 1, 1, "", "get_news_labels"], [5, 1, 1, "", "stemming"]], "docker_enrichment.new_main_v4": [[5, 1, 1, "", "a_intro"], [5, 1, 1, "", "analyze_sentiment"], [5, 1, 1, "", "compute_summary"], [5, 1, 1, "", "compute_summary_updated"], [5, 1, 1, "", "event_classification"], [5, 1, 1, "", "extract_org_frequency"], [5, 1, 1, "", "extract_sents"], [5, 1, 1, "", "fetch_config_data"], [5, 1, 1, "", "fetch_data_from_table"], [5, 1, 1, "", "find_sent_with_company"], [5, 1, 1, "", "get_connection"], [5, 1, 1, "", "get_sentiment_class"], [5, 1, 1, "", "get_sentiment_modified"], [5, 1, 1, "", "get_ticker_names_and_id"], [5, 1, 1, "", "perform_enrichment"], [5, 1, 1, "", "update_table"], [5, 1, 1, "", "upload_data"]], "docker_enrichment.org_frequency": [[5, 1, 1, "", "clean_result"], [5, 1, 1, "", "extract_org_frequency"], [5, 1, 1, "", "time_func"]], "docker_enrichment.summarization": [[5, 1, 1, "", "compute_summary"], [5, 1, 1, "", "compute_summary_updated"]], "docker_enrichment.tsa": [[5, 1, 1, "", "aggregate_sentiment_news_level"], [5, 1, 1, "", "analyze_sentiment"], [5, 1, 1, "", "extract_sents"], [5, 1, 1, "", "find_sent_with_company"], [5, 1, 1, "", "get_sentiment_class"], [5, 1, 1, "", "get_sentiment_modified"]], "docker_news_aggregator": [[7, 0, 0, "-", "app"], [7, 0, 0, "-", "create_visualizations"], [7, 0, 0, "-", "main"]], "docker_news_aggregator.app": [[7, 1, 1, "", "get_news_data_json"]], "docker_news_aggregator.create_visualizations": [[7, 1, 1, "", "create_visualizations"], [7, 1, 1, "", "get_avg_sent_score_across_days"], [7, 1, 1, "", "get_entity_tree_diagram"], [7, 1, 1, "", "get_event_label_heatmap"], [7, 1, 1, "", "get_ner_org_freq"], [7, 1, 1, "", "get_news_articles"], [7, 1, 1, "", "get_news_cum_plot"], [7, 1, 1, "", "get_news_distrib_across_days"], [7, 1, 1, "", "get_news_source_distrib"], [7, 1, 1, "", "get_normalized_sentiment_score"], [7, 1, 1, "", "get_price_line_chart"], [7, 1, 1, "", "get_sentiment_lables"], [7, 1, 1, "", "get_sentiment_score"], [7, 1, 1, "", "get_sentiment_stacked_barchart"], [7, 1, 1, "", "make_cumulative_vol_chart"]], "docker_news_aggregator.main": [[7, 1, 1, "", "combine_data"], [7, 1, 1, "", "get_all_news"], [7, 1, 1, "", "get_ticker_news_data"], [7, 1, 1, "", "read_json_file"], [7, 1, 1, "", "write_json_file"]], "docker_search": [[8, 0, 0, "-", "create_models"], [8, 0, 0, "-", "fetch_from_DB"], [8, 0, 0, "-", "models"], [8, 0, 0, "-", "remove_older_docs"], [9, 0, 0, "-", "tests"], [8, 0, 0, "-", "update_embeddings"], [8, 0, 0, "-", "utils"]], "docker_search.create_models": [[8, 1, 1, "", "a_intro"], [8, 1, 1, "", "create_resources"]], "docker_search.fetch_from_DB": [[8, 1, 1, "", "a_intro"], [8, 1, 1, "", "assign_unique_ids"], [8, 1, 1, "", "fetch_data"], [8, 1, 1, "", "remove_duplicates"], [8, 1, 1, "", "save_items_to_text_files"]], "docker_search.models": [[8, 1, 1, "", "a_intro"], [8, 1, 1, "", "load_document_search_pipeline"], [8, 1, 1, "", "load_document_store"], [8, 1, 1, "", "load_preprocessor"], [8, 1, 1, "", "load_query_classifier"], [8, 1, 1, "", "load_reader"], [8, 1, 1, "", "load_retriever"]], "docker_search.remove_older_docs": [[8, 1, 1, "", "a_intro"], [8, 1, 1, "", "remove_older_docs"]], "docker_search.tests": [[9, 0, 0, "-", "test_api"], [9, 0, 0, "-", "test_models"], [9, 0, 0, "-", "test_utils"]], "docker_search.tests.test_api": [[9, 1, 1, "", "test_health_check"], [9, 1, 1, "", "test_question_answer_pipeline"], [9, 1, 1, "", "test_semantic_search_news_response"], [9, 1, 1, "", "test_semantic_search_pipeline"], [9, 1, 1, "", "test_semantic_search_tweets_response"]], "docker_search.tests.test_models": [[9, 1, 1, "", "test_load_reader"], [9, 1, 1, "", "test_retriever"]], "docker_search.tests.test_utils": [[9, 1, 1, "", "test_convert_datetime_to_date"], [9, 1, 1, "", "test_outside_threshold_with_invalid_date"], [9, 1, 1, "", "test_outside_threshold_with_valid_date"], [9, 1, 1, "", "test_wrong_type"]], "docker_search.update_embeddings": [[8, 1, 1, "", "a_intro"], [8, 1, 1, "", "update_embeddings"]], "docker_search.utils": [[8, 1, 1, "", "a_intro"], [8, 1, 1, "", "check_type"], [8, 1, 1, "", "convert_datetime_to_date"], [8, 1, 1, "", "get_documentids_from_uuid"], [8, 1, 1, "", "get_documents_from_document_ids"], [8, 1, 1, "", "get_documents_from_filenames"], [8, 1, 1, "", "get_dynamodb_connection"], [8, 1, 1, "", "get_dynamodb_table"], [8, 1, 1, "", "get_today"], [8, 1, 1, "", "months_between"], [8, 1, 1, "", "outside_threshold"], [8, 1, 1, "", "process_prediction"], [8, 1, 1, "", "process_qna_prediction"], [8, 1, 1, "", "transform_to_ui_format"]], "docker_search_ec2": [[10, 0, 0, "-", "create_models"], [10, 0, 0, "-", "fetch_from_DB"], [10, 0, 0, "-", "models"], [10, 0, 0, "-", "remove_older_docs"], [11, 0, 0, "-", "tests"], [10, 0, 0, "-", "update_embeddings"], [10, 0, 0, "-", "utils"]], "docker_search_ec2.create_models": [[10, 1, 1, "", "a_intro"], [10, 1, 1, "", "create_resources"]], "docker_search_ec2.fetch_from_DB": [[10, 1, 1, "", "a_intro"], [10, 1, 1, "", "assign_unique_ids"], [10, 1, 1, "", "execute_fetch_from_db"], [10, 1, 1, "", "fetch_data"], [10, 1, 1, "", "remove_duplicates"], [10, 1, 1, "", "save_items_to_text_files"]], "docker_search_ec2.models": [[10, 1, 1, "", "a_intro"], [10, 1, 1, "", "load_document_search_pipeline"], [10, 1, 1, "", "load_document_store"], [10, 1, 1, "", "load_preprocessor"], [10, 1, 1, "", "load_query_classifier"], [10, 1, 1, "", "load_reader"], [10, 1, 1, "", "load_retriever"]], "docker_search_ec2.remove_older_docs": [[10, 1, 1, "", "a_intro"], [10, 1, 1, "", "remove_older_docs"]], "docker_search_ec2.tests": [[11, 0, 0, "-", "test_api"], [11, 0, 0, "-", "test_models"], [11, 0, 0, "-", "test_utils"]], "docker_search_ec2.tests.test_api": [[11, 1, 1, "", "test_health_check"], [11, 1, 1, "", "test_question_answer_pipeline"], [11, 1, 1, "", "test_semantic_search_news_response"], [11, 1, 1, "", "test_semantic_search_pipeline"], [11, 1, 1, "", "test_semantic_search_tweets_response"]], "docker_search_ec2.tests.test_models": [[11, 1, 1, "", "test_load_reader"], [11, 1, 1, "", "test_retriever"]], "docker_search_ec2.tests.test_utils": [[11, 1, 1, "", "test_convert_datetime_to_date"], [11, 1, 1, "", "test_outside_threshold_with_invalid_date"], [11, 1, 1, "", "test_outside_threshold_with_valid_date"], [11, 1, 1, "", "test_wrong_type"]], "docker_search_ec2.update_embeddings": [[10, 1, 1, "", "a_intro"], [10, 1, 1, "", "update_embeddings"]], "docker_search_ec2.utils": [[10, 1, 1, "", "a_intro"], [10, 1, 1, "", "check_type"], [10, 1, 1, "", "convert_datetime_to_date"], [10, 1, 1, "", "get_documentids_from_uuid"], [10, 1, 1, "", "get_documents_from_document_ids"], [10, 1, 1, "", "get_documents_from_filenames"], [10, 1, 1, "", "get_dynamodb_connection"], [10, 1, 1, "", "get_dynamodb_table"], [10, 1, 1, "", "get_today"], [10, 1, 1, "", "months_between"], [10, 1, 1, "", "outside_threshold"], [10, 1, 1, "", "process_prediction"], [10, 1, 1, "", "process_qna_prediction"], [10, 1, 1, "", "transform_to_ui_format"]], "docker_stock_ingestion": [[12, 0, 0, "-", "stock_ingestion"]], "docker_stock_ingestion.stock_ingestion": [[12, 1, 1, "", "a_intro"], [12, 1, 1, "", "crawl_stock"], [12, 1, 1, "", "get_connection"], [12, 1, 1, "", "get_secret"]], "docker_stock_prediction": [[14, 0, 0, "-", "docker_stock_prediction"]], "docker_stock_prediction.docker_stock_prediction": [[14, 0, 0, "-", "stock_prediction_1"], [14, 0, 0, "-", "stock_prediction_2"]], "docker_stock_prediction.docker_stock_prediction.stock_prediction_1": [[14, 1, 1, "", "binary_classify"], [14, 1, 1, "", "build_feature"], [14, 1, 1, "", "build_function_sector"], [14, 1, 1, "", "build_model"], [14, 1, 1, "", "build_returns_and_output"], [14, 1, 1, "", "build_sentiment_mapping_csv"], [14, 1, 1, "", "calculate_sentiment"], [14, 1, 1, "", "calculate_total_news"], [14, 1, 1, "", "compute_accuracy_score"], [14, 1, 1, "", "compute_auc"], [14, 1, 1, "", "compute_f1"], [14, 1, 1, "", "generate_x"], [14, 1, 1, "", "generate_x_ws"], [14, 1, 1, "", "get_classifier"], [14, 1, 1, "", "get_connection"], [14, 1, 1, "", "get_cross_validator"], [14, 1, 1, "", "get_news"], [14, 1, 1, "", "get_secret"], [14, 1, 1, "", "get_ticker_names_and_id"], [14, 1, 1, "", "map_sentiment"], [14, 1, 1, "", "process_output"], [14, 1, 1, "", "save_model_to_db"], [14, 1, 1, "", "write_data_to_RDS"]], "docker_stock_prediction.docker_stock_prediction.stock_prediction_2": [[14, 1, 1, "", "build_model"], [14, 1, 1, "", "compute_accuracy_score"], [14, 1, 1, "", "compute_auc"], [14, 1, 1, "", "compute_f1"], [14, 1, 1, "", "compute_indicators"], [14, 1, 1, "", "compute_output"], [14, 1, 1, "", "display_training_results"], [14, 1, 1, "", "generate_feature"], [14, 1, 1, "", "get_classifier"], [14, 1, 1, "", "get_connection"], [14, 1, 1, "", "get_secret"], [14, 1, 1, "", "get_ticker_names_and_id"], [14, 1, 1, "", "main_function"], [14, 1, 1, "", "process_output"], [14, 1, 1, "", "train_model"], [14, 1, 1, "", "write_data_to_RDS"]], "docker_todays_sentiment": [[15, 0, 0, "-", "main"], [15, 0, 0, "-", "todays_sentiment"]], "docker_todays_sentiment.main": [[15, 1, 1, "", "config_table"], [15, 1, 1, "", "extract_new_data"], [15, 1, 1, "", "initialize_table"], [15, 1, 1, "", "read_result_data"], [15, 1, 1, "", "working_check"], [15, 1, 1, "", "write_json_file"]], "docker_todays_sentiment.todays_sentiment": [[15, 1, 1, "", "calculate_sentiment"]], "docker_topics_earning_call_transcripts": [[17, 0, 0, "-", "earning_call_main"], [17, 0, 0, "-", "main"]], "docker_topics_earning_call_transcripts.earning_call_main": [[17, 1, 1, "", "Optimal_Model"], [17, 1, 1, "", "Sentiment_Analysis"], [17, 1, 1, "", "Topic_Modeling_Negative"], [17, 1, 1, "", "Topic_Modeling_Positive"], [17, 1, 1, "", "Word_Cloud_Freq"], [17, 1, 1, "", "build_dataframe"], [17, 1, 1, "", "clean_text"], [17, 1, 1, "", "format_topics_sentences"], [17, 1, 1, "", "get_result"], [17, 1, 1, "", "lemmatization"], [17, 1, 1, "", "remove_stopwords"], [17, 1, 1, "", "sentiment"]], "docker_topics_earning_call_transcripts.main": [[17, 1, 1, "", "Optimal_Model"], [17, 1, 1, "", "Topic_Modeling_News"], [17, 1, 1, "", "Topic_Modeling_Tweets"], [17, 1, 1, "", "Word_Cloud_Freq"], [17, 1, 1, "", "clean_text_modified"], [17, 1, 1, "", "format_topics_sentences"], [17, 1, 1, "", "get_ticker_names_and_id"], [17, 1, 1, "", "read_news_data"], [17, 1, 1, "", "read_tweets_data"], [17, 1, 1, "", "text_preprocessing_fn"]], "docker_trend_prediction": [[18, 0, 0, "-", "Trend_prediction"]], "docker_trend_prediction.Trend_prediction": [[18, 1, 1, "", "build_model"], [18, 1, 1, "", "compute_output"], [18, 1, 1, "", "compute_trend_variable"], [18, 1, 1, "", "get_regressor"], [18, 1, 1, "", "train_model"]], "docker_tweets": [[20, 0, 0, "-", "Bloomberg_Scraping_Bot_Test"], [19, 0, 0, "-", "main"], [19, 0, 0, "-", "news_ingestion_aws"], [19, 0, 0, "-", "tweets_ingestion_aws"]], "docker_tweets.Bloomberg_Scraping_Bot_Test": [[20, 0, 0, "-", "rotating_proxies"]], "docker_tweets.Bloomberg_Scraping_Bot_Test.rotating_proxies": [[20, 1, 1, "", "test_proxy"]], "docker_tweets.main": [[19, 1, 1, "", "a_intro"]], "docker_tweets.news_ingestion_aws": [[19, 1, 1, "", "Find_url"], [19, 1, 1, "", "a_intro"], [19, 1, 1, "", "add_news_article"], [19, 1, 1, "", "crawl_news_by_keyword"], [19, 1, 1, "", "get_content"], [19, 1, 1, "", "news_lang_check"], [19, 1, 1, "", "news_longDesc_check"]], "docker_tweets.tweets_ingestion_aws": [[19, 1, 1, "", "a_intro"], [19, 1, 1, "", "contains_irrelavant_words"], [19, 1, 1, "", "contains_minimum_tokens"], [19, 1, 1, "", "crawl_tweets_by_keyword"], [19, 1, 1, "", "filter_tweet"], [19, 1, 1, "", "update_tweet_table"]], "news_aggregator_API": [[24, 0, 0, "-", "create_visualizations"]], "news_aggregator_API.create_visualizations": [[24, 1, 1, "", "create_visualizations"], [24, 1, 1, "", "get_avg_sent_score_across_days"], [24, 1, 1, "", "get_entity_tree_diagram"], [24, 1, 1, "", "get_event_label_heatmap"], [24, 1, 1, "", "get_ner_org_freq"], [24, 1, 1, "", "get_news_articles"], [24, 1, 1, "", "get_news_cum_plot"], [24, 1, 1, "", "get_news_distrib_across_days"], [24, 1, 1, "", "get_news_source_distrib"], [24, 1, 1, "", "get_normalized_sentiment_score"], [24, 1, 1, "", "get_price_line_chart"], [24, 1, 1, "", "get_sentiment_lables"], [24, 1, 1, "", "get_sentiment_score"], [24, 1, 1, "", "get_sentiment_stacked_barchart"], [24, 1, 1, "", "make_cumulative_vol_chart"]]}, "objtypes": {"0": "py:module", "1": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"]}, "titleterms": {"candlestick_pattern": [0, 1], "packag": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24], "subpackag": [0, 8, 10, 13, 19], "submodul": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 24], "data_process": 0, "modul": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24], "indecisive_detect": 0, "patterns_map": 0, "upload": 0, "content": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24], "candlestick": 1, "docker_chatbot": 2, "app": [2, 7, 8, 10, 24], "chatbot_v2": 2, "final_chatbot": 2, "docker_correl": 3, "generate_result": 3, "main": [3, 4, 5, 6, 7, 15, 17, 19], "news_extraction_dynamodb": 3, "docker_debrief": 4, "access_fil": 4, "create_json": 4, "get_dynamodb_data": 4, "helper": 4, "rds_db": 4, "docker_enrich": 5, "db_oper": 5, "return": [5, 14, 18], "event_classif": 5, "event_detect": 5, "summari": 5, "paramet": [5, 12, 14, 18], "helper_func": 5, "main_v5": 5, "model_load": 5, "multiclass_classif": 5, "new_main_v4": 5, "org_frequ": 5, "summar": 5, "tsa": 5, "docker_microservic": 6, "docker_news_aggreg": 7, "create_visu": [7, 24], "fetch_data": [7, 24], "fetch_data_for_todai": 7, "docker_search": [8, 9], "create_model": [8, 10], "fetch_from_db": [8, 10], "model": [8, 10], "remove_older_doc": [8, 10], "update_embed": [8, 10], "util": [8, 10], "test": [9, 11], "test_api": [9, 11], "test_model": [9, 11], "test_util": [9, 11], "docker_search_ec2": [10, 11], "docker_stock_ingest": 12, "stock_ingest": 12, "docker_stock_predict": [13, 14], "stock_prediction_1": 14, "stock_prediction_2": 14, "docker_todays_senti": 15, "todays_senti": 15, "docker_top": 16, "main_top": 16, "docker_topics_earning_call_transcript": 17, "earning_call_main": 17, "docker_trend_predict": 18, "trend_predict": 18, "step": 18, "docker_tweet": [19, 20, 21], "news_ingestion_aw": 19, "tweets_ingestion_aw": 19, "bloomberg_scraping_bot_test": 20, "rotating_proxi": 20, "new": 21, "tweet": 21, "migrat": 21, "s3_to_dynamo": 21, "welcom": 22, "algofabr": 22, "backend": 22, "": 22, "document": 22, "indic": 22, "tabl": 22, "fabric_backend_aw": 23, "news_aggregator_api": 24}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 60}, "alltitles": {"candlestick_patterns package": [[0, "candlestick-patterns-package"]], "Subpackages": [[0, "subpackages"], [8, "subpackages"], [10, "subpackages"], [13, "subpackages"], [19, "subpackages"]], "Submodules": [[0, "submodules"], [1, "submodules"], [2, "submodules"], [3, "submodules"], [4, "submodules"], [5, "submodules"], [6, "submodules"], [7, "submodules"], [8, "submodules"], [9, "submodules"], [10, "submodules"], [11, "submodules"], [12, "submodules"], [14, "submodules"], [15, "submodules"], [16, "submodules"], [17, "submodules"], [18, "submodules"], [19, "submodules"], [20, "submodules"], [21, "submodules"], [24, "submodules"]], "candlestick_patterns.Data_Process module": [[0, "module-candlestick_patterns.Data_Process"]], "candlestick_patterns.Indecisive_Detection module": [[0, "module-candlestick_patterns.Indecisive_Detection"]], "candlestick_patterns.Patterns_Map module": [[0, "module-candlestick_patterns.Patterns_Map"]], "candlestick_patterns.upload module": [[0, "module-candlestick_patterns.upload"]], "Module contents": [[0, "module-candlestick_patterns"], [1, "module-candlestick_patterns.candlestick"], [2, "module-docker_chatbot"], [3, "module-docker_correlation"], [4, "module-docker_debrief"], [5, "module-docker_enrichment"], [6, "module-docker_microservices"], [7, "module-docker_news_aggregator"], [8, "module-docker_search"], [9, "module-docker_search.tests"], [10, "module-docker_search_ec2"], [11, "module-docker_search_ec2.tests"], [12, "module-docker_stock_ingestion"], [13, "module-docker_stock_prediction"], [14, "module-docker_stock_prediction.docker_stock_prediction"], [15, "module-docker_todays_sentiment"], [16, "module-docker_topics"], [17, "module-docker_topics_earning_call_transcripts"], [18, "module-docker_trend_prediction"], [19, "module-docker_tweets"], [20, "module-docker_tweets.Bloomberg_Scraping_Bot_Test"], [21, "module-contents"], [24, "module-news_aggregator_API"]], "candlestick_patterns.candlestick package": [[1, "candlestick-patterns-candlestick-package"]], "candlestick_patterns.candlestick.candlestick module": [[1, "candlestick-patterns-candlestick-candlestick-module"]], "docker_chatbot package": [[2, "docker-chatbot-package"]], "docker_chatbot.app module": [[2, "docker-chatbot-app-module"]], "docker_chatbot.chatbot_v2 module": [[2, "module-docker_chatbot.chatbot_v2"]], "docker_chatbot.final_chatbot module": [[2, "module-docker_chatbot.final_chatbot"]], "docker_correlation package": [[3, "docker-correlation-package"]], "docker_correlation.generate_results module": [[3, "module-docker_correlation.generate_results"]], "docker_correlation.main module": [[3, "module-docker_correlation.main"]], "docker_correlation.news_extraction_dynamodb module": [[3, "module-docker_correlation.news_extraction_dynamodb"]], "docker_debrief package": [[4, "docker-debrief-package"]], "docker_debrief.access_file module": [[4, "module-docker_debrief.access_file"]], "docker_debrief.create_json module": [[4, "module-docker_debrief.create_json"]], "docker_debrief.get_dynamodb_data module": [[4, "module-docker_debrief.get_dynamodb_data"]], "docker_debrief.helper module": [[4, "module-docker_debrief.helper"]], "docker_debrief.main module": [[4, "module-docker_debrief.main"]], "docker_debrief.rds_db module": [[4, "module-docker_debrief.rds_db"]], "docker_enrichment package": [[5, "docker-enrichment-package"]], "docker_enrichment.db_operations module": [[5, "module-docker_enrichment.db_operations"]], "Returns:": [[5, "returns"], [14, "id26"], [14, "id28"], [14, "id50"]], "docker_enrichment.event_classification module": [[5, "module-docker_enrichment.event_classification"]], "docker_enrichment.event_detection module": [[5, "module-docker_enrichment.event_detection"]], "Summary": [[5, "summary"]], "Parameters": [[5, "parameters"], [12, "parameters"], [14, "parameters"], [14, "id1"], [14, "id2"], [14, "id4"], [14, "id6"], [14, "id7"], [14, "id8"], [14, "id10"], [14, "id12"], [14, "id14"], [14, "id16"], [14, "id18"], [14, "id20"], [14, "id23"], [14, "id29"], [14, "id30"], [14, "id32"], [14, "id33"], [14, "id35"], [14, "id37"], [14, "id39"], [14, "id41"], [14, "id43"], [14, "id45"], [14, "id46"], [14, "id51"], [14, "id53"], [18, "parameters"], [18, "id1"], [18, "id3"], [18, "id7"]], "Returns": [[5, "id1"], [14, "returns"], [14, "id3"], [14, "id5"], [14, "id9"], [14, "id11"], [14, "id13"], [14, "id15"], [14, "id17"], [14, "id19"], [14, "id21"], [14, "id22"], [14, "id24"], [14, "id31"], [14, "id34"], [14, "id36"], [14, "id38"], [14, "id40"], [14, "id42"], [14, "id44"], [14, "id47"], [14, "id48"], [14, "id52"], [14, "id54"], [18, "returns"], [18, "id2"], [18, "id4"], [18, "id6"], [18, "id8"]], "docker_enrichment.helper_func module": [[5, "module-docker_enrichment.helper_func"]], "docker_enrichment.main module": [[5, "module-docker_enrichment.main"]], "docker_enrichment.main_v5 module": [[5, "module-docker_enrichment.main_v5"]], "docker_enrichment.model_loading module": [[5, "module-docker_enrichment.model_loading"]], "docker_enrichment.multiclass_Classification module": [[5, "module-docker_enrichment.multiclass_Classification"]], "docker_enrichment.new_main_v4 module": [[5, "module-docker_enrichment.new_main_v4"]], "docker_enrichment.org_frequency module": [[5, "module-docker_enrichment.org_frequency"]], "docker_enrichment.summarization module": [[5, "module-docker_enrichment.summarization"]], "docker_enrichment.tsa module": [[5, "module-docker_enrichment.tsa"]], "docker_microservices package": [[6, "docker-microservices-package"]], "docker_microservices.main module": [[6, "docker-microservices-main-module"]], "docker_news_aggregator package": [[7, "docker-news-aggregator-package"]], "docker_news_aggregator.app module": [[7, "module-docker_news_aggregator.app"]], "docker_news_aggregator.create_visualizations module": [[7, "module-docker_news_aggregator.create_visualizations"]], "docker_news_aggregator.fetch_data module": [[7, "docker-news-aggregator-fetch-data-module"]], "docker_news_aggregator.fetch_data_for_today module": [[7, "docker-news-aggregator-fetch-data-for-today-module"]], "docker_news_aggregator.main module": [[7, "module-docker_news_aggregator.main"]], "docker_search package": [[8, "docker-search-package"]], "docker_search.app module": [[8, "docker-search-app-module"]], "docker_search.create_models module": [[8, "module-docker_search.create_models"]], "docker_search.fetch_from_DB module": [[8, "module-docker_search.fetch_from_DB"]], "docker_search.models module": [[8, "module-docker_search.models"]], "docker_search.remove_older_docs module": [[8, "module-docker_search.remove_older_docs"]], "docker_search.update_embeddings module": [[8, "module-docker_search.update_embeddings"]], "docker_search.utils module": [[8, "module-docker_search.utils"]], "docker_search.tests package": [[9, "docker-search-tests-package"]], "docker_search.tests.test_api module": [[9, "module-docker_search.tests.test_api"]], "docker_search.tests.test_models module": [[9, "module-docker_search.tests.test_models"]], "docker_search.tests.test_utils module": [[9, "module-docker_search.tests.test_utils"]], "docker_search_ec2 package": [[10, "docker-search-ec2-package"]], "docker_search_ec2.app module": [[10, "docker-search-ec2-app-module"]], "docker_search_ec2.create_models module": [[10, "module-docker_search_ec2.create_models"]], "docker_search_ec2.fetch_from_DB module": [[10, "module-docker_search_ec2.fetch_from_DB"]], "docker_search_ec2.models module": [[10, "module-docker_search_ec2.models"]], "docker_search_ec2.remove_older_docs module": [[10, "module-docker_search_ec2.remove_older_docs"]], "docker_search_ec2.update_embeddings module": [[10, "module-docker_search_ec2.update_embeddings"]], "docker_search_ec2.utils module": [[10, "module-docker_search_ec2.utils"]], "docker_search_ec2.tests package": [[11, "docker-search-ec2-tests-package"]], "docker_search_ec2.tests.test_api module": [[11, "module-docker_search_ec2.tests.test_api"]], "docker_search_ec2.tests.test_models module": [[11, "module-docker_search_ec2.tests.test_models"]], "docker_search_ec2.tests.test_utils module": [[11, "module-docker_search_ec2.tests.test_utils"]], "docker_stock_ingestion package": [[12, "docker-stock-ingestion-package"]], "docker_stock_ingestion.stock_ingestion module": [[12, "module-docker_stock_ingestion.stock_ingestion"]], "docker_stock_prediction package": [[13, "docker-stock-prediction-package"]], "docker_stock_prediction.docker_stock_prediction package": [[14, "docker-stock-prediction-docker-stock-prediction-package"]], "docker_stock_prediction.docker_stock_prediction.stock_prediction_1 module": [[14, "module-docker_stock_prediction.docker_stock_prediction.stock_prediction_1"]], "Parameters:": [[14, "id25"], [14, "id27"], [14, "id49"]], "docker_stock_prediction.docker_stock_prediction.stock_prediction_2 module": [[14, "module-docker_stock_prediction.docker_stock_prediction.stock_prediction_2"]], "docker_todays_sentiment package": [[15, "docker-todays-sentiment-package"]], "docker_todays_sentiment.main module": [[15, "module-docker_todays_sentiment.main"]], "docker_todays_sentiment.todays_sentiment module": [[15, "module-docker_todays_sentiment.todays_sentiment"]], "docker_topics package": [[16, "docker-topics-package"]], "docker_topics.main_topics module": [[16, "docker-topics-main-topics-module"]], "docker_topics_earning_call_transcripts package": [[17, "docker-topics-earning-call-transcripts-package"]], "docker_topics_earning_call_transcripts.earning_call_main module": [[17, "module-docker_topics_earning_call_transcripts.earning_call_main"]], "docker_topics_earning_call_transcripts.main module": [[17, "module-docker_topics_earning_call_transcripts.main"]], "docker_trend_prediction package": [[18, "docker-trend-prediction-package"]], "docker_trend_prediction.Trend_prediction module": [[18, "module-docker_trend_prediction.Trend_prediction"]], "Steps": [[18, "steps"], [18, "id5"], [18, "id9"]], "docker_tweets package": [[19, "docker-tweets-package"]], "docker_tweets.main module": [[19, "module-docker_tweets.main"]], "docker_tweets.news_ingestion_aws module": [[19, "module-docker_tweets.news_ingestion_aws"]], "docker_tweets.tweets_ingestion_aws module": [[19, "module-docker_tweets.tweets_ingestion_aws"]], "docker_tweets.Bloomberg_Scraping_Bot_Test package": [[20, "docker-tweets-bloomberg-scraping-bot-test-package"]], "docker_tweets.Bloomberg_Scraping_Bot_Test.rotating_proxies module": [[20, "module-docker_tweets.Bloomberg_Scraping_Bot_Test.rotating_proxies"]], "docker_tweets.News & Tweets Migration package": [[21, "docker-tweets-news-tweets-migration-package"]], "docker_tweets.News & Tweets Migration.s3_to_dynamo module": [[21, "docker-tweets-news-tweets-migration-s3-to-dynamo-module"]], "Welcome to AlgoFabric-Backend\u2019s documentation!": [[22, "welcome-to-algofabric-backend-s-documentation"]], "Contents:": [[22, null]], "Indices and tables": [[22, "indices-and-tables"]], "fabric_backend_AWS": [[23, "fabric-backend-aws"]], "news_aggregator_API package": [[24, "news-aggregator-api-package"]], "news_aggregator_API.app module": [[24, "news-aggregator-api-app-module"]], "news_aggregator_API.create_visualizations module": [[24, "module-news_aggregator_API.create_visualizations"]], "news_aggregator_API.fetch_data module": [[24, "news-aggregator-api-fetch-data-module"]]}, "indexentries": {"candlestick_patterns": [[0, "module-candlestick_patterns"]], "candlestick_patterns.data_process": [[0, "module-candlestick_patterns.Data_Process"]], "candlestick_patterns.indecisive_detection": [[0, "module-candlestick_patterns.Indecisive_Detection"]], "candlestick_patterns.patterns_map": [[0, "module-candlestick_patterns.Patterns_Map"]], "candlestick_patterns.upload": [[0, "module-candlestick_patterns.upload"]], "download_data_from_s3_file() (in module candlestick_patterns.upload)": [[0, "candlestick_patterns.upload.download_data_from_s3_file"]], "download_files_from_s3() (in module candlestick_patterns.upload)": [[0, "candlestick_patterns.upload.download_files_from_s3"]], "get_jsonparsed_data() (in module candlestick_patterns.data_process)": [[0, "candlestick_patterns.Data_Process.get_jsonparsed_data"]], "get_ohlc_data() (in module candlestick_patterns.data_process)": [[0, "candlestick_patterns.Data_Process.get_ohlc_data"]], "handle_indecisive_patterns() (in module candlestick_patterns.indecisive_detection)": [[0, "candlestick_patterns.Indecisive_Detection.handle_indecisive_patterns"]], "identify_single_candlestick_patterns() (in module candlestick_patterns.indecisive_detection)": [[0, "candlestick_patterns.Indecisive_Detection.identify_single_candlestick_patterns"]], "map_patterns() (in module candlestick_patterns.patterns_map)": [[0, "candlestick_patterns.Patterns_Map.map_patterns"]], "module": [[0, "module-candlestick_patterns"], [0, "module-candlestick_patterns.Data_Process"], [0, "module-candlestick_patterns.Indecisive_Detection"], [0, "module-candlestick_patterns.Patterns_Map"], [0, "module-candlestick_patterns.upload"], [1, "module-candlestick_patterns.candlestick"], [2, "module-docker_chatbot"], [2, "module-docker_chatbot.chatbot_v2"], [2, "module-docker_chatbot.final_chatbot"], [3, "module-docker_correlation"], [3, "module-docker_correlation.generate_results"], [3, "module-docker_correlation.main"], [3, "module-docker_correlation.news_extraction_dynamodb"], [4, "module-docker_debrief"], [4, "module-docker_debrief.access_file"], [4, "module-docker_debrief.create_json"], [4, "module-docker_debrief.get_dynamodb_data"], [4, "module-docker_debrief.helper"], [4, "module-docker_debrief.main"], [4, "module-docker_debrief.rds_db"], [5, "module-docker_enrichment"], [5, "module-docker_enrichment.db_operations"], [5, "module-docker_enrichment.event_classification"], [5, "module-docker_enrichment.event_detection"], [5, "module-docker_enrichment.helper_func"], [5, "module-docker_enrichment.main"], [5, "module-docker_enrichment.main_v5"], [5, "module-docker_enrichment.model_loading"], [5, "module-docker_enrichment.multiclass_Classification"], [5, "module-docker_enrichment.new_main_v4"], [5, "module-docker_enrichment.org_frequency"], [5, "module-docker_enrichment.summarization"], [5, "module-docker_enrichment.tsa"], [6, "module-docker_microservices"], [7, "module-docker_news_aggregator"], [7, "module-docker_news_aggregator.app"], [7, "module-docker_news_aggregator.create_visualizations"], [7, "module-docker_news_aggregator.main"], [8, "module-docker_search"], [8, "module-docker_search.create_models"], [8, "module-docker_search.fetch_from_DB"], [8, "module-docker_search.models"], [8, "module-docker_search.remove_older_docs"], [8, "module-docker_search.update_embeddings"], [8, "module-docker_search.utils"], [9, "module-docker_search.tests"], [9, "module-docker_search.tests.test_api"], [9, "module-docker_search.tests.test_models"], [9, "module-docker_search.tests.test_utils"], [10, "module-docker_search_ec2"], [10, "module-docker_search_ec2.create_models"], [10, "module-docker_search_ec2.fetch_from_DB"], [10, "module-docker_search_ec2.models"], [10, "module-docker_search_ec2.remove_older_docs"], [10, "module-docker_search_ec2.update_embeddings"], [10, "module-docker_search_ec2.utils"], [11, "module-docker_search_ec2.tests"], [11, "module-docker_search_ec2.tests.test_api"], [11, "module-docker_search_ec2.tests.test_models"], [11, "module-docker_search_ec2.tests.test_utils"], [12, "module-docker_stock_ingestion"], [12, "module-docker_stock_ingestion.stock_ingestion"], [13, "module-docker_stock_prediction"], [14, "module-docker_stock_prediction.docker_stock_prediction"], [14, "module-docker_stock_prediction.docker_stock_prediction.stock_prediction_1"], [14, "module-docker_stock_prediction.docker_stock_prediction.stock_prediction_2"], [15, "module-docker_todays_sentiment"], [15, "module-docker_todays_sentiment.main"], [15, "module-docker_todays_sentiment.todays_sentiment"], [16, "module-docker_topics"], [17, "module-docker_topics_earning_call_transcripts"], [17, "module-docker_topics_earning_call_transcripts.earning_call_main"], [17, "module-docker_topics_earning_call_transcripts.main"], [18, "module-docker_trend_prediction"], [18, "module-docker_trend_prediction.Trend_prediction"], [19, "module-docker_tweets"], [19, "module-docker_tweets.main"], [19, "module-docker_tweets.news_ingestion_aws"], [19, "module-docker_tweets.tweets_ingestion_aws"], [20, "module-docker_tweets.Bloomberg_Scraping_Bot_Test"], [20, "module-docker_tweets.Bloomberg_Scraping_Bot_Test.rotating_proxies"], [24, "module-news_aggregator_API"], [24, "module-news_aggregator_API.create_visualizations"]], "upload_data_to_s3() (in module candlestick_patterns.upload)": [[0, "candlestick_patterns.upload.upload_data_to_s3"]], "upload_json_file_to_s3() (in module candlestick_patterns.upload)": [[0, "candlestick_patterns.upload.upload_json_file_to_s3"]], "candlestick_patterns.candlestick": [[1, "module-candlestick_patterns.candlestick"]], "docker_chatbot": [[2, "module-docker_chatbot"]], "docker_chatbot.chatbot_v2": [[2, "module-docker_chatbot.chatbot_v2"]], "docker_chatbot.final_chatbot": [[2, "module-docker_chatbot.final_chatbot"]], "get_result() (in module docker_chatbot.chatbot_v2)": [[2, "docker_chatbot.chatbot_v2.get_result"]], "get_result() (in module docker_chatbot.final_chatbot)": [[2, "docker_chatbot.final_chatbot.get_result"]], "handler() (in module docker_chatbot.final_chatbot)": [[2, "docker_chatbot.final_chatbot.handler"]], "config_table() (in module docker_correlation.main)": [[3, "docker_correlation.main.config_table"]], "docker_correlation": [[3, "module-docker_correlation"]], "docker_correlation.generate_results": [[3, "module-docker_correlation.generate_results"]], "docker_correlation.main": [[3, "module-docker_correlation.main"]], "docker_correlation.news_extraction_dynamodb": [[3, "module-docker_correlation.news_extraction_dynamodb"]], "extract_new_data() (in module docker_correlation.main)": [[3, "docker_correlation.main.extract_new_data"]], "initialize_table() (in module docker_correlation.main)": [[3, "docker_correlation.main.initialize_table"]], "new_results() (in module docker_correlation.generate_results)": [[3, "docker_correlation.generate_results.new_results"]], "read_news_data1() (in module docker_correlation.news_extraction_dynamodb)": [[3, "docker_correlation.news_extraction_dynamodb.read_news_data1"]], "write_json_file() (in module docker_correlation.main)": [[3, "docker_correlation.main.write_json_file"]], "a_intro() (in module docker_debrief.access_file)": [[4, "docker_debrief.access_file.a_intro"]], "a_intro() (in module docker_debrief.main)": [[4, "docker_debrief.main.a_intro"]], "create_company_docs() (in module docker_debrief.create_json)": [[4, "docker_debrief.create_json.create_company_docs"]], "create_default() (in module docker_debrief.get_dynamodb_data)": [[4, "docker_debrief.get_dynamodb_data.create_default"]], "create_header() (in module docker_debrief.create_json)": [[4, "docker_debrief.create_json.create_header"]], "create_invalidation() (in module docker_debrief.helper)": [[4, "docker_debrief.helper.create_invalidation"]], "create_news() (in module docker_debrief.create_json)": [[4, "docker_debrief.create_json.create_news"]], "create_overview() (in module docker_debrief.create_json)": [[4, "docker_debrief.create_json.create_overview"]], "create_technical_analysis() (in module docker_debrief.create_json)": [[4, "docker_debrief.create_json.create_technical_analysis"]], "create_tweets() (in module docker_debrief.create_json)": [[4, "docker_debrief.create_json.create_tweets"]], "dict_none_output() (in module docker_debrief.create_json)": [[4, "docker_debrief.create_json.dict_None_output"]], "dict_output() (in module docker_debrief.create_json)": [[4, "docker_debrief.create_json.dict_output"]], "docker_debrief": [[4, "module-docker_debrief"]], "docker_debrief.access_file": [[4, "module-docker_debrief.access_file"]], "docker_debrief.create_json": [[4, "module-docker_debrief.create_json"]], "docker_debrief.get_dynamodb_data": [[4, "module-docker_debrief.get_dynamodb_data"]], "docker_debrief.helper": [[4, "module-docker_debrief.helper"]], "docker_debrief.main": [[4, "module-docker_debrief.main"]], "docker_debrief.rds_db": [[4, "module-docker_debrief.rds_db"]], "fetch_data_summary() (in module docker_debrief.create_json)": [[4, "docker_debrief.create_json.fetch_data_summary"]], "fetch_debrief_data() (in module docker_debrief.create_json)": [[4, "docker_debrief.create_json.fetch_debrief_data"]], "get_company_about() (in module docker_debrief.main)": [[4, "docker_debrief.main.get_company_about"]], "get_company_information() (in module docker_debrief.main)": [[4, "docker_debrief.main.get_company_information"]], "get_secret() (in module docker_debrief.access_file)": [[4, "docker_debrief.access_file.get_secret"]], "lambd_func() (in module docker_debrief.main)": [[4, "docker_debrief.main.lambd_func"]], "myconverter() (in module docker_debrief.helper)": [[4, "docker_debrief.helper.myconverter"]], "rds_con() (in module docker_debrief.rds_db)": [[4, "docker_debrief.rds_db.rds_con"]], "read_data_dynamodb() (in module docker_debrief.get_dynamodb_data)": [[4, "docker_debrief.get_dynamodb_data.read_data_dynamodb"]], "read_data_from_s3() (in module docker_debrief.create_json)": [[4, "docker_debrief.create_json.read_data_from_s3"]], "read_news_data() (in module docker_debrief.get_dynamodb_data)": [[4, "docker_debrief.get_dynamodb_data.read_news_data"]], "read_tweets_data() (in module docker_debrief.get_dynamodb_data)": [[4, "docker_debrief.get_dynamodb_data.read_tweets_data"]], "sum_get_total_news() (in module docker_debrief.get_dynamodb_data)": [[4, "docker_debrief.get_dynamodb_data.sum_get_total_news"]], "sum_get_total_tweets() (in module docker_debrief.get_dynamodb_data)": [[4, "docker_debrief.get_dynamodb_data.sum_get_total_tweets"]], "updated_dict() (in module docker_debrief.create_json)": [[4, "docker_debrief.create_json.updated_dict"]], "working_check() (in module docker_debrief.create_json)": [[4, "docker_debrief.create_json.working_check"]], "write_json_file() (in module docker_debrief.helper)": [[4, "docker_debrief.helper.write_json_file"]], "a_intro() (in module docker_enrichment.main_v5)": [[5, "docker_enrichment.main_v5.a_intro"]], "a_intro() (in module docker_enrichment.new_main_v4)": [[5, "docker_enrichment.new_main_v4.a_intro"]], "aggregate_sentiment_news_level() (in module docker_enrichment.tsa)": [[5, "docker_enrichment.tsa.aggregate_sentiment_news_level"]], "analyze_sentiment() (in module docker_enrichment.main_v5)": [[5, "docker_enrichment.main_v5.analyze_sentiment"]], "analyze_sentiment() (in module docker_enrichment.new_main_v4)": [[5, "docker_enrichment.new_main_v4.analyze_sentiment"]], "analyze_sentiment() (in module docker_enrichment.tsa)": [[5, "docker_enrichment.tsa.analyze_sentiment"]], "clean_result() (in module docker_enrichment.org_frequency)": [[5, "docker_enrichment.org_frequency.clean_result"]], "clean_text_new() (in module docker_enrichment.main_v5)": [[5, "docker_enrichment.main_v5.clean_text_new"]], "clean_text_new() (in module docker_enrichment.multiclass_classification)": [[5, "docker_enrichment.multiclass_Classification.clean_text_new"]], "compute_summary() (in module docker_enrichment.main_v5)": [[5, "docker_enrichment.main_v5.compute_summary"]], "compute_summary() (in module docker_enrichment.new_main_v4)": [[5, "docker_enrichment.new_main_v4.compute_summary"]], "compute_summary() (in module docker_enrichment.summarization)": [[5, "docker_enrichment.summarization.compute_summary"]], "compute_summary_updated() (in module docker_enrichment.main_v5)": [[5, "docker_enrichment.main_v5.compute_summary_updated"]], "compute_summary_updated() (in module docker_enrichment.new_main_v4)": [[5, "docker_enrichment.new_main_v4.compute_summary_updated"]], "compute_summary_updated() (in module docker_enrichment.summarization)": [[5, "docker_enrichment.summarization.compute_summary_updated"]], "docker_enrichment": [[5, "module-docker_enrichment"]], "docker_enrichment.db_operations": [[5, "module-docker_enrichment.db_operations"]], "docker_enrichment.event_classification": [[5, "module-docker_enrichment.event_classification"]], "docker_enrichment.event_detection": [[5, "module-docker_enrichment.event_detection"]], "docker_enrichment.helper_func": [[5, "module-docker_enrichment.helper_func"]], "docker_enrichment.main": [[5, "module-docker_enrichment.main"]], "docker_enrichment.main_v5": [[5, "module-docker_enrichment.main_v5"]], "docker_enrichment.model_loading": [[5, "module-docker_enrichment.model_loading"]], "docker_enrichment.multiclass_classification": [[5, "module-docker_enrichment.multiclass_Classification"]], "docker_enrichment.new_main_v4": [[5, "module-docker_enrichment.new_main_v4"]], "docker_enrichment.org_frequency": [[5, "module-docker_enrichment.org_frequency"]], "docker_enrichment.summarization": [[5, "module-docker_enrichment.summarization"]], "docker_enrichment.tsa": [[5, "module-docker_enrichment.tsa"]], "event_classification() (in module docker_enrichment.event_classification)": [[5, "docker_enrichment.event_classification.event_classification"]], "event_classification() (in module docker_enrichment.main_v5)": [[5, "docker_enrichment.main_v5.event_classification"]], "event_classification() (in module docker_enrichment.new_main_v4)": [[5, "docker_enrichment.new_main_v4.event_classification"]], "extract_org_frequency() (in module docker_enrichment.main_v5)": [[5, "docker_enrichment.main_v5.extract_org_frequency"]], "extract_org_frequency() (in module docker_enrichment.new_main_v4)": [[5, "docker_enrichment.new_main_v4.extract_org_frequency"]], "extract_org_frequency() (in module docker_enrichment.org_frequency)": [[5, "docker_enrichment.org_frequency.extract_org_frequency"]], "extract_sents() (in module docker_enrichment.main_v5)": [[5, "docker_enrichment.main_v5.extract_sents"]], "extract_sents() (in module docker_enrichment.new_main_v4)": [[5, "docker_enrichment.new_main_v4.extract_sents"]], "extract_sents() (in module docker_enrichment.tsa)": [[5, "docker_enrichment.tsa.extract_sents"]], "fetch_config_data() (in module docker_enrichment.db_operations)": [[5, "docker_enrichment.db_operations.fetch_config_data"]], "fetch_config_data() (in module docker_enrichment.main_v5)": [[5, "docker_enrichment.main_v5.fetch_config_data"]], "fetch_config_data() (in module docker_enrichment.new_main_v4)": [[5, "docker_enrichment.new_main_v4.fetch_config_data"]], "fetch_data_from_table() (in module docker_enrichment.db_operations)": [[5, "docker_enrichment.db_operations.fetch_data_from_table"]], "fetch_data_from_table() (in module docker_enrichment.main_v5)": [[5, "docker_enrichment.main_v5.fetch_data_from_table"]], "fetch_data_from_table() (in module docker_enrichment.new_main_v4)": [[5, "docker_enrichment.new_main_v4.fetch_data_from_table"]], "find_events() (in module docker_enrichment.event_detection)": [[5, "docker_enrichment.event_detection.find_events"]], "find_mult_class() (in module docker_enrichment.event_detection)": [[5, "docker_enrichment.event_detection.find_mult_class"]], "find_sent_with_company() (in module docker_enrichment.main_v5)": [[5, "docker_enrichment.main_v5.find_sent_with_company"]], "find_sent_with_company() (in module docker_enrichment.new_main_v4)": [[5, "docker_enrichment.new_main_v4.find_sent_with_company"]], "find_sent_with_company() (in module docker_enrichment.tsa)": [[5, "docker_enrichment.tsa.find_sent_with_company"]], "get_connection() (in module docker_enrichment.main)": [[5, "docker_enrichment.main.get_connection"]], "get_connection() (in module docker_enrichment.main_v5)": [[5, "docker_enrichment.main_v5.get_connection"]], "get_connection() (in module docker_enrichment.new_main_v4)": [[5, "docker_enrichment.new_main_v4.get_connection"]], "get_news_labels() (in module docker_enrichment.main_v5)": [[5, "docker_enrichment.main_v5.get_news_labels"]], "get_news_labels() (in module docker_enrichment.multiclass_classification)": [[5, "docker_enrichment.multiclass_Classification.get_news_labels"]], "get_sentiment_class() (in module docker_enrichment.main_v5)": [[5, "docker_enrichment.main_v5.get_sentiment_class"]], "get_sentiment_class() (in module docker_enrichment.new_main_v4)": [[5, "docker_enrichment.new_main_v4.get_sentiment_class"]], "get_sentiment_class() (in module docker_enrichment.tsa)": [[5, "docker_enrichment.tsa.get_sentiment_class"]], "get_sentiment_modified() (in module docker_enrichment.main_v5)": [[5, "docker_enrichment.main_v5.get_sentiment_modified"]], "get_sentiment_modified() (in module docker_enrichment.new_main_v4)": [[5, "docker_enrichment.new_main_v4.get_sentiment_modified"]], "get_sentiment_modified() (in module docker_enrichment.tsa)": [[5, "docker_enrichment.tsa.get_sentiment_modified"]], "get_ticker_names_and_id() (in module docker_enrichment.db_operations)": [[5, "docker_enrichment.db_operations.get_ticker_names_and_id"]], "get_ticker_names_and_id() (in module docker_enrichment.main_v5)": [[5, "docker_enrichment.main_v5.get_ticker_names_and_id"]], "get_ticker_names_and_id() (in module docker_enrichment.new_main_v4)": [[5, "docker_enrichment.new_main_v4.get_ticker_names_and_id"]], "load_pickle_file() (in module docker_enrichment.main_v5)": [[5, "docker_enrichment.main_v5.load_pickle_file"]], "load_pickle_file() (in module docker_enrichment.model_loading)": [[5, "docker_enrichment.model_loading.load_pickle_file"]], "loading_distilbert_base() (in module docker_enrichment.model_loading)": [[5, "docker_enrichment.model_loading.loading_DistilBert_base"]], "loading_news_multiclass_models() (in module docker_enrichment.model_loading)": [[5, "docker_enrichment.model_loading.loading_news_multiclass_models"]], "loading_sent_model() (in module docker_enrichment.model_loading)": [[5, "docker_enrichment.model_loading.loading_sent_model"]], "loading_summ_model() (in module docker_enrichment.model_loading)": [[5, "docker_enrichment.model_loading.loading_summ_model"]], "perform_enrichment() (in module docker_enrichment.main)": [[5, "docker_enrichment.main.perform_enrichment"]], "perform_enrichment() (in module docker_enrichment.main_v5)": [[5, "docker_enrichment.main_v5.perform_enrichment"]], "perform_enrichment() (in module docker_enrichment.new_main_v4)": [[5, "docker_enrichment.new_main_v4.perform_enrichment"]], "stemming() (in module docker_enrichment.main_v5)": [[5, "docker_enrichment.main_v5.stemming"]], "stemming() (in module docker_enrichment.multiclass_classification)": [[5, "docker_enrichment.multiclass_Classification.stemming"]], "time_func() (in module docker_enrichment.helper_func)": [[5, "docker_enrichment.helper_func.time_func"]], "time_func() (in module docker_enrichment.org_frequency)": [[5, "docker_enrichment.org_frequency.time_func"]], "update_table() (in module docker_enrichment.db_operations)": [[5, "docker_enrichment.db_operations.update_table"]], "update_table() (in module docker_enrichment.main_v5)": [[5, "docker_enrichment.main_v5.update_table"]], "update_table() (in module docker_enrichment.new_main_v4)": [[5, "docker_enrichment.new_main_v4.update_table"]], "upload_data() (in module docker_enrichment.db_operations)": [[5, "docker_enrichment.db_operations.upload_data"]], "upload_data() (in module docker_enrichment.main_v5)": [[5, "docker_enrichment.main_v5.upload_data"]], "upload_data() (in module docker_enrichment.new_main_v4)": [[5, "docker_enrichment.new_main_v4.upload_data"]], "docker_microservices": [[6, "module-docker_microservices"]], "combine_data() (in module docker_news_aggregator.main)": [[7, "docker_news_aggregator.main.combine_data"]], "create_visualizations() (in module docker_news_aggregator.create_visualizations)": [[7, "docker_news_aggregator.create_visualizations.create_visualizations"]], "docker_news_aggregator": [[7, "module-docker_news_aggregator"]], "docker_news_aggregator.app": [[7, "module-docker_news_aggregator.app"]], "docker_news_aggregator.create_visualizations": [[7, "module-docker_news_aggregator.create_visualizations"]], "docker_news_aggregator.main": [[7, "module-docker_news_aggregator.main"]], "get_all_news() (in module docker_news_aggregator.main)": [[7, "docker_news_aggregator.main.get_all_news"]], "get_avg_sent_score_across_days() (in module docker_news_aggregator.create_visualizations)": [[7, "docker_news_aggregator.create_visualizations.get_avg_sent_score_across_days"]], "get_entity_tree_diagram() (in module docker_news_aggregator.create_visualizations)": [[7, "docker_news_aggregator.create_visualizations.get_entity_tree_diagram"]], "get_event_label_heatmap() (in module docker_news_aggregator.create_visualizations)": [[7, "docker_news_aggregator.create_visualizations.get_event_label_heatmap"]], "get_ner_org_freq() (in module docker_news_aggregator.create_visualizations)": [[7, "docker_news_aggregator.create_visualizations.get_ner_org_freq"]], "get_news_articles() (in module docker_news_aggregator.create_visualizations)": [[7, "docker_news_aggregator.create_visualizations.get_news_articles"]], "get_news_cum_plot() (in module docker_news_aggregator.create_visualizations)": [[7, "docker_news_aggregator.create_visualizations.get_news_cum_plot"]], "get_news_data_json() (in module docker_news_aggregator.app)": [[7, "docker_news_aggregator.app.get_news_data_json"]], "get_news_distrib_across_days() (in module docker_news_aggregator.create_visualizations)": [[7, "docker_news_aggregator.create_visualizations.get_news_distrib_across_days"]], "get_news_source_distrib() (in module docker_news_aggregator.create_visualizations)": [[7, "docker_news_aggregator.create_visualizations.get_news_source_distrib"]], "get_normalized_sentiment_score() (in module docker_news_aggregator.create_visualizations)": [[7, "docker_news_aggregator.create_visualizations.get_normalized_sentiment_score"]], "get_price_line_chart() (in module docker_news_aggregator.create_visualizations)": [[7, "docker_news_aggregator.create_visualizations.get_price_line_chart"]], "get_sentiment_lables() (in module docker_news_aggregator.create_visualizations)": [[7, "docker_news_aggregator.create_visualizations.get_sentiment_lables"]], "get_sentiment_score() (in module docker_news_aggregator.create_visualizations)": [[7, "docker_news_aggregator.create_visualizations.get_sentiment_score"]], "get_sentiment_stacked_barchart() (in module docker_news_aggregator.create_visualizations)": [[7, "docker_news_aggregator.create_visualizations.get_sentiment_stacked_barchart"]], "get_ticker_news_data() (in module docker_news_aggregator.main)": [[7, "docker_news_aggregator.main.get_ticker_news_data"]], "make_cumulative_vol_chart() (in module docker_news_aggregator.create_visualizations)": [[7, "docker_news_aggregator.create_visualizations.make_cumulative_vol_chart"]], "read_json_file() (in module docker_news_aggregator.main)": [[7, "docker_news_aggregator.main.read_json_file"]], "write_json_file() (in module docker_news_aggregator.main)": [[7, "docker_news_aggregator.main.write_json_file"]], "a_intro() (in module docker_search.create_models)": [[8, "docker_search.create_models.a_intro"]], "a_intro() (in module docker_search.fetch_from_db)": [[8, "docker_search.fetch_from_DB.a_intro"]], "a_intro() (in module docker_search.models)": [[8, "docker_search.models.a_intro"]], "a_intro() (in module docker_search.remove_older_docs)": [[8, "docker_search.remove_older_docs.a_intro"]], "a_intro() (in module docker_search.update_embeddings)": [[8, "docker_search.update_embeddings.a_intro"]], "a_intro() (in module docker_search.utils)": [[8, "docker_search.utils.a_intro"]], "assign_unique_ids() (in module docker_search.fetch_from_db)": [[8, "docker_search.fetch_from_DB.assign_unique_ids"]], "check_type() (in module docker_search.utils)": [[8, "docker_search.utils.check_type"]], "convert_datetime_to_date() (in module docker_search.utils)": [[8, "docker_search.utils.convert_datetime_to_date"]], "create_resources() (in module docker_search.create_models)": [[8, "docker_search.create_models.create_resources"]], "docker_search": [[8, "module-docker_search"]], "docker_search.create_models": [[8, "module-docker_search.create_models"]], "docker_search.fetch_from_db": [[8, "module-docker_search.fetch_from_DB"]], "docker_search.models": [[8, "module-docker_search.models"]], "docker_search.remove_older_docs": [[8, "module-docker_search.remove_older_docs"]], "docker_search.update_embeddings": [[8, "module-docker_search.update_embeddings"]], "docker_search.utils": [[8, "module-docker_search.utils"]], "fetch_data() (in module docker_search.fetch_from_db)": [[8, "docker_search.fetch_from_DB.fetch_data"]], "get_documentids_from_uuid() (in module docker_search.utils)": [[8, "docker_search.utils.get_documentids_from_uuid"]], "get_documents_from_document_ids() (in module docker_search.utils)": [[8, "docker_search.utils.get_documents_from_document_ids"]], "get_documents_from_filenames() (in module docker_search.utils)": [[8, "docker_search.utils.get_documents_from_filenames"]], "get_dynamodb_connection() (in module docker_search.utils)": [[8, "docker_search.utils.get_dynamodb_connection"]], "get_dynamodb_table() (in module docker_search.utils)": [[8, "docker_search.utils.get_dynamodb_table"]], "get_today() (in module docker_search.utils)": [[8, "docker_search.utils.get_today"]], "load_document_search_pipeline() (in module docker_search.models)": [[8, "docker_search.models.load_document_search_pipeline"]], "load_document_store() (in module docker_search.models)": [[8, "docker_search.models.load_document_store"]], "load_preprocessor() (in module docker_search.models)": [[8, "docker_search.models.load_preprocessor"]], "load_query_classifier() (in module docker_search.models)": [[8, "docker_search.models.load_query_classifier"]], "load_reader() (in module docker_search.models)": [[8, "docker_search.models.load_reader"]], "load_retriever() (in module docker_search.models)": [[8, "docker_search.models.load_retriever"]], "months_between() (in module docker_search.utils)": [[8, "docker_search.utils.months_between"]], "outside_threshold() (in module docker_search.utils)": [[8, "docker_search.utils.outside_threshold"]], "process_prediction() (in module docker_search.utils)": [[8, "docker_search.utils.process_prediction"]], "process_qna_prediction() (in module docker_search.utils)": [[8, "docker_search.utils.process_qna_prediction"]], "remove_duplicates() (in module docker_search.fetch_from_db)": [[8, "docker_search.fetch_from_DB.remove_duplicates"]], "remove_older_docs() (in module docker_search.remove_older_docs)": [[8, "docker_search.remove_older_docs.remove_older_docs"]], "save_items_to_text_files() (in module docker_search.fetch_from_db)": [[8, "docker_search.fetch_from_DB.save_items_to_text_files"]], "transform_to_ui_format() (in module docker_search.utils)": [[8, "docker_search.utils.transform_to_ui_format"]], "update_embeddings() (in module docker_search.update_embeddings)": [[8, "docker_search.update_embeddings.update_embeddings"]], "docker_search.tests": [[9, "module-docker_search.tests"]], "docker_search.tests.test_api": [[9, "module-docker_search.tests.test_api"]], "docker_search.tests.test_models": [[9, "module-docker_search.tests.test_models"]], "docker_search.tests.test_utils": [[9, "module-docker_search.tests.test_utils"]], "test_convert_datetime_to_date() (in module docker_search.tests.test_utils)": [[9, "docker_search.tests.test_utils.test_convert_datetime_to_date"]], "test_health_check() (in module docker_search.tests.test_api)": [[9, "docker_search.tests.test_api.test_health_check"]], "test_load_reader() (in module docker_search.tests.test_models)": [[9, "docker_search.tests.test_models.test_load_reader"]], "test_outside_threshold_with_invalid_date() (in module docker_search.tests.test_utils)": [[9, "docker_search.tests.test_utils.test_outside_threshold_with_invalid_date"]], "test_outside_threshold_with_valid_date() (in module docker_search.tests.test_utils)": [[9, "docker_search.tests.test_utils.test_outside_threshold_with_valid_date"]], "test_question_answer_pipeline() (in module docker_search.tests.test_api)": [[9, "docker_search.tests.test_api.test_question_answer_pipeline"]], "test_retriever() (in module docker_search.tests.test_models)": [[9, "docker_search.tests.test_models.test_retriever"]], "test_semantic_search_news_response() (in module docker_search.tests.test_api)": [[9, "docker_search.tests.test_api.test_semantic_search_news_response"]], "test_semantic_search_pipeline() (in module docker_search.tests.test_api)": [[9, "docker_search.tests.test_api.test_semantic_search_pipeline"]], "test_semantic_search_tweets_response() (in module docker_search.tests.test_api)": [[9, "docker_search.tests.test_api.test_semantic_search_tweets_response"]], "test_wrong_type() (in module docker_search.tests.test_utils)": [[9, "docker_search.tests.test_utils.test_wrong_type"]], "a_intro() (in module docker_search_ec2.create_models)": [[10, "docker_search_ec2.create_models.a_intro"]], "a_intro() (in module docker_search_ec2.fetch_from_db)": [[10, "docker_search_ec2.fetch_from_DB.a_intro"]], "a_intro() (in module docker_search_ec2.models)": [[10, "docker_search_ec2.models.a_intro"]], "a_intro() (in module docker_search_ec2.remove_older_docs)": [[10, "docker_search_ec2.remove_older_docs.a_intro"]], "a_intro() (in module docker_search_ec2.update_embeddings)": [[10, "docker_search_ec2.update_embeddings.a_intro"]], "a_intro() (in module docker_search_ec2.utils)": [[10, "docker_search_ec2.utils.a_intro"]], "assign_unique_ids() (in module docker_search_ec2.fetch_from_db)": [[10, "docker_search_ec2.fetch_from_DB.assign_unique_ids"]], "check_type() (in module docker_search_ec2.utils)": [[10, "docker_search_ec2.utils.check_type"]], "convert_datetime_to_date() (in module docker_search_ec2.utils)": [[10, "docker_search_ec2.utils.convert_datetime_to_date"]], "create_resources() (in module docker_search_ec2.create_models)": [[10, "docker_search_ec2.create_models.create_resources"]], "docker_search_ec2": [[10, "module-docker_search_ec2"]], "docker_search_ec2.create_models": [[10, "module-docker_search_ec2.create_models"]], "docker_search_ec2.fetch_from_db": [[10, "module-docker_search_ec2.fetch_from_DB"]], "docker_search_ec2.models": [[10, "module-docker_search_ec2.models"]], "docker_search_ec2.remove_older_docs": [[10, "module-docker_search_ec2.remove_older_docs"]], "docker_search_ec2.update_embeddings": [[10, "module-docker_search_ec2.update_embeddings"]], "docker_search_ec2.utils": [[10, "module-docker_search_ec2.utils"]], "execute_fetch_from_db() (in module docker_search_ec2.fetch_from_db)": [[10, "docker_search_ec2.fetch_from_DB.execute_fetch_from_db"]], "fetch_data() (in module docker_search_ec2.fetch_from_db)": [[10, "docker_search_ec2.fetch_from_DB.fetch_data"]], "get_documentids_from_uuid() (in module docker_search_ec2.utils)": [[10, "docker_search_ec2.utils.get_documentids_from_uuid"]], "get_documents_from_document_ids() (in module docker_search_ec2.utils)": [[10, "docker_search_ec2.utils.get_documents_from_document_ids"]], "get_documents_from_filenames() (in module docker_search_ec2.utils)": [[10, "docker_search_ec2.utils.get_documents_from_filenames"]], "get_dynamodb_connection() (in module docker_search_ec2.utils)": [[10, "docker_search_ec2.utils.get_dynamodb_connection"]], "get_dynamodb_table() (in module docker_search_ec2.utils)": [[10, "docker_search_ec2.utils.get_dynamodb_table"]], "get_today() (in module docker_search_ec2.utils)": [[10, "docker_search_ec2.utils.get_today"]], "load_document_search_pipeline() (in module docker_search_ec2.models)": [[10, "docker_search_ec2.models.load_document_search_pipeline"]], "load_document_store() (in module docker_search_ec2.models)": [[10, "docker_search_ec2.models.load_document_store"]], "load_preprocessor() (in module docker_search_ec2.models)": [[10, "docker_search_ec2.models.load_preprocessor"]], "load_query_classifier() (in module docker_search_ec2.models)": [[10, "docker_search_ec2.models.load_query_classifier"]], "load_reader() (in module docker_search_ec2.models)": [[10, "docker_search_ec2.models.load_reader"]], "load_retriever() (in module docker_search_ec2.models)": [[10, "docker_search_ec2.models.load_retriever"]], "months_between() (in module docker_search_ec2.utils)": [[10, "docker_search_ec2.utils.months_between"]], "outside_threshold() (in module docker_search_ec2.utils)": [[10, "docker_search_ec2.utils.outside_threshold"]], "process_prediction() (in module docker_search_ec2.utils)": [[10, "docker_search_ec2.utils.process_prediction"]], "process_qna_prediction() (in module docker_search_ec2.utils)": [[10, "docker_search_ec2.utils.process_qna_prediction"]], "remove_duplicates() (in module docker_search_ec2.fetch_from_db)": [[10, "docker_search_ec2.fetch_from_DB.remove_duplicates"]], "remove_older_docs() (in module docker_search_ec2.remove_older_docs)": [[10, "docker_search_ec2.remove_older_docs.remove_older_docs"]], "save_items_to_text_files() (in module docker_search_ec2.fetch_from_db)": [[10, "docker_search_ec2.fetch_from_DB.save_items_to_text_files"]], "transform_to_ui_format() (in module docker_search_ec2.utils)": [[10, "docker_search_ec2.utils.transform_to_ui_format"]], "update_embeddings() (in module docker_search_ec2.update_embeddings)": [[10, "docker_search_ec2.update_embeddings.update_embeddings"]], "docker_search_ec2.tests": [[11, "module-docker_search_ec2.tests"]], "docker_search_ec2.tests.test_api": [[11, "module-docker_search_ec2.tests.test_api"]], "docker_search_ec2.tests.test_models": [[11, "module-docker_search_ec2.tests.test_models"]], "docker_search_ec2.tests.test_utils": [[11, "module-docker_search_ec2.tests.test_utils"]], "test_convert_datetime_to_date() (in module docker_search_ec2.tests.test_utils)": [[11, "docker_search_ec2.tests.test_utils.test_convert_datetime_to_date"]], "test_health_check() (in module docker_search_ec2.tests.test_api)": [[11, "docker_search_ec2.tests.test_api.test_health_check"]], "test_load_reader() (in module docker_search_ec2.tests.test_models)": [[11, "docker_search_ec2.tests.test_models.test_load_reader"]], "test_outside_threshold_with_invalid_date() (in module docker_search_ec2.tests.test_utils)": [[11, "docker_search_ec2.tests.test_utils.test_outside_threshold_with_invalid_date"]], "test_outside_threshold_with_valid_date() (in module docker_search_ec2.tests.test_utils)": [[11, "docker_search_ec2.tests.test_utils.test_outside_threshold_with_valid_date"]], "test_question_answer_pipeline() (in module docker_search_ec2.tests.test_api)": [[11, "docker_search_ec2.tests.test_api.test_question_answer_pipeline"]], "test_retriever() (in module docker_search_ec2.tests.test_models)": [[11, "docker_search_ec2.tests.test_models.test_retriever"]], "test_semantic_search_news_response() (in module docker_search_ec2.tests.test_api)": [[11, "docker_search_ec2.tests.test_api.test_semantic_search_news_response"]], "test_semantic_search_pipeline() (in module docker_search_ec2.tests.test_api)": [[11, "docker_search_ec2.tests.test_api.test_semantic_search_pipeline"]], "test_semantic_search_tweets_response() (in module docker_search_ec2.tests.test_api)": [[11, "docker_search_ec2.tests.test_api.test_semantic_search_tweets_response"]], "test_wrong_type() (in module docker_search_ec2.tests.test_utils)": [[11, "docker_search_ec2.tests.test_utils.test_wrong_type"]], "a_intro() (in module docker_stock_ingestion.stock_ingestion)": [[12, "docker_stock_ingestion.stock_ingestion.a_intro"]], "crawl_stock() (in module docker_stock_ingestion.stock_ingestion)": [[12, "docker_stock_ingestion.stock_ingestion.crawl_stock"]], "docker_stock_ingestion": [[12, "module-docker_stock_ingestion"]], "docker_stock_ingestion.stock_ingestion": [[12, "module-docker_stock_ingestion.stock_ingestion"]], "get_connection() (in module docker_stock_ingestion.stock_ingestion)": [[12, "docker_stock_ingestion.stock_ingestion.get_connection"]], "get_secret() (in module docker_stock_ingestion.stock_ingestion)": [[12, "docker_stock_ingestion.stock_ingestion.get_secret"]], "docker_stock_prediction": [[13, "module-docker_stock_prediction"]], "binary_classify() (in module docker_stock_prediction.docker_stock_prediction.stock_prediction_1)": [[14, "docker_stock_prediction.docker_stock_prediction.stock_prediction_1.binary_classify"]], "build_feature() (in module docker_stock_prediction.docker_stock_prediction.stock_prediction_1)": [[14, "docker_stock_prediction.docker_stock_prediction.stock_prediction_1.build_feature"]], "build_function_sector() (in module docker_stock_prediction.docker_stock_prediction.stock_prediction_1)": [[14, "docker_stock_prediction.docker_stock_prediction.stock_prediction_1.build_function_sector"]], "build_model() (in module docker_stock_prediction.docker_stock_prediction.stock_prediction_1)": [[14, "docker_stock_prediction.docker_stock_prediction.stock_prediction_1.build_model"]], "build_model() (in module docker_stock_prediction.docker_stock_prediction.stock_prediction_2)": [[14, "docker_stock_prediction.docker_stock_prediction.stock_prediction_2.build_model"]], "build_returns_and_output() (in module docker_stock_prediction.docker_stock_prediction.stock_prediction_1)": [[14, "docker_stock_prediction.docker_stock_prediction.stock_prediction_1.build_returns_and_output"]], "build_sentiment_mapping_csv() (in module docker_stock_prediction.docker_stock_prediction.stock_prediction_1)": [[14, "docker_stock_prediction.docker_stock_prediction.stock_prediction_1.build_sentiment_mapping_csv"]], "calculate_sentiment() (in module docker_stock_prediction.docker_stock_prediction.stock_prediction_1)": [[14, "docker_stock_prediction.docker_stock_prediction.stock_prediction_1.calculate_sentiment"]], "calculate_total_news() (in module docker_stock_prediction.docker_stock_prediction.stock_prediction_1)": [[14, "docker_stock_prediction.docker_stock_prediction.stock_prediction_1.calculate_total_news"]], "compute_accuracy_score() (in module docker_stock_prediction.docker_stock_prediction.stock_prediction_1)": [[14, "docker_stock_prediction.docker_stock_prediction.stock_prediction_1.compute_accuracy_score"]], "compute_accuracy_score() (in module docker_stock_prediction.docker_stock_prediction.stock_prediction_2)": [[14, "docker_stock_prediction.docker_stock_prediction.stock_prediction_2.compute_accuracy_score"]], "compute_auc() (in module docker_stock_prediction.docker_stock_prediction.stock_prediction_1)": [[14, "docker_stock_prediction.docker_stock_prediction.stock_prediction_1.compute_auc"]], "compute_auc() (in module docker_stock_prediction.docker_stock_prediction.stock_prediction_2)": [[14, "docker_stock_prediction.docker_stock_prediction.stock_prediction_2.compute_auc"]], "compute_f1() (in module docker_stock_prediction.docker_stock_prediction.stock_prediction_1)": [[14, "docker_stock_prediction.docker_stock_prediction.stock_prediction_1.compute_f1"]], "compute_f1() (in module docker_stock_prediction.docker_stock_prediction.stock_prediction_2)": [[14, "docker_stock_prediction.docker_stock_prediction.stock_prediction_2.compute_f1"]], "compute_indicators() (in module docker_stock_prediction.docker_stock_prediction.stock_prediction_2)": [[14, "docker_stock_prediction.docker_stock_prediction.stock_prediction_2.compute_indicators"]], "compute_output() (in module docker_stock_prediction.docker_stock_prediction.stock_prediction_2)": [[14, "docker_stock_prediction.docker_stock_prediction.stock_prediction_2.compute_output"]], "display_training_results() (in module docker_stock_prediction.docker_stock_prediction.stock_prediction_2)": [[14, "docker_stock_prediction.docker_stock_prediction.stock_prediction_2.display_training_results"]], "docker_stock_prediction.docker_stock_prediction": [[14, "module-docker_stock_prediction.docker_stock_prediction"]], "docker_stock_prediction.docker_stock_prediction.stock_prediction_1": [[14, "module-docker_stock_prediction.docker_stock_prediction.stock_prediction_1"]], "docker_stock_prediction.docker_stock_prediction.stock_prediction_2": [[14, "module-docker_stock_prediction.docker_stock_prediction.stock_prediction_2"]], "generate_feature() (in module docker_stock_prediction.docker_stock_prediction.stock_prediction_2)": [[14, "docker_stock_prediction.docker_stock_prediction.stock_prediction_2.generate_feature"]], "generate_x() (in module docker_stock_prediction.docker_stock_prediction.stock_prediction_1)": [[14, "docker_stock_prediction.docker_stock_prediction.stock_prediction_1.generate_x"]], "generate_x_ws() (in module docker_stock_prediction.docker_stock_prediction.stock_prediction_1)": [[14, "docker_stock_prediction.docker_stock_prediction.stock_prediction_1.generate_x_ws"]], "get_classifier() (in module docker_stock_prediction.docker_stock_prediction.stock_prediction_1)": [[14, "docker_stock_prediction.docker_stock_prediction.stock_prediction_1.get_classifier"]], "get_classifier() (in module docker_stock_prediction.docker_stock_prediction.stock_prediction_2)": [[14, "docker_stock_prediction.docker_stock_prediction.stock_prediction_2.get_classifier"]], "get_connection() (in module docker_stock_prediction.docker_stock_prediction.stock_prediction_1)": [[14, "docker_stock_prediction.docker_stock_prediction.stock_prediction_1.get_connection"]], "get_connection() (in module docker_stock_prediction.docker_stock_prediction.stock_prediction_2)": [[14, "docker_stock_prediction.docker_stock_prediction.stock_prediction_2.get_connection"]], "get_cross_validator() (in module docker_stock_prediction.docker_stock_prediction.stock_prediction_1)": [[14, "docker_stock_prediction.docker_stock_prediction.stock_prediction_1.get_cross_validator"]], "get_news() (in module docker_stock_prediction.docker_stock_prediction.stock_prediction_1)": [[14, "docker_stock_prediction.docker_stock_prediction.stock_prediction_1.get_news"]], "get_secret() (in module docker_stock_prediction.docker_stock_prediction.stock_prediction_1)": [[14, "docker_stock_prediction.docker_stock_prediction.stock_prediction_1.get_secret"]], "get_secret() (in module docker_stock_prediction.docker_stock_prediction.stock_prediction_2)": [[14, "docker_stock_prediction.docker_stock_prediction.stock_prediction_2.get_secret"]], "get_ticker_names_and_id() (in module docker_stock_prediction.docker_stock_prediction.stock_prediction_1)": [[14, "docker_stock_prediction.docker_stock_prediction.stock_prediction_1.get_ticker_names_and_id"]], "get_ticker_names_and_id() (in module docker_stock_prediction.docker_stock_prediction.stock_prediction_2)": [[14, "docker_stock_prediction.docker_stock_prediction.stock_prediction_2.get_ticker_names_and_id"]], "main_function() (in module docker_stock_prediction.docker_stock_prediction.stock_prediction_2)": [[14, "docker_stock_prediction.docker_stock_prediction.stock_prediction_2.main_function"]], "map_sentiment() (in module docker_stock_prediction.docker_stock_prediction.stock_prediction_1)": [[14, "docker_stock_prediction.docker_stock_prediction.stock_prediction_1.map_sentiment"]], "process_output() (in module docker_stock_prediction.docker_stock_prediction.stock_prediction_1)": [[14, "docker_stock_prediction.docker_stock_prediction.stock_prediction_1.process_output"]], "process_output() (in module docker_stock_prediction.docker_stock_prediction.stock_prediction_2)": [[14, "docker_stock_prediction.docker_stock_prediction.stock_prediction_2.process_output"]], "save_model_to_db() (in module docker_stock_prediction.docker_stock_prediction.stock_prediction_1)": [[14, "docker_stock_prediction.docker_stock_prediction.stock_prediction_1.save_model_to_db"]], "train_model() (in module docker_stock_prediction.docker_stock_prediction.stock_prediction_2)": [[14, "docker_stock_prediction.docker_stock_prediction.stock_prediction_2.train_model"]], "write_data_to_rds() (in module docker_stock_prediction.docker_stock_prediction.stock_prediction_1)": [[14, "docker_stock_prediction.docker_stock_prediction.stock_prediction_1.write_data_to_RDS"]], "write_data_to_rds() (in module docker_stock_prediction.docker_stock_prediction.stock_prediction_2)": [[14, "docker_stock_prediction.docker_stock_prediction.stock_prediction_2.write_data_to_RDS"]], "calculate_sentiment() (in module docker_todays_sentiment.todays_sentiment)": [[15, "docker_todays_sentiment.todays_sentiment.calculate_sentiment"]], "config_table() (in module docker_todays_sentiment.main)": [[15, "docker_todays_sentiment.main.config_table"]], "docker_todays_sentiment": [[15, "module-docker_todays_sentiment"]], "docker_todays_sentiment.main": [[15, "module-docker_todays_sentiment.main"]], "docker_todays_sentiment.todays_sentiment": [[15, "module-docker_todays_sentiment.todays_sentiment"]], "extract_new_data() (in module docker_todays_sentiment.main)": [[15, "docker_todays_sentiment.main.extract_new_data"]], "initialize_table() (in module docker_todays_sentiment.main)": [[15, "docker_todays_sentiment.main.initialize_table"]], "read_result_data() (in module docker_todays_sentiment.main)": [[15, "docker_todays_sentiment.main.read_result_data"]], "working_check() (in module docker_todays_sentiment.main)": [[15, "docker_todays_sentiment.main.working_check"]], "write_json_file() (in module docker_todays_sentiment.main)": [[15, "docker_todays_sentiment.main.write_json_file"]], "docker_topics": [[16, "module-docker_topics"]], "optimal_model() (in module docker_topics_earning_call_transcripts.earning_call_main)": [[17, "docker_topics_earning_call_transcripts.earning_call_main.Optimal_Model"]], "optimal_model() (in module docker_topics_earning_call_transcripts.main)": [[17, "docker_topics_earning_call_transcripts.main.Optimal_Model"]], "sentiment_analysis() (in module docker_topics_earning_call_transcripts.earning_call_main)": [[17, "docker_topics_earning_call_transcripts.earning_call_main.Sentiment_Analysis"]], "topic_modeling_negative() (in module docker_topics_earning_call_transcripts.earning_call_main)": [[17, "docker_topics_earning_call_transcripts.earning_call_main.Topic_Modeling_Negative"]], "topic_modeling_news() (in module docker_topics_earning_call_transcripts.main)": [[17, "docker_topics_earning_call_transcripts.main.Topic_Modeling_News"]], "topic_modeling_positive() (in module docker_topics_earning_call_transcripts.earning_call_main)": [[17, "docker_topics_earning_call_transcripts.earning_call_main.Topic_Modeling_Positive"]], "topic_modeling_tweets() (in module docker_topics_earning_call_transcripts.main)": [[17, "docker_topics_earning_call_transcripts.main.Topic_Modeling_Tweets"]], "word_cloud_freq() (in module docker_topics_earning_call_transcripts.earning_call_main)": [[17, "docker_topics_earning_call_transcripts.earning_call_main.Word_Cloud_Freq"]], "word_cloud_freq() (in module docker_topics_earning_call_transcripts.main)": [[17, "docker_topics_earning_call_transcripts.main.Word_Cloud_Freq"]], "build_dataframe() (in module docker_topics_earning_call_transcripts.earning_call_main)": [[17, "docker_topics_earning_call_transcripts.earning_call_main.build_dataframe"]], "clean_text() (in module docker_topics_earning_call_transcripts.earning_call_main)": [[17, "docker_topics_earning_call_transcripts.earning_call_main.clean_text"]], "clean_text_modified() (in module docker_topics_earning_call_transcripts.main)": [[17, "docker_topics_earning_call_transcripts.main.clean_text_modified"]], "docker_topics_earning_call_transcripts": [[17, "module-docker_topics_earning_call_transcripts"]], "docker_topics_earning_call_transcripts.earning_call_main": [[17, "module-docker_topics_earning_call_transcripts.earning_call_main"]], "docker_topics_earning_call_transcripts.main": [[17, "module-docker_topics_earning_call_transcripts.main"]], "format_topics_sentences() (in module docker_topics_earning_call_transcripts.earning_call_main)": [[17, "docker_topics_earning_call_transcripts.earning_call_main.format_topics_sentences"]], "format_topics_sentences() (in module docker_topics_earning_call_transcripts.main)": [[17, "docker_topics_earning_call_transcripts.main.format_topics_sentences"]], "get_result() (in module docker_topics_earning_call_transcripts.earning_call_main)": [[17, "docker_topics_earning_call_transcripts.earning_call_main.get_result"]], "get_ticker_names_and_id() (in module docker_topics_earning_call_transcripts.main)": [[17, "docker_topics_earning_call_transcripts.main.get_ticker_names_and_id"]], "lemmatization() (in module docker_topics_earning_call_transcripts.earning_call_main)": [[17, "docker_topics_earning_call_transcripts.earning_call_main.lemmatization"]], "read_news_data() (in module docker_topics_earning_call_transcripts.main)": [[17, "docker_topics_earning_call_transcripts.main.read_news_data"]], "read_tweets_data() (in module docker_topics_earning_call_transcripts.main)": [[17, "docker_topics_earning_call_transcripts.main.read_tweets_data"]], "remove_stopwords() (in module docker_topics_earning_call_transcripts.earning_call_main)": [[17, "docker_topics_earning_call_transcripts.earning_call_main.remove_stopwords"]], "sentiment() (in module docker_topics_earning_call_transcripts.earning_call_main)": [[17, "docker_topics_earning_call_transcripts.earning_call_main.sentiment"]], "text_preprocessing_fn() (in module docker_topics_earning_call_transcripts.main)": [[17, "docker_topics_earning_call_transcripts.main.text_preprocessing_fn"]], "build_model() (in module docker_trend_prediction.trend_prediction)": [[18, "docker_trend_prediction.Trend_prediction.build_model"]], "compute_output() (in module docker_trend_prediction.trend_prediction)": [[18, "docker_trend_prediction.Trend_prediction.compute_output"]], "compute_trend_variable() (in module docker_trend_prediction.trend_prediction)": [[18, "docker_trend_prediction.Trend_prediction.compute_trend_variable"]], "docker_trend_prediction": [[18, "module-docker_trend_prediction"]], "docker_trend_prediction.trend_prediction": [[18, "module-docker_trend_prediction.Trend_prediction"]], "get_regressor() (in module docker_trend_prediction.trend_prediction)": [[18, "docker_trend_prediction.Trend_prediction.get_regressor"]], "train_model() (in module docker_trend_prediction.trend_prediction)": [[18, "docker_trend_prediction.Trend_prediction.train_model"]], "find_url() (in module docker_tweets.news_ingestion_aws)": [[19, "docker_tweets.news_ingestion_aws.Find_url"]], "a_intro() (in module docker_tweets.main)": [[19, "docker_tweets.main.a_intro"]], "a_intro() (in module docker_tweets.news_ingestion_aws)": [[19, "docker_tweets.news_ingestion_aws.a_intro"]], "a_intro() (in module docker_tweets.tweets_ingestion_aws)": [[19, "docker_tweets.tweets_ingestion_aws.a_intro"]], "add_news_article() (in module docker_tweets.news_ingestion_aws)": [[19, "docker_tweets.news_ingestion_aws.add_news_article"]], "contains_irrelavant_words() (in module docker_tweets.tweets_ingestion_aws)": [[19, "docker_tweets.tweets_ingestion_aws.contains_irrelavant_words"]], "contains_minimum_tokens() (in module docker_tweets.tweets_ingestion_aws)": [[19, "docker_tweets.tweets_ingestion_aws.contains_minimum_tokens"]], "crawl_news_by_keyword() (in module docker_tweets.news_ingestion_aws)": [[19, "docker_tweets.news_ingestion_aws.crawl_news_by_keyword"]], "crawl_tweets_by_keyword() (in module docker_tweets.tweets_ingestion_aws)": [[19, "docker_tweets.tweets_ingestion_aws.crawl_tweets_by_keyword"]], "docker_tweets": [[19, "module-docker_tweets"]], "docker_tweets.main": [[19, "module-docker_tweets.main"]], "docker_tweets.news_ingestion_aws": [[19, "module-docker_tweets.news_ingestion_aws"]], "docker_tweets.tweets_ingestion_aws": [[19, "module-docker_tweets.tweets_ingestion_aws"]], "filter_tweet() (in module docker_tweets.tweets_ingestion_aws)": [[19, "docker_tweets.tweets_ingestion_aws.filter_tweet"]], "get_content() (in module docker_tweets.news_ingestion_aws)": [[19, "docker_tweets.news_ingestion_aws.get_content"]], "news_lang_check() (in module docker_tweets.news_ingestion_aws)": [[19, "docker_tweets.news_ingestion_aws.news_lang_check"]], "news_longdesc_check() (in module docker_tweets.news_ingestion_aws)": [[19, "docker_tweets.news_ingestion_aws.news_longDesc_check"]], "update_tweet_table() (in module docker_tweets.tweets_ingestion_aws)": [[19, "docker_tweets.tweets_ingestion_aws.update_tweet_table"]], "docker_tweets.bloomberg_scraping_bot_test": [[20, "module-docker_tweets.Bloomberg_Scraping_Bot_Test"]], "docker_tweets.bloomberg_scraping_bot_test.rotating_proxies": [[20, "module-docker_tweets.Bloomberg_Scraping_Bot_Test.rotating_proxies"]], "test_proxy() (in module docker_tweets.bloomberg_scraping_bot_test.rotating_proxies)": [[20, "docker_tweets.Bloomberg_Scraping_Bot_Test.rotating_proxies.test_proxy"]], "create_visualizations() (in module news_aggregator_api.create_visualizations)": [[24, "news_aggregator_API.create_visualizations.create_visualizations"]], "get_avg_sent_score_across_days() (in module news_aggregator_api.create_visualizations)": [[24, "news_aggregator_API.create_visualizations.get_avg_sent_score_across_days"]], "get_entity_tree_diagram() (in module news_aggregator_api.create_visualizations)": [[24, "news_aggregator_API.create_visualizations.get_entity_tree_diagram"]], "get_event_label_heatmap() (in module news_aggregator_api.create_visualizations)": [[24, "news_aggregator_API.create_visualizations.get_event_label_heatmap"]], "get_ner_org_freq() (in module news_aggregator_api.create_visualizations)": [[24, "news_aggregator_API.create_visualizations.get_ner_org_freq"]], "get_news_articles() (in module news_aggregator_api.create_visualizations)": [[24, "news_aggregator_API.create_visualizations.get_news_articles"]], "get_news_cum_plot() (in module news_aggregator_api.create_visualizations)": [[24, "news_aggregator_API.create_visualizations.get_news_cum_plot"]], "get_news_distrib_across_days() (in module news_aggregator_api.create_visualizations)": [[24, "news_aggregator_API.create_visualizations.get_news_distrib_across_days"]], "get_news_source_distrib() (in module news_aggregator_api.create_visualizations)": [[24, "news_aggregator_API.create_visualizations.get_news_source_distrib"]], "get_normalized_sentiment_score() (in module news_aggregator_api.create_visualizations)": [[24, "news_aggregator_API.create_visualizations.get_normalized_sentiment_score"]], "get_price_line_chart() (in module news_aggregator_api.create_visualizations)": [[24, "news_aggregator_API.create_visualizations.get_price_line_chart"]], "get_sentiment_lables() (in module news_aggregator_api.create_visualizations)": [[24, "news_aggregator_API.create_visualizations.get_sentiment_lables"]], "get_sentiment_score() (in module news_aggregator_api.create_visualizations)": [[24, "news_aggregator_API.create_visualizations.get_sentiment_score"]], "get_sentiment_stacked_barchart() (in module news_aggregator_api.create_visualizations)": [[24, "news_aggregator_API.create_visualizations.get_sentiment_stacked_barchart"]], "make_cumulative_vol_chart() (in module news_aggregator_api.create_visualizations)": [[24, "news_aggregator_API.create_visualizations.make_cumulative_vol_chart"]], "news_aggregator_api": [[24, "module-news_aggregator_API"]], "news_aggregator_api.create_visualizations": [[24, "module-news_aggregator_API.create_visualizations"]]}})