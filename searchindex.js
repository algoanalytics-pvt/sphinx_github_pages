Search.setIndex({"docnames": ["docker_correlation", "docker_debrief", "docker_enrichment", "docker_microservices", "docker_search", "docker_search.tests", "docker_stock_ingestion", "docker_stock_prediction", "docker_stock_prediction.docker_stock_prediction", "docker_todays_sentiment", "docker_topics", "docker_topics_earning_call_transcripts", "docker_trend_prediction", "docker_tweets", "docker_tweets.News & Tweets Migration", "index", "modules"], "filenames": ["docker_correlation.rst", "docker_debrief.rst", "docker_enrichment.rst", "docker_microservices.rst", "docker_search.rst", "docker_search.tests.rst", "docker_stock_ingestion.rst", "docker_stock_prediction.rst", "docker_stock_prediction.docker_stock_prediction.rst", "docker_todays_sentiment.rst", "docker_topics.rst", "docker_topics_earning_call_transcripts.rst", "docker_trend_prediction.rst", "docker_tweets.rst", "docker_tweets.News & Tweets Migration.rst", "index.rst", "modules.rst"], "titles": ["docker_correlation package", "docker_debrief package", "docker_enrichment package", "docker_microservices package", "docker_search package", "docker_search.tests package", "docker_stock_ingestion package", "docker_stock_prediction package", "docker_stock_prediction.docker_stock_prediction package", "docker_todays_sentiment package", "docker_topics package", "docker_topics_earning_call_transcripts package", "docker_trend_prediction package", "docker_tweets package", "docker_tweets.News &amp; Tweets Migration package", "Welcome to AlgoFabric-Backend\u2019s documentation!", "fabric_backend_AWS"], "terms": {"new_result": [0, 16], "sourc": [0, 1, 2, 4, 5, 6, 8, 9, 11, 12, 13], "config_t": [0, 9, 16], "extract_new_data": [0, 9, 16], "initialize_t": [0, 9, 16], "write_json_fil": [0, 1, 9, 16], "file_nam": [0, 1, 4, 9], "write": [0, 1, 4, 6, 9], "json": [0, 1, 9], "object": [0, 1, 2, 4, 8, 9, 12, 13], "file": [0, 1, 4, 8, 9, 13], "arg": [0, 1, 2, 4, 9, 13], "string": [0, 1, 2, 4, 6, 9, 13], "filenam": [0, 1, 4, 9, 11], "current": [0, 1, 4, 6, 13], "ticker": [0, 1, 2, 8, 9, 13], "symbol": [0, 1, 8, 9], "data": [0, 1, 2, 4, 6, 8, 9, 12, 13], "dict": [0, 1, 2, 4, 9], "read_news_data1": [0, 16], "dai": [0, 1, 4, 8, 12], "int": [0, 1, 2, 4, 6, 8, 13], "retriev": [0, 1, 4], "new": [0, 1, 2, 4, 8, 13, 16], "from": [0, 1, 2, 4, 6, 8, 12, 13], "dynamodb": [0, 1, 2, 4, 8, 13], "tabl": [0, 1, 2, 4, 6, 8, 11, 13], "specifi": [0, 1, 2, 4, 12], "number": [0, 1, 2, 4, 8, 11, 12, 13], "news_for": [0, 1], "str": [0, 1, 2, 4, 8, 13], "categori": 0, "return": [0, 1, 2, 4, 6, 13], "A": [0, 1, 2, 4, 11], "dictionari": [0, 1, 2, 4], "contain": [0, 1, 2, 4, 6, 11, 13], "list": [0, 1, 2, 4, 6, 8, 13], "articl": [0, 2, 13], "each": [0, 2, 8], "repres": [0, 2], "nlp": [0, 2], "analysi": [0, 1, 2], "a_intro": [1, 2, 4, 6, 13, 16], "secret": [1, 6], "manag": [1, 6], "get_secret": [1, 6, 7, 8, 16], "valu": [1, 4, 6, 8, 12, 13], "create_company_doc": [1, 16], "ticker_data": 1, "creat": [1, 2, 4, 6, 8, 12, 13], "compani": [1, 2, 6, 8, 11, 13], "doc": [1, 2], "given": [1, 2, 4, 13], "earn": 1, "quarterli": 1, "report": 1, "earnings_result": 1, "quarterlyreport": 1, "quaterly_annual_report": 1, "create_head": [1, 16], "list_month": [1, 11], "today_d": 1, "index": [1, 4, 15], "header": 1, "base": [1, 2, 4, 8, 13], "provid": [1, 2, 13], "inform": [1, 4], "month": [1, 2, 4], "todai": [1, 4], "": [1, 2, 4], "date": [1, 4, 13], "stock": [1, 6, 8, 12], "id": [1, 2, 4, 11, 13], "create_new": [1, 16], "all_new": [1, 8], "sentiment": [1, 2, 4, 8, 11, 16], "event": [1, 2], "word": [1, 11, 13], "cloud": 1, "frequenc": [1, 2, 6, 13], "create_overview": [1, 16], "summary_data_dai": 1, "all_tweet": 1, "an": [1, 2, 4], "overview": 1, "volum": [1, 8], "tweet": [1, 4, 13, 16], "summari": [1, 2], "includ": [1, 2, 8], "graph": 1, "create_technical_analysi": [1, 16], "sect_dict": 1, "sector": [1, 2, 8, 11], "technic": 1, "about": [1, 2, 6, 8, 12, 13], "all": [1, 2, 4, 6, 8, 12, 13], "map": [1, 4, 8], "name": [1, 2, 4, 6, 8, 13], "stock_candle_stick_data": 1, "candle_stick_data": 1, "stock_candle_stick_data_y_format": 1, "open": 1, "high": 1, "low": 1, "close": [1, 8, 12], "close_vs_volum": 1, "news_count_vs_total_new": 1, "res_total_vs_ticker_new": 1, "news_sentiment_vs_volum": 1, "res_sentiment_vs_volum": 1, "tweet_count_vs_total_tweet": 1, "res_total_vs_ticker_tweet": 1, "tweet_sentiment_vs_volum": 1, "res_tweet_sentiment_vs_volum": 1, "create_tweet": [1, 16], "dict_none_output": [1, 16], "none": [1, 8, 13], "dict_output": [1, 16], "defaultdict": 1, "default": [1, 4], "fetch_data_summari": [1, 16], "ticker_nam": [1, 8, 13], "summary_json": 1, "ticker_id": [1, 6, 8, 12], "sinc": [1, 2], "until": 1, "datetim": [1, 4], "ist": 1, "which": [1, 2, 4, 6, 8, 13], "have": [1, 13], "gener": [1, 2, 4], "updat": [1, 2, 4, 13], "groupbi": 1, "color": 1, "per": 1, "percentil": [1, 12], "fetch_debrief_data": [1, 16], "predition_number_of_dai": 1, "fetch": [1, 2, 4, 6, 8], "debrief": 1, "predict": [1, 2, 4, 8, 12], "compon": 1, "header_inform": 1, "overview_tab": 1, "technical_analysi": 1, "read_data_from_s3": [1, 16], "bucket": [1, 8], "read": 1, "s3": [1, 8], "updated_dict": [1, 16], "float": [1, 2, 8], "working_check": [1, 16], "check": [1, 4, 13], "work": 1, "bse": 1, "calendar": 1, "format": [1, 4], "yyyi": 1, "mm": 1, "dd": 1, "create_default": [1, 16], "initi": [1, 2], "score": [1, 2, 4, 8], "total": [1, 8], "sentiment_scor": [1, 8], "set": [1, 4], "0": [1, 8, 13], "read_data_dynamodb": [1, 16], "dynamodb_cli": [1, 11], "table_nam": 1, "whole": 1, "boto3": [1, 2, 8], "client": [1, 6], "kei": [1, 2], "pair": 1, "read_news_data": [1, 11, 16], "paramet": 1, "start": [1, 4, 13], "group": [1, 8, 12], "field": 1, "read_tweets_data": [1, 11, 16], "tweet_for": 1, "sum_get_total_new": [1, 16], "get": [1, 2, 4, 8, 13], "end": [1, 4], "variou": [1, 6], "tupl": 1, "follow": [1, 2, 4, 13], "element": [1, 4, 13], "news_count": 1, "count": [1, 2, 8, 13], "news_sent": 1, "today_news_count": 1, "today_news_s": 1, "sum_get_total_tweet": [1, 16], "time": [1, 4, 6, 13], "rang": 1, "tweet_count": 1, "tweets_sent": 1, "today_tweet": 1, "today_tweet_s": 1, "create_invalid": [1, 16], "invalid": 1, "aw": [1, 6, 13], "cloudfront": 1, "myconvert": [1, 16], "o": 1, "custom": 1, "encod": [1, 4], "function": [1, 2, 4, 6, 8, 13], "convert": [1, 4, 8, 12], "represent": 1, "sting": 1, "currenti": [1, 9], "lambd_func": [1, 16], "x": [1, 8, 11], "lambda": 1, "input": [1, 2, 12], "ani": [1, 13], "rds_con": [1, 16], "establish": [1, 6], "connect": [1, 2, 4, 6], "rd": [1, 6], "databas": [1, 2, 4, 6, 8], "cursor": 1, "mysql": [1, 6], "connector": 1, "mysqlcursor": 1, "execut": [1, 4, 13], "sql": 1, "queri": [1, 4, 6, 13], "thi": [2, 4, 6, 13], "code": [2, 6, 13], "perform": [2, 6], "task": [2, 13], "extract": [2, 4, 13], "us": [2, 4, 6, 8, 12, 13], "target": 2, "onli": [2, 4, 13], "relev": [2, 13], "line": [2, 4], "where": [2, 4, 8], "i": [2, 4, 6, 8, 12, 13], "mention": 2, "along": [2, 4, 13], "corefer": 2, "relat": 2, "entiti": 2, "org": 2, "detect": 2, "classifi": [2, 4, 8, 12], "them": [2, 13], "createdbi": [2, 4, 13], "shreya": 2, "r": 2, "chim": 2, "schim": 2, "alagoanalyt": 2, "com": [2, 4, 13], "kalash": 2, "gandhi": 2, "kgandhi": 2, "algoanalyt": [2, 4, 13], "nishant": 2, "tiwari": 2, "ntiwari": 2, "shubham": 2, "jagtap": 2, "sjagtap": 2, "anoushka": 2, "rao": 2, "arao": 2, "lastupdatedd": [2, 4, 6, 13], "25th": 2, "juli": [2, 4, 6, 13], "2023": [2, 4, 6, 13], "changesmadeincod": [2, 4, 6, 13], "ad": [2, 6, 13], "docstr": [2, 4, 6, 13], "analyze_senti": [2, 16], "prosusai": 2, "finbert": 2, "token": [2, 8, 13], "pretrain": 2, "model": [2, 8, 11, 12, 16], "The": [2, 4, 6, 13], "take": 2, "text": [2, 4, 11, 13], "first": [2, 4, 12, 13], "appli": 2, "calcul": [2, 8, 12], "output": [2, 4, 6, 8, 12], "we": 2, "softmax": 2, "numpi": 2, "arrai": [2, 8, 12], "pt_predict": 2, "document": [2, 4], "analyz": 2, "ndarrai": 2, "clean_text_new": [2, 16], "modifi": 2, "compute_summari": [2, 16], "comput": [2, 8], "pre": [2, 4], "train": [2, 8, 12], "summar": 2, "compute_summary_upd": [2, 16], "t5": 2, "event_classif": [2, 16], "sentenc": [2, 13], "top_2_ev": 2, "top": 2, "2": [2, 8, 12], "all_ev": 2, "extract_org_frequ": [2, 16], "organ": 2, "exampl": [2, 4, 6], "technologi": 2, "googl": [2, 13], "appl": 2, "microsoft": 2, "result": [2, 4, 8, 12, 13], "print": 2, "1": [2, 6, 8, 12], "extract_s": [2, 16], "company_nam": 2, "address": 2, "coreferenc": 2, "lowercas": [2, 11], "import": 2, "async": [2, 13], "fetch_config_data": [2, 16], "configur": 2, "item": [2, 4, 13], "fetch_data_from_t": [2, 16], "filter_attr": 2, "filter": [2, 13], "attribut": [2, 13], "find_sent_with_compani": [2, 16], "keyword": [2, 8, 13], "get_connect": [2, 6, 7, 8, 16], "resourc": [2, 4, 8, 13], "get_news_label": [2, 16], "class": [2, 8], "get_sentiment_class": [2, 16], "neg": [2, 8], "po": [2, 8], "neut": 2, "determin": 2, "posit": [2, 8], "neutral": [2, 8], "get_sentiment_modifi": [2, 16], "doe": [2, 4, 13], "ner": 2, "ar": [2, 4, 6, 13], "focus": 2, "same": 2, "belong": 2, "ha": [2, 6, 13], "been": 2, "pass": [2, 6, 13], "tsa_keyword": 2, "get_ticker_names_and_id": [2, 7, 8, 11, 16], "If": [2, 4], "scan": 2, "load_pickle_fil": [2, 16], "filepath": 2, "perform_enrich": [2, 16], "enrich": 2, "tsa": 2, "process": [2, 4, 8, 12], "sentiment_analysi": [2, 11, 16], "ner_org_freq": 2, "stem": [2, 16], "update_t": [2, 16], "record_id": 2, "record_month": 2, "news_class": 2, "top_ev": 2, "record": 2, "upload_data": [2, 16], "enriched_data": 2, "upload": 2, "specif": [2, 6, 13], "type": [2, 4, 8], "e": [2, 4, 12], "g": 2, "associ": 2, "7th": 2, "test": [4, 12, 16], "test_api": [4, 16], "test_health_check": [4, 5], "test_question_answer_pipelin": [4, 5], "test_semantic_search_news_respons": [4, 5], "test_semantic_search_pipelin": [4, 5], "test_semantic_search_tweets_respons": [4, 5], "test_model": [4, 16], "test_load_read": [4, 5], "test_retriev": [4, 5], "test_util": [4, 16], "test_convert_datetime_to_d": [4, 5], "test_outside_threshold_with_invalid_d": [4, 5], "test_outside_threshold_with_valid_d": [4, 5], "test_wrong_typ": [4, 5], "requir": [4, 6, 13], "run": [4, 13], "semant": 4, "search": [4, 13, 15], "meant": 4, "one": [4, 6, 13], "around": 4, "when": [4, 13], "fresh": 4, "case": 4, "some": 4, "mistak": 4, "previou": 4, "lost": 4, "so": 4, "program": 4, "must": 4, "independ": 4, "assum": 4, "environ": 4, "variabl": [4, 8, 12], "alreadi": 4, "up": 4, "document_store_dir": 4, "directori": 4, "store": [4, 6, 13], "retriever_dir": 4, "mapping_dir": 4, "option": 4, "model_dir": 4, "transform": 4, "farhan": 4, "fahmad": 4, "05th": [4, 13], "add": [4, 13], "create_resourc": [4, 16], "It": [4, 13], "onc": 4, "python": 4, "py": 4, "from_dat": 4, "2021": 4, "01": 4, "to_dat": 4, "31": 4, "assign_unique_id": [4, 16], "item_list": 4, "assign": [4, 8, 13], "uuid": 4, "after": 4, "remov": [4, 11], "duplic": 4, "either": 4, "fetch_data": [4, 16], "between": 4, "sent": 4, "command": 4, "argument": 4, "news_tabl": [4, 13], "tweets_tabl": [4, 13], "row": [4, 8], "entri": [4, 13], "remove_dupl": [4, 16], "compar": 4, "exist": 4, "left": 4, "present": [4, 6, 8, 13], "save_items_to_text_fil": [4, 16], "save": [4, 8], "news_dir": 4, "tweets_dir": 4, "depend": 4, "load": 4, "passag": 4, "query_encoder_dir": 4, "passage_encoder_dir": 4, "respect": [4, 8], "faiss": 4, "pipelin": 4, "document_search": 4, "densepassageretriev": 4, "farmread": 4, "processor": 4, "pre_processor": 4, "spaci": 4, "load_document_search_pipelin": [4, 16], "documentsearchpipelin": 4, "documentstor": 4, "construct": 4, "haystack": 4, "can": 4, "load_document_stor": [4, 16], "convent": 4, "f": 4, "_faiss_index": 4, "faissdocumentstor": 4, "load_preprocessor": [4, 16], "preprocessor": 4, "load_query_classifi": [4, 16], "question": [4, 11], "v": 4, "statement": [4, 13], "transformersqueryclassifi": 4, "classif": 4, "load_read": [4, 16], "answer": [4, 11], "load_retriev": [4, 16], "document_stor": 4, "dpr": 4, "query_embedding_model": 4, "soheeyang": 4, "rdr": 4, "question_encod": 4, "singl": 4, "nq": 4, "passage_embedding_model": 4, "ctx_encod": 4, "correspond": 4, "older": 4, "than": [4, 13], "threshold": 4, "usag": 4, "07": 4, "05": 4, "note": 4, "embed": 4, "project": 4, "check_typ": [4, 16], "rais": 4, "error": 4, "valueerror": 4, "convert_datetime_to_d": [4, 16], "datetime_str": 4, "iso": 4, "get_documentids_from_uuid": [4, 16], "uuid_list": 4, "get_documents_from_document_id": [4, 16], "document_ids_list": 4, "news_id": [4, 13], "tweets_id": 4, "form": [4, 8], "document_entri": 4, "get_documents_from_filenam": [4, 16], "front": 4, "helper": [4, 16], "containerproxi": 4, "cosmo": 4, "get_dynamodb_connect": [4, 16], "serviceresourc": 4, "get_dynamodb_t": [4, 16], "ddb_connect": 4, "get_todai": [4, 16], "months_between": [4, 16], "start_dat": 4, "end_dat": 4, "two": 4, "instanc": 4, "1st": 4, "everi": [4, 13], "inclus": 4, "befor": [4, 13], "yield": 4, "outside_threshold": [4, 16], "item_d": 4, "threshold_d": 4, "whether": 4, "bool": [4, 13], "true": [4, 6, 13], "process_predict": [4, 16], "pred": 4, "documentsearch": 4, "3": [4, 12], "thing": 4, "search_result": 4, "just": 4, "entir": 4, "metadata": 4, "info": 4, "process_qna_predict": [4, 16], "news_pr": 4, "news_search_result": 4, "reader": 4, "directli": 4, "simpl": 4, "detail": 4, "raw": 4, "qna": 4, "transform_to_ui_format": [4, 16], "ui": 4, "replac": 4, "html": 4, "show": 4, "consist": [4, 8, 12], "download": 6, "yfinanc": 6, "OR": 6, "rapidapi": 6, "06th": 6, "crawl_stock": [6, 16], "list_ticker_id": 6, "main": [6, 16], "crawl": [6, 13], "librari": [6, 13], "column": [6, 8], "interv": 6, "hour": 6, "last": [6, 8], "locat": 6, "insid": 6, "method": [6, 8, 12], "No": 6, "host": [6, 8], "user": [6, 8, 13], "password": 6, "buffer": 6, "enabl": 6, "oper": 6, "api": [6, 13], "call": 6, "get_secret_value_respons": 6, "submodul": [7, 16], "stock_prediction_1": [7, 16], "binary_classifi": [7, 8], "build_featur": [7, 8], "build_function_sector": [7, 8], "build_model": [7, 8, 12, 16], "build_returns_and_output": [7, 8], "build_sentiment_mapping_csv": [7, 8], "calculate_senti": [7, 8, 9, 16], "calculate_total_new": [7, 8], "compute_accuracy_scor": [7, 8], "compute_auc": [7, 8], "compute_f1": [7, 8], "generate_x": [7, 8], "generate_x_w": [7, 8], "get_classifi": [7, 8], "get_cross_valid": [7, 8], "get_new": [7, 8], "map_senti": [7, 8], "process_output": [7, 8], "save_model_to_db": [7, 8], "write_data_to_rd": [7, 8], "stock_prediction_2": [7, 16], "compute_ind": [7, 8], "compute_output": [7, 8, 12, 16], "display_training_result": [7, 8], "generate_featur": [7, 8], "main_funct": [7, 8], "train_model": [7, 8, 12, 16], "binari": 8, "size_of_x": 8, "featur": [8, 12], "vector": 8, "t": 8, "datafram": [8, 12], "numer": [8, 12], "size": 8, "6": [8, 12], "without": 8, "4": [8, 12], "stock_pric": 8, "stock_live_pric": 8, "stock_map": 8, "stock_new": 8, "models_col": 8, "number_of_days_for_model_train": 8, "s3_bucket_object_nam": 8, "live": 8, "input_sentiment_csv": 8, "path": 8, "csv": 8, "stock_news_col": 8, "past_prediction_df": 8, "fold": 8, "5": [8, 12], "build": [8, 12], "valid": 8, "kfold": 8, "clf": [8, 12], "randomforestclassifi": 8, "db_resourc": 8, "IT": 8, "bank": [8, 13], "formula": 8, "news_typ": 8, "ticker_map": 8, "differ": [8, 12], "y": 8, "accuraci": 8, "actual": [8, 12], "accuracy_scor": 8, "auc": 8, "auc_scor": 8, "f1": 8, "f1_score": 8, "agg_index": 8, "stock_senti": 8, "agg_senti": 8, "sector_return": 8, "sector_sentiment_scor": 8, "sector_volum": 8, "randomforest": [8, 12], "port": 8, "desir": 8, "ticker_list": 8, "algoddb": 8, "config": [8, 13], "configt": 8, "rise": 8, "drop": 8, "object_nam": 8, "y_pred": 8, "auc_score_neg": 8, "auc_score_neutr": 8, "auc_score_po": 8, "indic": 8, "df": [8, 11, 12], "displai": 8, "window_s": [8, 12], "20": 8, "window": [8, 12], "integ": [8, 12], "length": [8, 12], "read_result_data": [9, 16], "optimal_model": [11, 16], "num_keyword": 11, "ideal_topic_num": 11, "tokenized_review": 11, "topic_modeling_neg": [11, 16], "topic_modeling_posit": [11, 16], "word_cloud_freq": [11, 16], "build_datafram": [11, 16], "clean_text": [11, 16], "format_topics_sent": [11, 16], "corpu": 11, "compound_scor": 11, "get_result": [11, 16], "input_csv_qa": 11, "lemmat": [11, 16], "allowed_postag": 11, "noun": 11, "adj": 11, "remove_stopword": [11, 16], "topic_modeling_new": [11, 16], "topic_modeling_tweet": [11, 16], "clean_text_modifi": [11, 16], "make": [11, 12], "squar": 11, "bracket": 11, "link": [11, 13], "punctuat": 11, "date_tim": 11, "text_preprocessing_fn": [11, 16], "clean": [11, 13], "pars": 11, "randomforestregressor": 12, "no_of_dai": 12, "append": 12, "compute_trend_vari": [12, 16], "trend": 12, "10": 12, "price": 12, "iter": 12, "over": 12, "k": 12, "nan": 12, "temporari": 12, "td": 12, "10th": 12, "avoid": 12, "undefin": 12, "t10": 12, "sum": 12, "absolut": 12, "consecut": 12, "past": 12, "divid": 12, "ith": 12, "th": 12, "final": 12, "araai": 12, "get_regressor": [12, 16], "regressor": 12, "60": 12, "migrat": [13, 16], "s3_to_dynamo": [13, 16], "point": 13, "applic": 13, "respons": 13, "ingest": 13, "mansi": 13, "maurya": 13, "mmaurya": 13, "07th": 13, "find_url": [13, 16], "find": 13, "url": 13, "busi": 13, "standard": 13, "unnecessari": 13, "while": 13, "scrape": 13, "pygooglenew": 13, "In": 13, "basic": 13, "preprocess": 13, "also": 13, "done": 13, "languag": 13, "defin": 13, "condit": 13, "add_news_articl": [13, 16], "ticker_symbol": 13, "long_descript": 13, "certain": 13, "like": 13, "basi": 13, "those": 13, "uniqu": 13, "need": 13, "presenc": 13, "insert": 13, "lastupd": 13, "04th": 13, "keyword_pass": 13, "elif": 13, "block": 13, "itc": 13, "ltd": 13, "state": 13, "india": 13, "mahindra": 13, "limit": 13, "crawl_news_by_keyword": [13, 16], "ticker_news_keyword": 13, "longdesc_keyword": 13, "text_search": 13, "durat": 13, "want": 13, "decid": 13, "titl": 13, "article_text": 13, "equal": 13, "beautifulsoup": 13, "request": 13, "get_cont": [13, 16], "newspaper3k": 13, "news_lang_check": [13, 16], "descript": 13, "english": 13, "els": 13, "fals": 13, "june": 13, "news_longdesc_check": [13, 16], "key_word": 13, "snscrape": 13, "minimum": 13, "do": 13, "irrelav": 13, "contains_irrelavant_word": [13, 16], "tweet_text": 13, "blacklist": 13, "exclusion_tweet_str": 13, "otherwis": 13, "contains_minimum_token": [13, 16], "tweet_full_text": 13, "min_num_token": 13, "min_num_char": 13, "should": 13, "charact": 13, "crawl_tweets_by_keyword": [13, 16], "temp_tweets_t": 13, "ticker_tweet_keyword": 13, "ticker_tweet_exclus": 13, "tweet_followerscount": 13, "tweet_minimum_token": 13, "tweet_minimum_char": 13, "sncscrape": 13, "exclus": 13, "editor": 13, "greater": 13, "filter_tweet": [13, 16], "least": 13, "bigram": 13, "phrase": 13, "relevant_word": 13, "filter_out_word": 13, "update_tweet_t": [13, 16], "datetime_now": 13, "upsert": 13, "sntwitter": 13, "twittersearchscrap": 13, "fabric_backend_aw": 15, "docker_correl": [15, 16], "packag": [15, 16], "docker_debrief": [15, 16], "docker_enrich": [15, 16], "docker_microservic": [15, 16], "docker_search": [15, 16], "docker_stock_ingest": [15, 16], "docker_stock_predict": [15, 16], "docker_todays_senti": [15, 16], "docker_top": [15, 16], "docker_topics_earning_call_transcript": [15, 16], "docker_trend_predict": [15, 16], "docker_tweet": [15, 16], "modul": [15, 16], "page": 15, "generate_result": 16, "news_extraction_dynamodb": 16, "content": 16, "access_fil": 16, "create_json": 16, "get_dynamodb_data": 16, "rds_db": 16, "main_v5": 16, "new_main_v4": 16, "subpackag": 16, "app": 16, "create_model": 16, "fetch_from_db": 16, "remove_older_doc": 16, "update_embed": 16, "util": 16, "stock_ingest": 16, "todays_senti": 16, "main_top": 16, "earning_call_main": 16, "trend_predict": 16, "news_ingestion_aw": 16, "tweets_ingestion_aw": 16}, "objects": {"": [[0, 0, 0, "-", "docker_correlation"], [1, 0, 0, "-", "docker_debrief"], [2, 0, 0, "-", "docker_enrichment"], [3, 0, 0, "-", "docker_microservices"], [4, 0, 0, "-", "docker_search"], [6, 0, 0, "-", "docker_stock_ingestion"], [7, 0, 0, "-", "docker_stock_prediction"], [9, 0, 0, "-", "docker_todays_sentiment"], [10, 0, 0, "-", "docker_topics"], [11, 0, 0, "-", "docker_topics_earning_call_transcripts"], [12, 0, 0, "-", "docker_trend_prediction"], [13, 0, 0, "-", "docker_tweets"]], "docker_correlation": [[0, 0, 0, "-", "generate_results"], [0, 0, 0, "-", "main"], [0, 0, 0, "-", "news_extraction_dynamodb"]], "docker_correlation.generate_results": [[0, 1, 1, "", "new_results"]], "docker_correlation.main": [[0, 1, 1, "", "config_table"], [0, 1, 1, "", "extract_new_data"], [0, 1, 1, "", "initialize_table"], [0, 1, 1, "", "write_json_file"]], "docker_correlation.news_extraction_dynamodb": [[0, 1, 1, "", "read_news_data1"]], "docker_debrief": [[1, 0, 0, "-", "access_file"], [1, 0, 0, "-", "create_json"], [1, 0, 0, "-", "get_dynamodb_data"], [1, 0, 0, "-", "helper"], [1, 0, 0, "-", "main"], [1, 0, 0, "-", "rds_db"]], "docker_debrief.access_file": [[1, 1, 1, "", "a_intro"], [1, 1, 1, "", "get_secret"]], "docker_debrief.create_json": [[1, 1, 1, "", "create_company_docs"], [1, 1, 1, "", "create_header"], [1, 1, 1, "", "create_news"], [1, 1, 1, "", "create_overview"], [1, 1, 1, "", "create_technical_analysis"], [1, 1, 1, "", "create_tweets"], [1, 1, 1, "", "dict_None_output"], [1, 1, 1, "", "dict_output"], [1, 1, 1, "", "fetch_data_summary"], [1, 1, 1, "", "fetch_debrief_data"], [1, 1, 1, "", "read_data_from_s3"], [1, 1, 1, "", "updated_dict"], [1, 1, 1, "", "working_check"]], "docker_debrief.get_dynamodb_data": [[1, 1, 1, "", "create_default"], [1, 1, 1, "", "read_data_dynamodb"], [1, 1, 1, "", "read_news_data"], [1, 1, 1, "", "read_tweets_data"], [1, 1, 1, "", "sum_get_total_news"], [1, 1, 1, "", "sum_get_total_tweets"]], "docker_debrief.helper": [[1, 1, 1, "", "create_invalidation"], [1, 1, 1, "", "myconverter"], [1, 1, 1, "", "write_json_file"]], "docker_debrief.main": [[1, 1, 1, "", "lambd_func"]], "docker_debrief.rds_db": [[1, 1, 1, "", "rds_con"]], "docker_enrichment": [[2, 0, 0, "-", "main_v5"], [2, 0, 0, "-", "new_main_v4"]], "docker_enrichment.main_v5": [[2, 1, 1, "", "a_intro"], [2, 1, 1, "", "analyze_sentiment"], [2, 1, 1, "", "clean_text_new"], [2, 1, 1, "", "compute_summary"], [2, 1, 1, "", "compute_summary_updated"], [2, 1, 1, "", "event_classification"], [2, 1, 1, "", "extract_org_frequency"], [2, 1, 1, "", "extract_sents"], [2, 1, 1, "", "fetch_config_data"], [2, 1, 1, "", "fetch_data_from_table"], [2, 1, 1, "", "find_sent_with_company"], [2, 1, 1, "", "get_connection"], [2, 1, 1, "", "get_news_labels"], [2, 1, 1, "", "get_sentiment_class"], [2, 1, 1, "", "get_sentiment_modified"], [2, 1, 1, "", "get_ticker_names_and_id"], [2, 1, 1, "", "load_pickle_file"], [2, 1, 1, "", "perform_enrichment"], [2, 1, 1, "", "stemming"], [2, 1, 1, "", "update_table"], [2, 1, 1, "", "upload_data"]], "docker_enrichment.new_main_v4": [[2, 1, 1, "", "a_intro"], [2, 1, 1, "", "analyze_sentiment"], [2, 1, 1, "", "compute_summary"], [2, 1, 1, "", "compute_summary_updated"], [2, 1, 1, "", "event_classification"], [2, 1, 1, "", "extract_org_frequency"], [2, 1, 1, "", "extract_sents"], [2, 1, 1, "", "fetch_config_data"], [2, 1, 1, "", "fetch_data_from_table"], [2, 1, 1, "", "find_sent_with_company"], [2, 1, 1, "", "get_connection"], [2, 1, 1, "", "get_sentiment_class"], [2, 1, 1, "", "get_sentiment_modified"], [2, 1, 1, "", "get_ticker_names_and_id"], [2, 1, 1, "", "perform_enrichment"], [2, 1, 1, "", "update_table"], [2, 1, 1, "", "upload_data"]], "docker_search": [[4, 0, 0, "-", "create_models"], [4, 0, 0, "-", "fetch_from_DB"], [4, 0, 0, "-", "models"], [4, 0, 0, "-", "remove_older_docs"], [5, 0, 0, "-", "tests"], [4, 0, 0, "-", "update_embeddings"], [4, 0, 0, "-", "utils"]], "docker_search.create_models": [[4, 1, 1, "", "a_intro"], [4, 1, 1, "", "create_resources"]], "docker_search.fetch_from_DB": [[4, 1, 1, "", "a_intro"], [4, 1, 1, "", "assign_unique_ids"], [4, 1, 1, "", "fetch_data"], [4, 1, 1, "", "remove_duplicates"], [4, 1, 1, "", "save_items_to_text_files"]], "docker_search.models": [[4, 1, 1, "", "a_intro"], [4, 1, 1, "", "load_document_search_pipeline"], [4, 1, 1, "", "load_document_store"], [4, 1, 1, "", "load_preprocessor"], [4, 1, 1, "", "load_query_classifier"], [4, 1, 1, "", "load_reader"], [4, 1, 1, "", "load_retriever"]], "docker_search.remove_older_docs": [[4, 1, 1, "", "a_intro"], [4, 1, 1, "", "remove_older_docs"]], "docker_search.tests": [[5, 0, 0, "-", "test_api"], [5, 0, 0, "-", "test_models"], [5, 0, 0, "-", "test_utils"]], "docker_search.tests.test_api": [[5, 1, 1, "", "test_health_check"], [5, 1, 1, "", "test_question_answer_pipeline"], [5, 1, 1, "", "test_semantic_search_news_response"], [5, 1, 1, "", "test_semantic_search_pipeline"], [5, 1, 1, "", "test_semantic_search_tweets_response"]], "docker_search.tests.test_models": [[5, 1, 1, "", "test_load_reader"], [5, 1, 1, "", "test_retriever"]], "docker_search.tests.test_utils": [[5, 1, 1, "", "test_convert_datetime_to_date"], [5, 1, 1, "", "test_outside_threshold_with_invalid_date"], [5, 1, 1, "", "test_outside_threshold_with_valid_date"], [5, 1, 1, "", "test_wrong_type"]], "docker_search.update_embeddings": [[4, 1, 1, "", "a_intro"], [4, 1, 1, "", "update_embeddings"]], "docker_search.utils": [[4, 1, 1, "", "a_intro"], [4, 1, 1, "", "check_type"], [4, 1, 1, "", "convert_datetime_to_date"], [4, 1, 1, "", "get_documentids_from_uuid"], [4, 1, 1, "", "get_documents_from_document_ids"], [4, 1, 1, "", "get_documents_from_filenames"], [4, 1, 1, "", "get_dynamodb_connection"], [4, 1, 1, "", "get_dynamodb_table"], [4, 1, 1, "", "get_today"], [4, 1, 1, "", "months_between"], [4, 1, 1, "", "outside_threshold"], [4, 1, 1, "", "process_prediction"], [4, 1, 1, "", "process_qna_prediction"], [4, 1, 1, "", "transform_to_ui_format"]], "docker_stock_ingestion": [[6, 0, 0, "-", "stock_ingestion"]], "docker_stock_ingestion.stock_ingestion": [[6, 1, 1, "", "a_intro"], [6, 1, 1, "", "crawl_stock"], [6, 1, 1, "", "get_connection"], [6, 1, 1, "", "get_secret"]], "docker_stock_prediction": [[8, 0, 0, "-", "docker_stock_prediction"]], "docker_stock_prediction.docker_stock_prediction": [[8, 0, 0, "-", "stock_prediction_1"], [8, 0, 0, "-", "stock_prediction_2"]], "docker_stock_prediction.docker_stock_prediction.stock_prediction_1": [[8, 1, 1, "", "binary_classify"], [8, 1, 1, "", "build_feature"], [8, 1, 1, "", "build_function_sector"], [8, 1, 1, "", "build_model"], [8, 1, 1, "", "build_returns_and_output"], [8, 1, 1, "", "build_sentiment_mapping_csv"], [8, 1, 1, "", "calculate_sentiment"], [8, 1, 1, "", "calculate_total_news"], [8, 1, 1, "", "compute_accuracy_score"], [8, 1, 1, "", "compute_auc"], [8, 1, 1, "", "compute_f1"], [8, 1, 1, "", "generate_x"], [8, 1, 1, "", "generate_x_ws"], [8, 1, 1, "", "get_classifier"], [8, 1, 1, "", "get_connection"], [8, 1, 1, "", "get_cross_validator"], [8, 1, 1, "", "get_news"], [8, 1, 1, "", "get_secret"], [8, 1, 1, "", "get_ticker_names_and_id"], [8, 1, 1, "", "map_sentiment"], [8, 1, 1, "", "process_output"], [8, 1, 1, "", "save_model_to_db"], [8, 1, 1, "", "write_data_to_RDS"]], "docker_stock_prediction.docker_stock_prediction.stock_prediction_2": [[8, 1, 1, "", "build_model"], [8, 1, 1, "", "compute_accuracy_score"], [8, 1, 1, "", "compute_auc"], [8, 1, 1, "", "compute_f1"], [8, 1, 1, "", "compute_indicators"], [8, 1, 1, "", "compute_output"], [8, 1, 1, "", "display_training_results"], [8, 1, 1, "", "generate_feature"], [8, 1, 1, "", "get_classifier"], [8, 1, 1, "", "get_connection"], [8, 1, 1, "", "get_secret"], [8, 1, 1, "", "get_ticker_names_and_id"], [8, 1, 1, "", "main_function"], [8, 1, 1, "", "process_output"], [8, 1, 1, "", "train_model"], [8, 1, 1, "", "write_data_to_RDS"]], "docker_todays_sentiment": [[9, 0, 0, "-", "main"], [9, 0, 0, "-", "todays_sentiment"]], "docker_todays_sentiment.main": [[9, 1, 1, "", "config_table"], [9, 1, 1, "", "extract_new_data"], [9, 1, 1, "", "initialize_table"], [9, 1, 1, "", "read_result_data"], [9, 1, 1, "", "write_json_file"]], "docker_todays_sentiment.todays_sentiment": [[9, 1, 1, "", "calculate_sentiment"]], "docker_topics_earning_call_transcripts": [[11, 0, 0, "-", "earning_call_main"], [11, 0, 0, "-", "main"]], "docker_topics_earning_call_transcripts.earning_call_main": [[11, 1, 1, "", "Optimal_Model"], [11, 1, 1, "", "Sentiment_Analysis"], [11, 1, 1, "", "Topic_Modeling_Negative"], [11, 1, 1, "", "Topic_Modeling_Positive"], [11, 1, 1, "", "Word_Cloud_Freq"], [11, 1, 1, "", "build_dataframe"], [11, 1, 1, "", "clean_text"], [11, 1, 1, "", "format_topics_sentences"], [11, 1, 1, "", "get_result"], [11, 1, 1, "", "lemmatization"], [11, 1, 1, "", "remove_stopwords"], [11, 1, 1, "", "sentiment"]], "docker_topics_earning_call_transcripts.main": [[11, 1, 1, "", "Optimal_Model"], [11, 1, 1, "", "Topic_Modeling_News"], [11, 1, 1, "", "Topic_Modeling_Tweets"], [11, 1, 1, "", "Word_Cloud_Freq"], [11, 1, 1, "", "clean_text_modified"], [11, 1, 1, "", "format_topics_sentences"], [11, 1, 1, "", "get_ticker_names_and_id"], [11, 1, 1, "", "read_news_data"], [11, 1, 1, "", "read_tweets_data"], [11, 1, 1, "", "text_preprocessing_fn"]], "docker_trend_prediction": [[12, 0, 0, "-", "Trend_prediction"]], "docker_trend_prediction.Trend_prediction": [[12, 1, 1, "", "build_model"], [12, 1, 1, "", "compute_output"], [12, 1, 1, "", "compute_trend_variable"], [12, 1, 1, "", "get_regressor"], [12, 1, 1, "", "train_model"]], "docker_tweets": [[13, 0, 0, "-", "main"], [13, 0, 0, "-", "news_ingestion_aws"], [13, 0, 0, "-", "tweets_ingestion_aws"]], "docker_tweets.main": [[13, 1, 1, "", "a_intro"]], "docker_tweets.news_ingestion_aws": [[13, 1, 1, "", "Find_url"], [13, 1, 1, "", "a_intro"], [13, 1, 1, "", "add_news_article"], [13, 1, 1, "", "crawl_news_by_keyword"], [13, 1, 1, "", "get_content"], [13, 1, 1, "", "news_lang_check"], [13, 1, 1, "", "news_longDesc_check"]], "docker_tweets.tweets_ingestion_aws": [[13, 1, 1, "", "a_intro"], [13, 1, 1, "", "contains_irrelavant_words"], [13, 1, 1, "", "contains_minimum_tokens"], [13, 1, 1, "", "crawl_tweets_by_keyword"], [13, 1, 1, "", "filter_tweet"], [13, 1, 1, "", "update_tweet_table"]]}, "objtypes": {"0": "py:module", "1": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"]}, "titleterms": {"docker_correl": 0, "packag": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "submodul": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14], "generate_result": 0, "modul": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "main": [0, 1, 3, 9, 11, 13], "news_extraction_dynamodb": 0, "content": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "docker_debrief": 1, "access_fil": 1, "create_json": 1, "get_dynamodb_data": 1, "helper": 1, "rds_db": 1, "docker_enrich": 2, "main_v5": 2, "new_main_v4": 2, "docker_microservic": 3, "docker_search": [4, 5], "subpackag": [4, 7, 13], "app": 4, "create_model": 4, "fetch_from_db": 4, "model": 4, "remove_older_doc": 4, "update_embed": 4, "util": 4, "test": 5, "test_api": 5, "test_model": 5, "test_util": 5, "docker_stock_ingest": 6, "stock_ingest": 6, "paramet": [6, 8, 12], "docker_stock_predict": [7, 8], "stock_prediction_1": 8, "return": [8, 12], "stock_prediction_2": 8, "docker_todays_senti": 9, "todays_senti": 9, "docker_top": 10, "main_top": 10, "docker_topics_earning_call_transcript": 11, "earning_call_main": 11, "docker_trend_predict": 12, "trend_predict": 12, "step": 12, "docker_tweet": [13, 14], "news_ingestion_aw": 13, "tweets_ingestion_aw": 13, "new": 14, "tweet": 14, "migrat": 14, "s3_to_dynamo": 14, "welcom": 15, "algofabr": 15, "backend": 15, "": 15, "document": 15, "indic": 15, "tabl": 15, "fabric_backend_aw": 16}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"docker_correlation package": [[0, "docker-correlation-package"]], "Submodules": [[0, "submodules"], [1, "submodules"], [2, "submodules"], [3, "submodules"], [4, "submodules"], [5, "submodules"], [6, "submodules"], [8, "submodules"], [9, "submodules"], [10, "submodules"], [11, "submodules"], [12, "submodules"], [13, "submodules"], [14, "submodules"]], "docker_correlation.generate_results module": [[0, "module-docker_correlation.generate_results"]], "docker_correlation.main module": [[0, "module-docker_correlation.main"]], "docker_correlation.news_extraction_dynamodb module": [[0, "module-docker_correlation.news_extraction_dynamodb"]], "Module contents": [[0, "module-docker_correlation"], [1, "module-docker_debrief"], [2, "module-docker_enrichment"], [3, "module-docker_microservices"], [4, "module-docker_search"], [5, "module-docker_search.tests"], [6, "module-docker_stock_ingestion"], [7, "module-docker_stock_prediction"], [8, "module-docker_stock_prediction.docker_stock_prediction"], [9, "module-docker_todays_sentiment"], [10, "module-docker_topics"], [11, "module-docker_topics_earning_call_transcripts"], [12, "module-docker_trend_prediction"], [13, "module-docker_tweets"], [14, "module-contents"]], "docker_debrief package": [[1, "docker-debrief-package"]], "docker_debrief.access_file module": [[1, "module-docker_debrief.access_file"]], "docker_debrief.create_json module": [[1, "module-docker_debrief.create_json"]], "docker_debrief.get_dynamodb_data module": [[1, "module-docker_debrief.get_dynamodb_data"]], "docker_debrief.helper module": [[1, "module-docker_debrief.helper"]], "docker_debrief.main module": [[1, "module-docker_debrief.main"]], "docker_debrief.rds_db module": [[1, "module-docker_debrief.rds_db"]], "docker_enrichment package": [[2, "docker-enrichment-package"]], "docker_enrichment.main_v5 module": [[2, "module-docker_enrichment.main_v5"]], "docker_enrichment.new_main_v4 module": [[2, "module-docker_enrichment.new_main_v4"]], "docker_microservices package": [[3, "docker-microservices-package"]], "docker_microservices.main module": [[3, "docker-microservices-main-module"]], "docker_search package": [[4, "docker-search-package"]], "Subpackages": [[4, "subpackages"], [7, "subpackages"], [13, "subpackages"]], "docker_search.app module": [[4, "docker-search-app-module"]], "docker_search.create_models module": [[4, "module-docker_search.create_models"]], "docker_search.fetch_from_DB module": [[4, "module-docker_search.fetch_from_DB"]], "docker_search.models module": [[4, "module-docker_search.models"]], "docker_search.remove_older_docs module": [[4, "module-docker_search.remove_older_docs"]], "docker_search.update_embeddings module": [[4, "module-docker_search.update_embeddings"]], "docker_search.utils module": [[4, "module-docker_search.utils"]], "docker_search.tests package": [[5, "docker-search-tests-package"]], "docker_search.tests.test_api module": [[5, "module-docker_search.tests.test_api"]], "docker_search.tests.test_models module": [[5, "module-docker_search.tests.test_models"]], "docker_search.tests.test_utils module": [[5, "module-docker_search.tests.test_utils"]], "docker_stock_ingestion package": [[6, "docker-stock-ingestion-package"]], "docker_stock_ingestion.stock_ingestion module": [[6, "module-docker_stock_ingestion.stock_ingestion"]], "Parameters": [[6, "parameters"], [8, "parameters"], [8, "id1"], [8, "id2"], [8, "id4"], [8, "id6"], [8, "id7"], [8, "id8"], [8, "id10"], [8, "id12"], [8, "id14"], [8, "id16"], [8, "id18"], [8, "id20"], [8, "id23"], [8, "id29"], [8, "id30"], [8, "id32"], [8, "id33"], [8, "id35"], [8, "id37"], [8, "id39"], [8, "id41"], [8, "id43"], [8, "id45"], [8, "id46"], [8, "id51"], [8, "id53"], [12, "parameters"], [12, "id1"], [12, "id3"], [12, "id7"]], "docker_stock_prediction package": [[7, "docker-stock-prediction-package"]], "docker_stock_prediction.docker_stock_prediction package": [[8, "docker-stock-prediction-docker-stock-prediction-package"]], "docker_stock_prediction.docker_stock_prediction.stock_prediction_1 module": [[8, "module-docker_stock_prediction.docker_stock_prediction.stock_prediction_1"]], "Returns": [[8, "returns"], [8, "id3"], [8, "id5"], [8, "id9"], [8, "id11"], [8, "id13"], [8, "id15"], [8, "id17"], [8, "id19"], [8, "id21"], [8, "id22"], [8, "id24"], [8, "id31"], [8, "id34"], [8, "id36"], [8, "id38"], [8, "id40"], [8, "id42"], [8, "id44"], [8, "id47"], [8, "id48"], [8, "id52"], [8, "id54"], [12, "returns"], [12, "id2"], [12, "id4"], [12, "id6"], [12, "id8"]], "Parameters:": [[8, "id25"], [8, "id27"], [8, "id49"]], "Returns:": [[8, "id26"], [8, "id28"], [8, "id50"]], "docker_stock_prediction.docker_stock_prediction.stock_prediction_2 module": [[8, "module-docker_stock_prediction.docker_stock_prediction.stock_prediction_2"]], "docker_todays_sentiment package": [[9, "docker-todays-sentiment-package"]], "docker_todays_sentiment.main module": [[9, "module-docker_todays_sentiment.main"]], "docker_todays_sentiment.todays_sentiment module": [[9, "module-docker_todays_sentiment.todays_sentiment"]], "docker_topics package": [[10, "docker-topics-package"]], "docker_topics.main_topics module": [[10, "docker-topics-main-topics-module"]], "docker_topics_earning_call_transcripts package": [[11, "docker-topics-earning-call-transcripts-package"]], "docker_topics_earning_call_transcripts.earning_call_main module": [[11, "module-docker_topics_earning_call_transcripts.earning_call_main"]], "docker_topics_earning_call_transcripts.main module": [[11, "module-docker_topics_earning_call_transcripts.main"]], "docker_trend_prediction package": [[12, "docker-trend-prediction-package"]], "docker_trend_prediction.Trend_prediction module": [[12, "module-docker_trend_prediction.Trend_prediction"]], "Steps": [[12, "steps"], [12, "id5"], [12, "id9"]], "docker_tweets package": [[13, "docker-tweets-package"]], "docker_tweets.main module": [[13, "module-docker_tweets.main"]], "docker_tweets.news_ingestion_aws module": [[13, "module-docker_tweets.news_ingestion_aws"]], "docker_tweets.tweets_ingestion_aws module": [[13, "module-docker_tweets.tweets_ingestion_aws"]], "docker_tweets.News & Tweets Migration package": [[14, "docker-tweets-news-tweets-migration-package"]], "docker_tweets.News & Tweets Migration.s3_to_dynamo module": [[14, "docker-tweets-news-tweets-migration-s3-to-dynamo-module"]], "Welcome to AlgoFabric-Backend\u2019s documentation!": [[15, "welcome-to-algofabric-backend-s-documentation"]], "Contents:": [[15, null]], "Indices and tables": [[15, "indices-and-tables"]], "fabric_backend_AWS": [[16, "fabric-backend-aws"]]}, "indexentries": {"config_table() (in module docker_correlation.main)": [[0, "docker_correlation.main.config_table"]], "docker_correlation": [[0, "module-docker_correlation"]], "docker_correlation.generate_results": [[0, "module-docker_correlation.generate_results"]], "docker_correlation.main": [[0, "module-docker_correlation.main"]], "docker_correlation.news_extraction_dynamodb": [[0, "module-docker_correlation.news_extraction_dynamodb"]], "extract_new_data() (in module docker_correlation.main)": [[0, "docker_correlation.main.extract_new_data"]], "initialize_table() (in module docker_correlation.main)": [[0, "docker_correlation.main.initialize_table"]], "module": [[0, "module-docker_correlation"], [0, "module-docker_correlation.generate_results"], [0, "module-docker_correlation.main"], [0, "module-docker_correlation.news_extraction_dynamodb"], [1, "module-docker_debrief"], [1, "module-docker_debrief.access_file"], [1, "module-docker_debrief.create_json"], [1, "module-docker_debrief.get_dynamodb_data"], [1, "module-docker_debrief.helper"], [1, "module-docker_debrief.main"], [1, "module-docker_debrief.rds_db"], [2, "module-docker_enrichment"], [2, "module-docker_enrichment.main_v5"], [2, "module-docker_enrichment.new_main_v4"], [3, "module-docker_microservices"], [4, "module-docker_search"], [4, "module-docker_search.create_models"], [4, "module-docker_search.fetch_from_DB"], [4, "module-docker_search.models"], [4, "module-docker_search.remove_older_docs"], [4, "module-docker_search.update_embeddings"], [4, "module-docker_search.utils"], [5, "module-docker_search.tests"], [5, "module-docker_search.tests.test_api"], [5, "module-docker_search.tests.test_models"], [5, "module-docker_search.tests.test_utils"], [6, "module-docker_stock_ingestion"], [6, "module-docker_stock_ingestion.stock_ingestion"], [7, "module-docker_stock_prediction"], [8, "module-docker_stock_prediction.docker_stock_prediction"], [8, "module-docker_stock_prediction.docker_stock_prediction.stock_prediction_1"], [8, "module-docker_stock_prediction.docker_stock_prediction.stock_prediction_2"], [9, "module-docker_todays_sentiment"], [9, "module-docker_todays_sentiment.main"], [9, "module-docker_todays_sentiment.todays_sentiment"], [10, "module-docker_topics"], [11, "module-docker_topics_earning_call_transcripts"], [11, "module-docker_topics_earning_call_transcripts.earning_call_main"], [11, "module-docker_topics_earning_call_transcripts.main"], [12, "module-docker_trend_prediction"], [12, "module-docker_trend_prediction.Trend_prediction"], [13, "module-docker_tweets"], [13, "module-docker_tweets.main"], [13, "module-docker_tweets.news_ingestion_aws"], [13, "module-docker_tweets.tweets_ingestion_aws"]], "new_results() (in module docker_correlation.generate_results)": [[0, "docker_correlation.generate_results.new_results"]], "read_news_data1() (in module docker_correlation.news_extraction_dynamodb)": [[0, "docker_correlation.news_extraction_dynamodb.read_news_data1"]], "write_json_file() (in module docker_correlation.main)": [[0, "docker_correlation.main.write_json_file"]], "a_intro() (in module docker_debrief.access_file)": [[1, "docker_debrief.access_file.a_intro"]], "create_company_docs() (in module docker_debrief.create_json)": [[1, "docker_debrief.create_json.create_company_docs"]], "create_default() (in module docker_debrief.get_dynamodb_data)": [[1, "docker_debrief.get_dynamodb_data.create_default"]], "create_header() (in module docker_debrief.create_json)": [[1, "docker_debrief.create_json.create_header"]], "create_invalidation() (in module docker_debrief.helper)": [[1, "docker_debrief.helper.create_invalidation"]], "create_news() (in module docker_debrief.create_json)": [[1, "docker_debrief.create_json.create_news"]], "create_overview() (in module docker_debrief.create_json)": [[1, "docker_debrief.create_json.create_overview"]], "create_technical_analysis() (in module docker_debrief.create_json)": [[1, "docker_debrief.create_json.create_technical_analysis"]], "create_tweets() (in module docker_debrief.create_json)": [[1, "docker_debrief.create_json.create_tweets"]], "dict_none_output() (in module docker_debrief.create_json)": [[1, "docker_debrief.create_json.dict_None_output"]], "dict_output() (in module docker_debrief.create_json)": [[1, "docker_debrief.create_json.dict_output"]], "docker_debrief": [[1, "module-docker_debrief"]], "docker_debrief.access_file": [[1, "module-docker_debrief.access_file"]], "docker_debrief.create_json": [[1, "module-docker_debrief.create_json"]], "docker_debrief.get_dynamodb_data": [[1, "module-docker_debrief.get_dynamodb_data"]], "docker_debrief.helper": [[1, "module-docker_debrief.helper"]], "docker_debrief.main": [[1, "module-docker_debrief.main"]], "docker_debrief.rds_db": [[1, "module-docker_debrief.rds_db"]], "fetch_data_summary() (in module docker_debrief.create_json)": [[1, "docker_debrief.create_json.fetch_data_summary"]], "fetch_debrief_data() (in module docker_debrief.create_json)": [[1, "docker_debrief.create_json.fetch_debrief_data"]], "get_secret() (in module docker_debrief.access_file)": [[1, "docker_debrief.access_file.get_secret"]], "lambd_func() (in module docker_debrief.main)": [[1, "docker_debrief.main.lambd_func"]], "myconverter() (in module docker_debrief.helper)": [[1, "docker_debrief.helper.myconverter"]], "rds_con() (in module docker_debrief.rds_db)": [[1, "docker_debrief.rds_db.rds_con"]], "read_data_dynamodb() (in module docker_debrief.get_dynamodb_data)": [[1, "docker_debrief.get_dynamodb_data.read_data_dynamodb"]], "read_data_from_s3() (in module docker_debrief.create_json)": [[1, "docker_debrief.create_json.read_data_from_s3"]], "read_news_data() (in module docker_debrief.get_dynamodb_data)": [[1, "docker_debrief.get_dynamodb_data.read_news_data"]], "read_tweets_data() (in module docker_debrief.get_dynamodb_data)": [[1, "docker_debrief.get_dynamodb_data.read_tweets_data"]], "sum_get_total_news() (in module docker_debrief.get_dynamodb_data)": [[1, "docker_debrief.get_dynamodb_data.sum_get_total_news"]], "sum_get_total_tweets() (in module docker_debrief.get_dynamodb_data)": [[1, "docker_debrief.get_dynamodb_data.sum_get_total_tweets"]], "updated_dict() (in module docker_debrief.create_json)": [[1, "docker_debrief.create_json.updated_dict"]], "working_check() (in module docker_debrief.create_json)": [[1, "docker_debrief.create_json.working_check"]], "write_json_file() (in module docker_debrief.helper)": [[1, "docker_debrief.helper.write_json_file"]], "a_intro() (in module docker_enrichment.main_v5)": [[2, "docker_enrichment.main_v5.a_intro"]], "a_intro() (in module docker_enrichment.new_main_v4)": [[2, "docker_enrichment.new_main_v4.a_intro"]], "analyze_sentiment() (in module docker_enrichment.main_v5)": [[2, "docker_enrichment.main_v5.analyze_sentiment"]], "analyze_sentiment() (in module docker_enrichment.new_main_v4)": [[2, "docker_enrichment.new_main_v4.analyze_sentiment"]], "clean_text_new() (in module docker_enrichment.main_v5)": [[2, "docker_enrichment.main_v5.clean_text_new"]], "compute_summary() (in module docker_enrichment.main_v5)": [[2, "docker_enrichment.main_v5.compute_summary"]], "compute_summary() (in module docker_enrichment.new_main_v4)": [[2, "docker_enrichment.new_main_v4.compute_summary"]], "compute_summary_updated() (in module docker_enrichment.main_v5)": [[2, "docker_enrichment.main_v5.compute_summary_updated"]], "compute_summary_updated() (in module docker_enrichment.new_main_v4)": [[2, "docker_enrichment.new_main_v4.compute_summary_updated"]], "docker_enrichment": [[2, "module-docker_enrichment"]], "docker_enrichment.main_v5": [[2, "module-docker_enrichment.main_v5"]], "docker_enrichment.new_main_v4": [[2, "module-docker_enrichment.new_main_v4"]], "event_classification() (in module docker_enrichment.main_v5)": [[2, "docker_enrichment.main_v5.event_classification"]], "event_classification() (in module docker_enrichment.new_main_v4)": [[2, "docker_enrichment.new_main_v4.event_classification"]], "extract_org_frequency() (in module docker_enrichment.main_v5)": [[2, "docker_enrichment.main_v5.extract_org_frequency"]], "extract_org_frequency() (in module docker_enrichment.new_main_v4)": [[2, "docker_enrichment.new_main_v4.extract_org_frequency"]], "extract_sents() (in module docker_enrichment.main_v5)": [[2, "docker_enrichment.main_v5.extract_sents"]], "extract_sents() (in module docker_enrichment.new_main_v4)": [[2, "docker_enrichment.new_main_v4.extract_sents"]], "fetch_config_data() (in module docker_enrichment.main_v5)": [[2, "docker_enrichment.main_v5.fetch_config_data"]], "fetch_config_data() (in module docker_enrichment.new_main_v4)": [[2, "docker_enrichment.new_main_v4.fetch_config_data"]], "fetch_data_from_table() (in module docker_enrichment.main_v5)": [[2, "docker_enrichment.main_v5.fetch_data_from_table"]], "fetch_data_from_table() (in module docker_enrichment.new_main_v4)": [[2, "docker_enrichment.new_main_v4.fetch_data_from_table"]], "find_sent_with_company() (in module docker_enrichment.main_v5)": [[2, "docker_enrichment.main_v5.find_sent_with_company"]], "find_sent_with_company() (in module docker_enrichment.new_main_v4)": [[2, "docker_enrichment.new_main_v4.find_sent_with_company"]], "get_connection() (in module docker_enrichment.main_v5)": [[2, "docker_enrichment.main_v5.get_connection"]], "get_connection() (in module docker_enrichment.new_main_v4)": [[2, "docker_enrichment.new_main_v4.get_connection"]], "get_news_labels() (in module docker_enrichment.main_v5)": [[2, "docker_enrichment.main_v5.get_news_labels"]], "get_sentiment_class() (in module docker_enrichment.main_v5)": [[2, "docker_enrichment.main_v5.get_sentiment_class"]], "get_sentiment_class() (in module docker_enrichment.new_main_v4)": [[2, "docker_enrichment.new_main_v4.get_sentiment_class"]], "get_sentiment_modified() (in module docker_enrichment.main_v5)": [[2, "docker_enrichment.main_v5.get_sentiment_modified"]], "get_sentiment_modified() (in module docker_enrichment.new_main_v4)": [[2, "docker_enrichment.new_main_v4.get_sentiment_modified"]], "get_ticker_names_and_id() (in module docker_enrichment.main_v5)": [[2, "docker_enrichment.main_v5.get_ticker_names_and_id"]], "get_ticker_names_and_id() (in module docker_enrichment.new_main_v4)": [[2, "docker_enrichment.new_main_v4.get_ticker_names_and_id"]], "load_pickle_file() (in module docker_enrichment.main_v5)": [[2, "docker_enrichment.main_v5.load_pickle_file"]], "perform_enrichment() (in module docker_enrichment.main_v5)": [[2, "docker_enrichment.main_v5.perform_enrichment"]], "perform_enrichment() (in module docker_enrichment.new_main_v4)": [[2, "docker_enrichment.new_main_v4.perform_enrichment"]], "stemming() (in module docker_enrichment.main_v5)": [[2, "docker_enrichment.main_v5.stemming"]], "update_table() (in module docker_enrichment.main_v5)": [[2, "docker_enrichment.main_v5.update_table"]], "update_table() (in module docker_enrichment.new_main_v4)": [[2, "docker_enrichment.new_main_v4.update_table"]], "upload_data() (in module docker_enrichment.main_v5)": [[2, "docker_enrichment.main_v5.upload_data"]], "upload_data() (in module docker_enrichment.new_main_v4)": [[2, "docker_enrichment.new_main_v4.upload_data"]], "docker_microservices": [[3, "module-docker_microservices"]], "a_intro() (in module docker_search.create_models)": [[4, "docker_search.create_models.a_intro"]], "a_intro() (in module docker_search.fetch_from_db)": [[4, "docker_search.fetch_from_DB.a_intro"]], "a_intro() (in module docker_search.models)": [[4, "docker_search.models.a_intro"]], "a_intro() (in module docker_search.remove_older_docs)": [[4, "docker_search.remove_older_docs.a_intro"]], "a_intro() (in module docker_search.update_embeddings)": [[4, "docker_search.update_embeddings.a_intro"]], "a_intro() (in module docker_search.utils)": [[4, "docker_search.utils.a_intro"]], "assign_unique_ids() (in module docker_search.fetch_from_db)": [[4, "docker_search.fetch_from_DB.assign_unique_ids"]], "check_type() (in module docker_search.utils)": [[4, "docker_search.utils.check_type"]], "convert_datetime_to_date() (in module docker_search.utils)": [[4, "docker_search.utils.convert_datetime_to_date"]], "create_resources() (in module docker_search.create_models)": [[4, "docker_search.create_models.create_resources"]], "docker_search": [[4, "module-docker_search"]], "docker_search.create_models": [[4, "module-docker_search.create_models"]], "docker_search.fetch_from_db": [[4, "module-docker_search.fetch_from_DB"]], "docker_search.models": [[4, "module-docker_search.models"]], "docker_search.remove_older_docs": [[4, "module-docker_search.remove_older_docs"]], "docker_search.update_embeddings": [[4, "module-docker_search.update_embeddings"]], "docker_search.utils": [[4, "module-docker_search.utils"]], "fetch_data() (in module docker_search.fetch_from_db)": [[4, "docker_search.fetch_from_DB.fetch_data"]], "get_documentids_from_uuid() (in module docker_search.utils)": [[4, "docker_search.utils.get_documentids_from_uuid"]], "get_documents_from_document_ids() (in module docker_search.utils)": [[4, "docker_search.utils.get_documents_from_document_ids"]], "get_documents_from_filenames() (in module docker_search.utils)": [[4, "docker_search.utils.get_documents_from_filenames"]], "get_dynamodb_connection() (in module docker_search.utils)": [[4, "docker_search.utils.get_dynamodb_connection"]], "get_dynamodb_table() (in module docker_search.utils)": [[4, "docker_search.utils.get_dynamodb_table"]], "get_today() (in module docker_search.utils)": [[4, "docker_search.utils.get_today"]], "load_document_search_pipeline() (in module docker_search.models)": [[4, "docker_search.models.load_document_search_pipeline"]], "load_document_store() (in module docker_search.models)": [[4, "docker_search.models.load_document_store"]], "load_preprocessor() (in module docker_search.models)": [[4, "docker_search.models.load_preprocessor"]], "load_query_classifier() (in module docker_search.models)": [[4, "docker_search.models.load_query_classifier"]], "load_reader() (in module docker_search.models)": [[4, "docker_search.models.load_reader"]], "load_retriever() (in module docker_search.models)": [[4, "docker_search.models.load_retriever"]], "months_between() (in module docker_search.utils)": [[4, "docker_search.utils.months_between"]], "outside_threshold() (in module docker_search.utils)": [[4, "docker_search.utils.outside_threshold"]], "process_prediction() (in module docker_search.utils)": [[4, "docker_search.utils.process_prediction"]], "process_qna_prediction() (in module docker_search.utils)": [[4, "docker_search.utils.process_qna_prediction"]], "remove_duplicates() (in module docker_search.fetch_from_db)": [[4, "docker_search.fetch_from_DB.remove_duplicates"]], "remove_older_docs() (in module docker_search.remove_older_docs)": [[4, "docker_search.remove_older_docs.remove_older_docs"]], "save_items_to_text_files() (in module docker_search.fetch_from_db)": [[4, "docker_search.fetch_from_DB.save_items_to_text_files"]], "transform_to_ui_format() (in module docker_search.utils)": [[4, "docker_search.utils.transform_to_ui_format"]], "update_embeddings() (in module docker_search.update_embeddings)": [[4, "docker_search.update_embeddings.update_embeddings"]], "docker_search.tests": [[5, "module-docker_search.tests"]], "docker_search.tests.test_api": [[5, "module-docker_search.tests.test_api"]], "docker_search.tests.test_models": [[5, "module-docker_search.tests.test_models"]], "docker_search.tests.test_utils": [[5, "module-docker_search.tests.test_utils"]], "test_convert_datetime_to_date() (in module docker_search.tests.test_utils)": [[5, "docker_search.tests.test_utils.test_convert_datetime_to_date"]], "test_health_check() (in module docker_search.tests.test_api)": [[5, "docker_search.tests.test_api.test_health_check"]], "test_load_reader() (in module docker_search.tests.test_models)": [[5, "docker_search.tests.test_models.test_load_reader"]], "test_outside_threshold_with_invalid_date() (in module docker_search.tests.test_utils)": [[5, "docker_search.tests.test_utils.test_outside_threshold_with_invalid_date"]], "test_outside_threshold_with_valid_date() (in module docker_search.tests.test_utils)": [[5, "docker_search.tests.test_utils.test_outside_threshold_with_valid_date"]], "test_question_answer_pipeline() (in module docker_search.tests.test_api)": [[5, "docker_search.tests.test_api.test_question_answer_pipeline"]], "test_retriever() (in module docker_search.tests.test_models)": [[5, "docker_search.tests.test_models.test_retriever"]], "test_semantic_search_news_response() (in module docker_search.tests.test_api)": [[5, "docker_search.tests.test_api.test_semantic_search_news_response"]], "test_semantic_search_pipeline() (in module docker_search.tests.test_api)": [[5, "docker_search.tests.test_api.test_semantic_search_pipeline"]], "test_semantic_search_tweets_response() (in module docker_search.tests.test_api)": [[5, "docker_search.tests.test_api.test_semantic_search_tweets_response"]], "test_wrong_type() (in module docker_search.tests.test_utils)": [[5, "docker_search.tests.test_utils.test_wrong_type"]], "a_intro() (in module docker_stock_ingestion.stock_ingestion)": [[6, "docker_stock_ingestion.stock_ingestion.a_intro"]], "crawl_stock() (in module docker_stock_ingestion.stock_ingestion)": [[6, "docker_stock_ingestion.stock_ingestion.crawl_stock"]], "docker_stock_ingestion": [[6, "module-docker_stock_ingestion"]], "docker_stock_ingestion.stock_ingestion": [[6, "module-docker_stock_ingestion.stock_ingestion"]], "get_connection() (in module docker_stock_ingestion.stock_ingestion)": [[6, "docker_stock_ingestion.stock_ingestion.get_connection"]], "get_secret() (in module docker_stock_ingestion.stock_ingestion)": [[6, "docker_stock_ingestion.stock_ingestion.get_secret"]], "docker_stock_prediction": [[7, "module-docker_stock_prediction"]], "binary_classify() (in module docker_stock_prediction.docker_stock_prediction.stock_prediction_1)": [[8, "docker_stock_prediction.docker_stock_prediction.stock_prediction_1.binary_classify"]], "build_feature() (in module docker_stock_prediction.docker_stock_prediction.stock_prediction_1)": [[8, "docker_stock_prediction.docker_stock_prediction.stock_prediction_1.build_feature"]], "build_function_sector() (in module docker_stock_prediction.docker_stock_prediction.stock_prediction_1)": [[8, "docker_stock_prediction.docker_stock_prediction.stock_prediction_1.build_function_sector"]], "build_model() (in module docker_stock_prediction.docker_stock_prediction.stock_prediction_1)": [[8, "docker_stock_prediction.docker_stock_prediction.stock_prediction_1.build_model"]], "build_model() (in module docker_stock_prediction.docker_stock_prediction.stock_prediction_2)": [[8, "docker_stock_prediction.docker_stock_prediction.stock_prediction_2.build_model"]], "build_returns_and_output() (in module docker_stock_prediction.docker_stock_prediction.stock_prediction_1)": [[8, "docker_stock_prediction.docker_stock_prediction.stock_prediction_1.build_returns_and_output"]], "build_sentiment_mapping_csv() (in module docker_stock_prediction.docker_stock_prediction.stock_prediction_1)": [[8, "docker_stock_prediction.docker_stock_prediction.stock_prediction_1.build_sentiment_mapping_csv"]], "calculate_sentiment() (in module docker_stock_prediction.docker_stock_prediction.stock_prediction_1)": [[8, "docker_stock_prediction.docker_stock_prediction.stock_prediction_1.calculate_sentiment"]], "calculate_total_news() (in module docker_stock_prediction.docker_stock_prediction.stock_prediction_1)": [[8, "docker_stock_prediction.docker_stock_prediction.stock_prediction_1.calculate_total_news"]], "compute_accuracy_score() (in module docker_stock_prediction.docker_stock_prediction.stock_prediction_1)": [[8, "docker_stock_prediction.docker_stock_prediction.stock_prediction_1.compute_accuracy_score"]], "compute_accuracy_score() (in module docker_stock_prediction.docker_stock_prediction.stock_prediction_2)": [[8, "docker_stock_prediction.docker_stock_prediction.stock_prediction_2.compute_accuracy_score"]], "compute_auc() (in module docker_stock_prediction.docker_stock_prediction.stock_prediction_1)": [[8, "docker_stock_prediction.docker_stock_prediction.stock_prediction_1.compute_auc"]], "compute_auc() (in module docker_stock_prediction.docker_stock_prediction.stock_prediction_2)": [[8, "docker_stock_prediction.docker_stock_prediction.stock_prediction_2.compute_auc"]], "compute_f1() (in module docker_stock_prediction.docker_stock_prediction.stock_prediction_1)": [[8, "docker_stock_prediction.docker_stock_prediction.stock_prediction_1.compute_f1"]], "compute_f1() (in module docker_stock_prediction.docker_stock_prediction.stock_prediction_2)": [[8, "docker_stock_prediction.docker_stock_prediction.stock_prediction_2.compute_f1"]], "compute_indicators() (in module docker_stock_prediction.docker_stock_prediction.stock_prediction_2)": [[8, "docker_stock_prediction.docker_stock_prediction.stock_prediction_2.compute_indicators"]], "compute_output() (in module docker_stock_prediction.docker_stock_prediction.stock_prediction_2)": [[8, "docker_stock_prediction.docker_stock_prediction.stock_prediction_2.compute_output"]], "display_training_results() (in module docker_stock_prediction.docker_stock_prediction.stock_prediction_2)": [[8, "docker_stock_prediction.docker_stock_prediction.stock_prediction_2.display_training_results"]], "docker_stock_prediction.docker_stock_prediction": [[8, "module-docker_stock_prediction.docker_stock_prediction"]], "docker_stock_prediction.docker_stock_prediction.stock_prediction_1": [[8, "module-docker_stock_prediction.docker_stock_prediction.stock_prediction_1"]], "docker_stock_prediction.docker_stock_prediction.stock_prediction_2": [[8, "module-docker_stock_prediction.docker_stock_prediction.stock_prediction_2"]], "generate_feature() (in module docker_stock_prediction.docker_stock_prediction.stock_prediction_2)": [[8, "docker_stock_prediction.docker_stock_prediction.stock_prediction_2.generate_feature"]], "generate_x() (in module docker_stock_prediction.docker_stock_prediction.stock_prediction_1)": [[8, "docker_stock_prediction.docker_stock_prediction.stock_prediction_1.generate_x"]], "generate_x_ws() (in module docker_stock_prediction.docker_stock_prediction.stock_prediction_1)": [[8, "docker_stock_prediction.docker_stock_prediction.stock_prediction_1.generate_x_ws"]], "get_classifier() (in module docker_stock_prediction.docker_stock_prediction.stock_prediction_1)": [[8, "docker_stock_prediction.docker_stock_prediction.stock_prediction_1.get_classifier"]], "get_classifier() (in module docker_stock_prediction.docker_stock_prediction.stock_prediction_2)": [[8, "docker_stock_prediction.docker_stock_prediction.stock_prediction_2.get_classifier"]], "get_connection() (in module docker_stock_prediction.docker_stock_prediction.stock_prediction_1)": [[8, "docker_stock_prediction.docker_stock_prediction.stock_prediction_1.get_connection"]], "get_connection() (in module docker_stock_prediction.docker_stock_prediction.stock_prediction_2)": [[8, "docker_stock_prediction.docker_stock_prediction.stock_prediction_2.get_connection"]], "get_cross_validator() (in module docker_stock_prediction.docker_stock_prediction.stock_prediction_1)": [[8, "docker_stock_prediction.docker_stock_prediction.stock_prediction_1.get_cross_validator"]], "get_news() (in module docker_stock_prediction.docker_stock_prediction.stock_prediction_1)": [[8, "docker_stock_prediction.docker_stock_prediction.stock_prediction_1.get_news"]], "get_secret() (in module docker_stock_prediction.docker_stock_prediction.stock_prediction_1)": [[8, "docker_stock_prediction.docker_stock_prediction.stock_prediction_1.get_secret"]], "get_secret() (in module docker_stock_prediction.docker_stock_prediction.stock_prediction_2)": [[8, "docker_stock_prediction.docker_stock_prediction.stock_prediction_2.get_secret"]], "get_ticker_names_and_id() (in module docker_stock_prediction.docker_stock_prediction.stock_prediction_1)": [[8, "docker_stock_prediction.docker_stock_prediction.stock_prediction_1.get_ticker_names_and_id"]], "get_ticker_names_and_id() (in module docker_stock_prediction.docker_stock_prediction.stock_prediction_2)": [[8, "docker_stock_prediction.docker_stock_prediction.stock_prediction_2.get_ticker_names_and_id"]], "main_function() (in module docker_stock_prediction.docker_stock_prediction.stock_prediction_2)": [[8, "docker_stock_prediction.docker_stock_prediction.stock_prediction_2.main_function"]], "map_sentiment() (in module docker_stock_prediction.docker_stock_prediction.stock_prediction_1)": [[8, "docker_stock_prediction.docker_stock_prediction.stock_prediction_1.map_sentiment"]], "process_output() (in module docker_stock_prediction.docker_stock_prediction.stock_prediction_1)": [[8, "docker_stock_prediction.docker_stock_prediction.stock_prediction_1.process_output"]], "process_output() (in module docker_stock_prediction.docker_stock_prediction.stock_prediction_2)": [[8, "docker_stock_prediction.docker_stock_prediction.stock_prediction_2.process_output"]], "save_model_to_db() (in module docker_stock_prediction.docker_stock_prediction.stock_prediction_1)": [[8, "docker_stock_prediction.docker_stock_prediction.stock_prediction_1.save_model_to_db"]], "train_model() (in module docker_stock_prediction.docker_stock_prediction.stock_prediction_2)": [[8, "docker_stock_prediction.docker_stock_prediction.stock_prediction_2.train_model"]], "write_data_to_rds() (in module docker_stock_prediction.docker_stock_prediction.stock_prediction_1)": [[8, "docker_stock_prediction.docker_stock_prediction.stock_prediction_1.write_data_to_RDS"]], "write_data_to_rds() (in module docker_stock_prediction.docker_stock_prediction.stock_prediction_2)": [[8, "docker_stock_prediction.docker_stock_prediction.stock_prediction_2.write_data_to_RDS"]], "calculate_sentiment() (in module docker_todays_sentiment.todays_sentiment)": [[9, "docker_todays_sentiment.todays_sentiment.calculate_sentiment"]], "config_table() (in module docker_todays_sentiment.main)": [[9, "docker_todays_sentiment.main.config_table"]], "docker_todays_sentiment": [[9, "module-docker_todays_sentiment"]], "docker_todays_sentiment.main": [[9, "module-docker_todays_sentiment.main"]], "docker_todays_sentiment.todays_sentiment": [[9, "module-docker_todays_sentiment.todays_sentiment"]], "extract_new_data() (in module docker_todays_sentiment.main)": [[9, "docker_todays_sentiment.main.extract_new_data"]], "initialize_table() (in module docker_todays_sentiment.main)": [[9, "docker_todays_sentiment.main.initialize_table"]], "read_result_data() (in module docker_todays_sentiment.main)": [[9, "docker_todays_sentiment.main.read_result_data"]], "write_json_file() (in module docker_todays_sentiment.main)": [[9, "docker_todays_sentiment.main.write_json_file"]], "docker_topics": [[10, "module-docker_topics"]], "optimal_model() (in module docker_topics_earning_call_transcripts.earning_call_main)": [[11, "docker_topics_earning_call_transcripts.earning_call_main.Optimal_Model"]], "optimal_model() (in module docker_topics_earning_call_transcripts.main)": [[11, "docker_topics_earning_call_transcripts.main.Optimal_Model"]], "sentiment_analysis() (in module docker_topics_earning_call_transcripts.earning_call_main)": [[11, "docker_topics_earning_call_transcripts.earning_call_main.Sentiment_Analysis"]], "topic_modeling_negative() (in module docker_topics_earning_call_transcripts.earning_call_main)": [[11, "docker_topics_earning_call_transcripts.earning_call_main.Topic_Modeling_Negative"]], "topic_modeling_news() (in module docker_topics_earning_call_transcripts.main)": [[11, "docker_topics_earning_call_transcripts.main.Topic_Modeling_News"]], "topic_modeling_positive() (in module docker_topics_earning_call_transcripts.earning_call_main)": [[11, "docker_topics_earning_call_transcripts.earning_call_main.Topic_Modeling_Positive"]], "topic_modeling_tweets() (in module docker_topics_earning_call_transcripts.main)": [[11, "docker_topics_earning_call_transcripts.main.Topic_Modeling_Tweets"]], "word_cloud_freq() (in module docker_topics_earning_call_transcripts.earning_call_main)": [[11, "docker_topics_earning_call_transcripts.earning_call_main.Word_Cloud_Freq"]], "word_cloud_freq() (in module docker_topics_earning_call_transcripts.main)": [[11, "docker_topics_earning_call_transcripts.main.Word_Cloud_Freq"]], "build_dataframe() (in module docker_topics_earning_call_transcripts.earning_call_main)": [[11, "docker_topics_earning_call_transcripts.earning_call_main.build_dataframe"]], "clean_text() (in module docker_topics_earning_call_transcripts.earning_call_main)": [[11, "docker_topics_earning_call_transcripts.earning_call_main.clean_text"]], "clean_text_modified() (in module docker_topics_earning_call_transcripts.main)": [[11, "docker_topics_earning_call_transcripts.main.clean_text_modified"]], "docker_topics_earning_call_transcripts": [[11, "module-docker_topics_earning_call_transcripts"]], "docker_topics_earning_call_transcripts.earning_call_main": [[11, "module-docker_topics_earning_call_transcripts.earning_call_main"]], "docker_topics_earning_call_transcripts.main": [[11, "module-docker_topics_earning_call_transcripts.main"]], "format_topics_sentences() (in module docker_topics_earning_call_transcripts.earning_call_main)": [[11, "docker_topics_earning_call_transcripts.earning_call_main.format_topics_sentences"]], "format_topics_sentences() (in module docker_topics_earning_call_transcripts.main)": [[11, "docker_topics_earning_call_transcripts.main.format_topics_sentences"]], "get_result() (in module docker_topics_earning_call_transcripts.earning_call_main)": [[11, "docker_topics_earning_call_transcripts.earning_call_main.get_result"]], "get_ticker_names_and_id() (in module docker_topics_earning_call_transcripts.main)": [[11, "docker_topics_earning_call_transcripts.main.get_ticker_names_and_id"]], "lemmatization() (in module docker_topics_earning_call_transcripts.earning_call_main)": [[11, "docker_topics_earning_call_transcripts.earning_call_main.lemmatization"]], "read_news_data() (in module docker_topics_earning_call_transcripts.main)": [[11, "docker_topics_earning_call_transcripts.main.read_news_data"]], "read_tweets_data() (in module docker_topics_earning_call_transcripts.main)": [[11, "docker_topics_earning_call_transcripts.main.read_tweets_data"]], "remove_stopwords() (in module docker_topics_earning_call_transcripts.earning_call_main)": [[11, "docker_topics_earning_call_transcripts.earning_call_main.remove_stopwords"]], "sentiment() (in module docker_topics_earning_call_transcripts.earning_call_main)": [[11, "docker_topics_earning_call_transcripts.earning_call_main.sentiment"]], "text_preprocessing_fn() (in module docker_topics_earning_call_transcripts.main)": [[11, "docker_topics_earning_call_transcripts.main.text_preprocessing_fn"]], "build_model() (in module docker_trend_prediction.trend_prediction)": [[12, "docker_trend_prediction.Trend_prediction.build_model"]], "compute_output() (in module docker_trend_prediction.trend_prediction)": [[12, "docker_trend_prediction.Trend_prediction.compute_output"]], "compute_trend_variable() (in module docker_trend_prediction.trend_prediction)": [[12, "docker_trend_prediction.Trend_prediction.compute_trend_variable"]], "docker_trend_prediction": [[12, "module-docker_trend_prediction"]], "docker_trend_prediction.trend_prediction": [[12, "module-docker_trend_prediction.Trend_prediction"]], "get_regressor() (in module docker_trend_prediction.trend_prediction)": [[12, "docker_trend_prediction.Trend_prediction.get_regressor"]], "train_model() (in module docker_trend_prediction.trend_prediction)": [[12, "docker_trend_prediction.Trend_prediction.train_model"]], "find_url() (in module docker_tweets.news_ingestion_aws)": [[13, "docker_tweets.news_ingestion_aws.Find_url"]], "a_intro() (in module docker_tweets.main)": [[13, "docker_tweets.main.a_intro"]], "a_intro() (in module docker_tweets.news_ingestion_aws)": [[13, "docker_tweets.news_ingestion_aws.a_intro"]], "a_intro() (in module docker_tweets.tweets_ingestion_aws)": [[13, "docker_tweets.tweets_ingestion_aws.a_intro"]], "add_news_article() (in module docker_tweets.news_ingestion_aws)": [[13, "docker_tweets.news_ingestion_aws.add_news_article"]], "contains_irrelavant_words() (in module docker_tweets.tweets_ingestion_aws)": [[13, "docker_tweets.tweets_ingestion_aws.contains_irrelavant_words"]], "contains_minimum_tokens() (in module docker_tweets.tweets_ingestion_aws)": [[13, "docker_tweets.tweets_ingestion_aws.contains_minimum_tokens"]], "crawl_news_by_keyword() (in module docker_tweets.news_ingestion_aws)": [[13, "docker_tweets.news_ingestion_aws.crawl_news_by_keyword"]], "crawl_tweets_by_keyword() (in module docker_tweets.tweets_ingestion_aws)": [[13, "docker_tweets.tweets_ingestion_aws.crawl_tweets_by_keyword"]], "docker_tweets": [[13, "module-docker_tweets"]], "docker_tweets.main": [[13, "module-docker_tweets.main"]], "docker_tweets.news_ingestion_aws": [[13, "module-docker_tweets.news_ingestion_aws"]], "docker_tweets.tweets_ingestion_aws": [[13, "module-docker_tweets.tweets_ingestion_aws"]], "filter_tweet() (in module docker_tweets.tweets_ingestion_aws)": [[13, "docker_tweets.tweets_ingestion_aws.filter_tweet"]], "get_content() (in module docker_tweets.news_ingestion_aws)": [[13, "docker_tweets.news_ingestion_aws.get_content"]], "news_lang_check() (in module docker_tweets.news_ingestion_aws)": [[13, "docker_tweets.news_ingestion_aws.news_lang_check"]], "news_longdesc_check() (in module docker_tweets.news_ingestion_aws)": [[13, "docker_tweets.news_ingestion_aws.news_longDesc_check"]], "update_tweet_table() (in module docker_tweets.tweets_ingestion_aws)": [[13, "docker_tweets.tweets_ingestion_aws.update_tweet_table"]]}})